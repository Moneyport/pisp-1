@startuml

title PISPTransferDetailedAPI

!include participants_api.iuml

rnote right of D1 #Light
**""POST /thirdpartyRequests/transfers""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: dfspa""
{
  "quoteId": "456",
  "transactionId": "85feac2f-39b2-491b-817e-4a03203d4f14",
  "transactionRequestId": "123",
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "personalInfo": {
      "complexName": {
        "firstName": "Ayesha",
        "lastName": "Takia"
      }
    },
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+44 8765 4321",
      "fspId": "dfspa"
    }
  },
  //This tells dfspa which account to deduct funds from
  //it's an opaque identifier that the DFSP knows about
  **"sourceAccountId": "dfspa.1111-2222",**
  //This tells dfspa and auth-service which consent allows the pisp to initiate this tx
  **"consentId": "111"**
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER", 
    "initiatorType": "CONSUMER"
  },
  "expiration": "2020-06-15T22:17:28.985-01:00"
}
end note
D1 -> S: ""POST /thirdpartyRequests/transfers""
S --> D1: ""202 Accepted""

rnote over S #Light
**""POST /thirdpartyRequests/transfers""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: dfspa""
{
  "quoteId": "456",
  "transactionId": "987",
  "transactionRequestId": "123",
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "personalInfo": {
      "complexName": {
        "firstName": "Ayesha",
        "lastName": "Takia"
      }
    },
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+44 8765 4321",
      "fspId": "dfspa"
    },
    //This tells dfspa which account to deduct funds from
    //it's an opaque identifier that the DFSP knows about
    **"sourceAccountId": "dfspa.1111-2222",**
    //This tells dfspa and auth-service which consent allows the pisp to initiate this tx
    **"consentId": "111"**
  },
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER", 
    "initiatorType": "CONSUMER"
  },
  "expiration": "2020-06-15T00:00:00.000"
}
end note
S -> D2: ""POST /thirdpartyRequests/transfers""
D2 -> D2: Lookup this ""consentId"", ""sourceAccountId"" \nand ""pispId"". Verify that they exist, and consent \nis granted with a valid credential

D2 --> S: ""202 Accepted""

rnote left of D2 #Light
**""POST /quotes""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: dfspb""
{
  "quoteId": "456",
  "transactionId": "987",
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "personalInfo": {
      "complexName": {
        "firstName": "Ayesha",
        "lastName": "Takia"
      }
    },
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+44 8765 4321",
      "fspId": "dfspa"
    },
  },
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER",
    "initiatorType": "CONSUMER"
  },
  "note": "quote note"
}
end note
D2 -> S: ""POST /quotes""
S --> D2: ""202 Accepted""

rnote over S #Light
**""POST /quotes""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: dfspb""
{
  "quoteId": "456",
  "transactionId": "987",
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "personalInfo": {
      "complexName": {
        "firstName": "Ayesha",
        "lastName": "Takia"
      }
    },
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+44 8765 4321",
      "fspId": "dfspa"
    },
  },
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER",
    "initiatorType": "CONSUMER"
  },
  "note": "quote note"
}
end note
S -> D3: ""POST /quotes""
D3 --> S: ""202 Accepted""

rnote left of D2 #Light
**""PUT /quotes/456""**
""FSPIOP-Source: dfspb""
""FSPIOP-Destination: dfspa""
{
  "transferAmount": {
    "amount": "100",
    "currency": "USD"
  },
  "payeeReceiveAmount": {
    "amount": "99",
    "currency": "USD"
  },
  "payeeFspFee": {
    "amount": "1",
    "currency": "USD"
  },
  "expiration": "2020-06-15T12:00:00.000",
  "ilpPacket": "...",
  "condition": "...",
}
end note
D3 -> S: ""PUT /quotes/456""
S --> D3: ""202 Accepted""

rnote left of D2 #Light
**""PUT /quotes/456""**
""FSPIOP-Source: dfspb""
""FSPIOP-Destination: dfspa""
{
  "transferAmount": {
    "amount": "100",
    "currency": "USD"
  },
  "payeeReceiveAmount": {
    "amount": "99",
    "currency": "USD"
  },
  "payeeFspFee": {
    "amount": "1",
    "currency": "USD"
  },
  "expiration": "2020-06-15T12:00:00.000",
  "ilpPacket": "...",
  "condition": "...",
}
end note
S -> D2: ""PUT /quotes/456""
D2 --> S: ""202 Accepted""

rnote left of D2 #Light
**""POST /authorizations""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: pispa""
{      
  "authenticationType": "U2F",
  "retriesLeft": "1",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionId": "987",
  "transactionRequestId": "123",
  "quote": {
    "transferAmount": {
      "amount": "100",
      "currency": "USD"
    },
    "payeeReceiveAmount": {
      "amount": "99",
      "currency": "USD"
    },
    "payeeFspFee": {
      "amount": "1",
      "currency": "USD"
    },
    "expiration": "2020-06-15T12:00:00.000",
    "ilpPacket": "...",
    "condition": "...",
  }
}
end note
D2 -> S: ""POST /authorizations""
S --> D2: ""202 Accepted""

rnote over S #Light
**""POST /authorizations""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: pispa""
{      
  "authenticationType": "U2F",
  "retriesLeft": "1",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionId": "987",
  "transactionRequestId": "123",
  "quote": {
    "transferAmount": {
      "amount": "100",
      "currency": "USD"
    },
    "payeeReceiveAmount": {
      "amount": "99",
      "currency": "USD"
    },
    "payeeFspFee": {
      "amount": "1",
      "currency": "USD"
    },
    "expiration": "2020-06-15T12:00:00.000",
    "ilpPacket": "...",
    "condition": "...",
  }
}
end note
S -> D1: ""POST /authorizations""
D1 --> S: ""202 Accepted""

...PISP checks the quote with the user, and uses FIDO to sign the some set of fields on the quote object ...

note right of D1
  PISP finds out who takes care of the auth-service for dfspa
end note

rnote right of D1 #Light
**""GET /participants/AUTHSERVICE/dfspa""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: switch""
end note
D1 -> S: ""GET /participants/AUTHSERVICE/dfspa""
S --> D1: ""202 Accepted""


note right of S
  Switch performs synchronous account lookup
end note
S -> A: ""GET /participants/AUTHSERVICE/dfspa""
A --> S: ""{ "fspId":"central-auth" }""


rnote over S #Light
**""PUT /participants/AUTHSERVICE/dfspa""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: switch""
{
  "fspId":"central-auth"
}
end note
S -> D1: ""PUT /participants/AUTHSERVICE/dfspa""
D1 --> S: ""202 Accepted""

rnote right of D1 #Light
' TODO: do we want an authorizations?
' TODO: add signature and consent to a quote?
**""PUT /authorizations/123""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: central-auth""
{
  "authenticationInfo": {
    "authentication": "U2F",
    "authenticationValue": {
      "pinValue": "<base64 encoded binary - the signed condition>",
      "counter": "1"
    },
    "consentId": "111",
    "quoteId": "",
    ' Do we need quoteID? probably
    ' what are we signing? the condition? 
    ""
  }
  "responseType": "ENTERED"
}
end note
D1 -> S: ""PUT /authorizations/123""
note right of D1 
  **Note!** we use the same ""transactionRequestId"" here as the authorization.id
end note
S --> D1: ""202 Accepted""


rnote over S #Light
**""PUT /authorizations/123""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: central-auth""
{
  "authenticationInfo": {
    "authentication": "U2F",
    "authenticationValue": {
      "pinValue": "<base64 encoded binary - the signed condition>",
      "counter": "1"
    }
  }
  "responseType": "ENTERED"
}
end note
S -> AUTHS: ""PUT /authorizations/123""
AUTHS --> S: ""202 Accepted""

note over AUTHS
  Auth Service checks the signed challenge against the
  previously registered public key
end note

rnote over AUTHS #Light
//TODO: The AuthService has no context about the ""thirdpartyRequest"" or ""quote""!!
how can it:
1. get the consentId?
2. get the condition (challenge) that has been signed?
3. check that the condition matches a quote?
4. Know where to get the ""FSPIOP-Destination: dfspa"" header from? - from the consent! 

**""PUT /authorizations/123""**
""FSPIOP-Source: central-auth""
""FSPIOP-Destination: dfspa""
{
  "authenticationInfo": {
    "authentication": "U2F",
    "authenticationValue": {
      "pinValue": "<base64 encoded binary - the signed condition>",
      "counter": "1"
    }
  }
  "responseType": "ENTERED"
}
end note
AUTHS -> S: ""PUT /authorizations/123""
S --> AUTHS: ""202 Accepted""

rnote over S #Light
**""PUT /authorizations/123""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: dfspa""
{
  "authenticationInfo": {
    "authentication": "U2F",
    "authenticationValue": {
      "pinValue": "<base64 encoded binary - the signed condition>",
      "counter": 1
    }
  }
  "responseType": "ENTERED"
}
end note
S -> D2: ""PUT /authorizations/123""
D2 --> S: ""202 Accepted""


@enduml