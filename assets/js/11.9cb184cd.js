(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{320:function(e,t,a){e.exports=a.p+"assets/img/OutboundThirdpartyTransactionModel.39381e48.svg"},321:function(e,t,a){e.exports=a.p+"assets/img/InboundThirdpartyTransactionModel.4a2d44bd.svg"},363:function(e,t,a){"use strict";a.r(t);var o=a(43),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"scheme-adapter-changes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scheme-adapter-changes"}},[e._v("#")]),e._v(" Scheme Adapter Changes")]),e._v(" "),o("p",[e._v("A design document to explain/discuss the changes required in the "),o("code",[e._v("sdk-scheme-adapter")]),e._v(" to implement PISP functionality.")]),e._v(" "),o("h2",{attrs:{id:"scheme-adapter-background"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#scheme-adapter-background"}},[e._v("#")]),e._v(" Scheme Adapter Background")]),e._v(" "),o("p",[e._v("One of the purposes of the "),o("code",[e._v("sdk-scheme-adapter")]),e._v(" is to abstract away the Mojaloop API's async nature to make integrations easier. In addition, we use the scheme adapter as part of the "),o("code",[e._v("mojaloop-simulator")]),e._v(", so in order to prove and test our solution, we need to add functionality to the "),o("code",[e._v("mojaloop-simulator")]),e._v(", and hence the "),o("code",[e._v("sdk-scheme-adapter")]),e._v(".")]),e._v(" "),o("h3",{attrs:{id:"state-machines"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#state-machines"}},[e._v("#")]),e._v(" State Machines")]),e._v(" "),o("p",[e._v("The "),o("code",[e._v("sdk-scheme-adapter")]),e._v(" uses a series of state machines, implemented using the "),o("a",{attrs:{href:"https://github.com/jakesgordon/javascript-state-machine",target:"_blank",rel:"noopener noreferrer"}},[e._v("javascript-state-machine"),o("OutboundLink")],1),e._v(" library. These state machines make it possible to handle complex async calls to a mojaloop hub, and expose them as a simpler, syncronous API to DFSPs and the "),o("code",[e._v("mojaloop-simulator")]),e._v(" alike.")]),e._v(" "),o("p",[e._v("Below we propose a number of new state machines to be implemented as a part of the PISP functionality. Keep in mind the names are not set in stone, this is very much a first pass and will be expected to change.")]),e._v(" "),o("h4",{attrs:{id:"outboundthirdpartytransactionmodel"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#outboundthirdpartytransactionmodel"}},[e._v("#")]),e._v(" OutboundThirdpartyTransactionModel")]),e._v(" "),o("p",[o("strong",[e._v("Purpose:")]),o("br"),e._v("\nModels the PISP side of a PISP transaction, starting with a "),o("code",[e._v("GET /parties")]),e._v(", all the way to the "),o("code",[e._v("PUT /thirdpartyRequests/transaction/{ID}")]),e._v(" callback.")]),e._v(" "),o("p",[o("strong",[e._v("Model:")]),o("br"),e._v(" "),o("img",{attrs:{src:a(320),alt:""}})]),e._v(" "),o("p",[o("strong",[e._v("States:")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("start")]),e._v(" - when the state machine is created")]),e._v(" "),o("li",[o("code",[e._v("payeeResolved")]),e._v(" - on a "),o("code",[e._v("PUT /parties/{type}/{ID}")])]),e._v(" "),o("li",[o("code",[e._v("authorizationReceived")]),e._v(" - on a "),o("code",[e._v("POST /authorization")])]),e._v(" "),o("li",[o("code",[e._v("transactionSuccess")]),e._v(" - on a "),o("code",[e._v("PUT /thirdpartyRequests/transaction/{ID}")])]),e._v(" "),o("li",[o("code",[e._v("error")]),e._v(" - on any error callback, or internal processing error")])]),e._v(" "),o("p",[o("strong",[e._v("Functions:")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("resolvePayee()")]),e._v(" - Calls "),o("code",[e._v("GET /parties/{type}/{ID}")]),e._v(" to lookup the payee party of the transaction")]),e._v(" "),o("li",[o("code",[e._v("executeThirdPartyTransaction()")]),e._v(" - Calls "),o("code",[e._v("POST /thirdpartyRequests/transaction")]),e._v(" to kick off the PISP Transaction")]),e._v(" "),o("li",[o("code",[e._v("signChallenge()")]),e._v(" - Calls "),o("code",[e._v("PUT /authorizations/{ID}")]),e._v(" with the signed challenge from the user")])]),e._v(" "),o("h4",{attrs:{id:"inboundthirdpartytransactionmodel"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#inboundthirdpartytransactionmodel"}},[e._v("#")]),e._v(" InboundThirdpartyTransactionModel")]),e._v(" "),o("p",[o("strong",[e._v("Purpose:")]),e._v("\nModels the DFSP side of a PISP transaction, initiated by receiving a "),o("code",[e._v("POST /thirdpartyRequests/transaction")])]),e._v(" "),o("p",[o("strong",[e._v("Model:")]),o("br"),e._v(" "),o("img",{attrs:{src:a(321),alt:""}})]),e._v(" "),o("p",[o("strong",[e._v("States:")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("transactionRequestReceived")]),e._v(" - on a "),o("code",[e._v("POST /thirdpartyRequests/transaction")])]),e._v(" "),o("li",[o("code",[e._v("quoteReceived")]),e._v(" - on a "),o("code",[e._v("PUT /quotes/{ID}")])]),e._v(" "),o("li",[o("code",[e._v("authorizationReceived")]),e._v(" - on a "),o("code",[e._v("PUT /authorizations/{ID}")]),e._v(", with a signed challenge")]),e._v(" "),o("li",[o("code",[e._v("transactionSuccess")]),e._v(" - on a "),o("code",[e._v("PUT /transfers/{ID}")])]),e._v(" "),o("li",[o("code",[e._v("error")]),e._v(" - on any error callback, or internal processing error")])]),e._v(" "),o("p",[o("strong",[e._v("Functions:")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("getQuote()")]),e._v(" - Calls "),o("code",[e._v("POST /quotes")]),e._v(" to ask the payee for a quote for the given transaction")]),e._v(" "),o("li",[o("code",[e._v("authorizeTransaction()")]),e._v(" - Calls "),o("code",[e._v("POST /authorizations")]),e._v(" to ask the PISP to ask their user to authorize the transaction with their FIDO credential")]),e._v(" "),o("li",[o("code",[e._v("executeTransfer()")]),e._v(" - Calls "),o("code",[e._v("POST /transfer")]),e._v(" to execute the transfer")])]),e._v(" "),o("h2",{attrs:{id:"questions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[e._v("#")]),e._v(" Questions:")]),e._v(" "),o("ul",[o("li",[e._v("How do we handle authorization retries in the above models? Maybe we can leave this for now.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);