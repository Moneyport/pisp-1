(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{354:function(e,t,a){"use strict";a.r(t);var s=a(43),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"design-decisions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#design-decisions"}},[e._v("#")]),e._v(" Design Decisions")]),e._v(" "),a("blockquote",[a("p",[e._v("For now, let's place the decisions inline for ease of reference, but we may want each decision to have it's own "),a("code",[e._v(".md")]),e._v(" file in the future.")])]),e._v(" "),a("h2",{attrs:{id:"outstanding-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#outstanding-questions"}},[e._v("#")]),e._v(" Outstanding Questions")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Q: How does the switch "),a("em",[e._v("know")]),e._v(" to send a callback to the PISP after a sucessful transfer?")]),e._v(" "),a("ul",[a("li",[e._v("Refer to "),a("a",{attrs:{href:"https://github.com/mojaloop/pisp/issues/42",target:"_blank",rel:"noopener noreferrer"}},[e._v("#42"),a("OutboundLink")],1)])])]),e._v(" "),a("li",[a("p",[e._v("Q: Will we make a new "),a("code",[e._v("thirdparty-scheme-adapter")]),e._v(" to handle thirdparty requests?")]),e._v(" "),a("ul",[a("li",[e._v("Signs point to yes at the moment, but the challenge is how to divide between the existing "),a("code",[e._v("sdk-scheme-adapter")]),e._v(" and a new "),a("code",[e._v("thirdparty-scheme-adapter")])])])])]),e._v(" "),a("h2",{attrs:{id:"decisions-made"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decisions-made"}},[e._v("#")]),e._v(" Decisions Made")]),e._v(" "),a("h3",{attrs:{id:"how-does-the-switch-determine-whether-or-not-a-dfsp-is-using-their-own-fido-service-do-we-want-to-use-the-als-or-some-other-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-does-the-switch-determine-whether-or-not-a-dfsp-is-using-their-own-fido-service-do-we-want-to-use-the-als-or-some-other-method"}},[e._v("#")]),e._v(" How does the switch determine whether or not a DFSP is using their own FIDO service? Do we want to use the ALS or some other method?")]),e._v(" "),a("p",[e._v("We will use the ALS to record the auth service for a given participant")]),e._v(" "),a("p",[e._v("For example, to find the Auth service for "),a("code",[e._v("dfspa")]),e._v(", a participant can call "),a("code",[e._v("GET /participants/AUTHSERVICE/dfspa")])]),e._v(" "),a("h4",{attrs:{id:"example-1-internal-auth-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-1-internal-auth-service"}},[e._v("#")]),e._v(" Example 1. internal auth-service")]),e._v(" "),a("p",[a("strong",[e._v("request")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /participants/AUTHSERVICE/dfspa\n")])])]),a("p",[a("strong",[e._v("response")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "fspId": "switch"\n}\n')])])]),a("h4",{attrs:{id:"example-2-dfsp-s-own-auth-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2-dfsp-s-own-auth-service"}},[e._v("#")]),e._v(" Example 2. dfsp's own auth service")]),e._v(" "),a("p",[a("strong",[e._v("request")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GET /participants/AUTHSERVICE/dfspb\n")])])]),a("p",[a("strong",[e._v("response")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('{\n  "fspId": "dfspb"\n}\n')])])]),a("h3",{attrs:{id:"will-the-pisp-demo-server-use-the-sdk-scheme-adapter-thirdparty-scheme-adapter-or-will-it-speak-native-async-mojaloop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#will-the-pisp-demo-server-use-the-sdk-scheme-adapter-thirdparty-scheme-adapter-or-will-it-speak-native-async-mojaloop"}},[e._v("#")]),e._v(" Will the "),a("code",[e._v("pisp-demo-server")]),e._v(" use the "),a("code",[e._v("sdk-scheme-adapter")]),e._v("/"),a("code",[e._v("thirdparty-scheme-adapter")]),e._v("? Or will it speak native async mojaloop?")]),e._v(" "),a("p",[e._v("It will speak native async mojaloop, so will not be using any adapter. It will however use the "),a("code",[e._v("sdk-standard-components")]),e._v(" which is currently being updated for")]),e._v(" "),a("p",[e._v("For now, we are adding PISP functionality to the sdk-scheme-adapter primarily because the mojaloop-simulator requires it for our end to end tests.")]),e._v(" "),a("h3",{attrs:{id:"which-api-should-the-dfsp-need-to-implement-for-pisp-functionaliy-we-have-a-few-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#which-api-should-the-dfsp-need-to-implement-for-pisp-functionaliy-we-have-a-few-options"}},[e._v("#")]),e._v(" Which api should the DFSP need to implement for PISP functionaliy? We have a few options:")]),e._v(" "),a("ol",[a("li",[e._v("Add the DFSP changes to the existing FSPIOP-API")]),e._v(" "),a("li",[e._v("Add the DFSP changes to the new "),a("code",[e._v("thirdparty-api")])]),e._v(" "),a("li",[e._v("Divide the "),a("code",[e._v("thirdparty-api")]),e._v(" into 2 parts:\n"),a("ul",[a("li",[a("code",[e._v("thirdparty-pisp-api")]),e._v(" for the PISP to implement")]),e._v(" "),a("li",[a("code",[e._v("thirdparty-dfsp-api")]),e._v(" for the DFSP to implement")])])])]),e._v(" "),a("p",[e._v("A: Option 3: We are going to divide the new thirdparty-api into 2 parts.")]),e._v(" "),a("p",[e._v("Refer to "),a("a",{attrs:{href:"https://github.com/mojaloop/design-authority/issues/47",target:"_blank",rel:"noopener noreferrer"}},[e._v("DA issue #47"),a("OutboundLink")],1),e._v(" for more information about this decision.")]),e._v(" "),a("h3",{attrs:{id:"how-should-we-implement-the-changes-required-for-the-pisp-role"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-should-we-implement-the-changes-required-for-the-pisp-role"}},[e._v("#")]),e._v(" How should we implement the changes required for the PISP role?")]),e._v(" "),a("ul",[a("li",[e._v("Should we extend the existing APIs or should we create one or more new APIs to manage the specialised PISP interactions?")])]),e._v(" "),a("p",[e._v("We are going to add a new api, called the "),a("code",[e._v("thirdparty-api")]),e._v(" to cover at least the PISP's interactions with the switch.")]),e._v(" "),a("p",[e._v("There is still the outstanding question for the DFSP side of the equation (See above)")]),e._v(" "),a("h3",{attrs:{id:"should-the-mojaloop-auth-service-api-be-sync-or-async"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#should-the-mojaloop-auth-service-api-be-sync-or-async"}},[e._v("#")]),e._v(" Should the "),a("code",[e._v("mojaloop/auth-service")]),e._v(" API be Sync or Async?")]),e._v(" "),a("p",[e._v("It will be Async")]),e._v(" "),a("h3",{attrs:{id:"what-is-the-challenge-that-is-being-signed-during-the-transfer-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-challenge-that-is-being-signed-during-the-transfer-flow"}},[e._v("#")]),e._v(" What is the challenge that is being signed during the transfer flow?")]),e._v(" "),a("p",[e._v("The condition from the "),a("code",[e._v("QuoteResponse")]),e._v(" object should be signed by the PISP app running on the user's device.")]),e._v(" "),a("h3",{attrs:{id:"pisp-transfer-initiation-resource"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pisp-transfer-initiation-resource"}},[e._v("#")]),e._v(" PISP transfer initiation resource")]),e._v(" "),a("p",[e._v("For the PISP role, we will add an additional resource to the API to initiate a 3rd party payment")]),e._v(" "),a("ul",[a("li",[e._v("currently we are planning on calling it "),a("code",[e._v("/thirdPartyRequests/transfer")]),e._v(". This may change.")]),e._v(" "),a("li",[e._v("For our current implementation work however, we can still use the existing "),a("code",[e._v("/transactionRequests")]),e._v(" resource.")])]),e._v(" "),a("h3",{attrs:{id:"handling-of-an-authorization-for-external-fido"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handling-of-an-authorization-for-external-fido"}},[e._v("#")]),e._v(" Handling of an "),a("code",[e._v("/authorization")]),e._v(" for external FIDO")]),e._v(" "),a("p",[e._v("In the case where a DFSP wishes to bring their own FIDO Service instead of using the FIDO service that is a part of the hub ("),a("code",[e._v("mojaloop/auth-service")]),e._v("), we want to pass on the "),a("code",[e._v("PUT /authorization/{id}")]),e._v(" (see "),a("code",[e._v("AG-26")]),e._v(" in the Transfers E2E flow) directly to the DFSP for their own FIDO Service to verify that the public key matches the signed challenge.")]),e._v(" "),a("p",[e._v("This means that we don't need to unpack the "),a("code",[e._v("authorization")]),e._v(" object, nor do we need to design a new API Endpoint for external auth services.")]),e._v(" "),a("p",[e._v("This does, however, require some thinking about the error cases when verifying the signed challenge. Here is what we have proposed:")]),e._v(" "),a("ul",[a("li",[e._v("internal (Mojaloop-hosted) fido: failure case for FIDO -> forward error to DFSP in "),a("code",[e._v("PUT /authorizations/{id}/error")])]),e._v(" "),a("li",[e._v("external fido: forward whole "),a("code",[e._v("PUT /authorizations/{id}")]),e._v(" request to the DFSP to take care")])])])}),[],!1,null,null,null);t.default=i.exports}}]);