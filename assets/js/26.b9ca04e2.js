(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{362:function(_,t,e){"use strict";e.r(t);var o=e(43),R=Object(o.a)({},(function(){var _=this,t=_.$createElement,e=_._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"participant-endpoint-enums"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#participant-endpoint-enums"}},[_._v("#")]),_._v(" Participant Endpoint Enums")]),_._v(" "),e("p",[_._v("This is the list of endpoints that a PISP or DFSP must register with the switch to get callbacks from the "),e("code",[_._v("thirdparty-api-adapter")]),_._v(" and "),e("code",[_._v("transaction-request-service")]),_._v(".")]),_._v(" "),e("p",[_._v("These endpoints should be added to the enums of "),e("code",[_._v("central-services-shared")]),_._v(", and the seeds of "),e("code",[_._v("central-ledger")])]),_._v(" "),e("h2",{attrs:{id:"pisp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pisp"}},[_._v("#")]),_._v(" PISP:")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT_ERROR")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_POST")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT_ERROR")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_PUT")])]),_._v(" "),e("li",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_PUT_ERROR")])]),_._v(" "),e("li",[e("code",[_._v("FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE")]),_._v(" "),e("blockquote",[e("p",[_._v("(Note this is the existing endpoint for "),e("code",[_._v("/authorizations")]),_._v(" resource)")])])])]),_._v(" "),e("h2",{attrs:{id:"dfsp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dfsp"}},[_._v("#")]),_._v(" DFSP:")]),_._v(" "),e("ul",[e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_POST")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT_ERROR")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_POST")])]),_._v(" "),e("blockquote",[e("p",[_._v("Point to central-auth to get the final consent creation - see "),e("a",{attrs:{href:"https://github.com/mojaloop/pisp/tree/master/docs/linking#15-grant-consent",target:"_blank",rel:"noopener noreferrer"}},[_._v("GRANT-4"),e("OutboundLink")],1)])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CREATE_CREDENTIAL_POST")])]),_._v(" "),e("blockquote",[e("p",[_._v("Point to central-auth for central, or dfsp for self-hosted auth service")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT")])]),_._v(" "),e("blockquote",[e("p",[_._v("This is tricky, as for some requests it should be central-auth, but others it should be the dfsp itself...")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT_ERROR")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE")])]),_._v(" "),e("blockquote",[e("p",[_._v("(Note this is the existing endpoint for "),e("code",[_._v("/authorizations")]),_._v(" resource)")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_POST")])]),_._v(" "),e("blockquote",[e("p",[_._v("Point to central-auth for central, or dfsp for self-hosted auth service")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_PUT")])]),_._v(" "),e("blockquote",[e("p",[_._v("Point to dfsp")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_PUT_ERROR")])]),_._v(" "),e("blockquote",[e("p",[_._v("Point to dfsp")])])])])])}),[],!1,null,null,null);t.default=R.exports}}]);