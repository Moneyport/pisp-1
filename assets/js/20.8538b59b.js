(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{355:function(e,t,a){"use strict";a.r(t);var r=a(43),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"branch-strategy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#branch-strategy"}},[e._v("#")]),e._v(" branch strategy:")]),e._v(" "),a("ol",[a("li",[e._v("When we are creating a new branch we are using "),a("code",[e._v("pisp/")]),e._v(" prefix in branch name.")]),e._v(" "),a("li",[e._v("We have "),a("code",[e._v("pisp/master")]),e._v(" leading branch to keep our final feature candidate to be merged with "),a("code",[e._v("master")])]),e._v(" "),a("li",[e._v("Newly created PR for every WIP branch should have "),a("code",[e._v("pisp/master")]),e._v(" set as target")]),e._v(" "),a("li",[e._v("When the new version of "),a("code",[e._v("master")]),e._v(" is published (by other team for example), we should propagate all changes via merge with "),a("code",[e._v("pisp/master")])])]),e._v(" "),a("h2",{attrs:{id:"pisp-changes-in-other-repos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pisp-changes-in-other-repos"}},[e._v("#")]),e._v(" PISP changes in other Repos :")]),e._v(" "),a("ol",[a("li",[e._v("POST /authorizations Swagger changes "),a("a",{attrs:{href:"https://github.com/mojaloop/mojaloop/issues/269",target:"_blank",rel:"noopener noreferrer"}},[e._v("#269"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/mojaloop/mojaloop-specification/commit/6ca00674e96990053926da29a2af3f07cf71b976",target:"_blank",rel:"noopener noreferrer"}},[e._v("mojaloop-specification"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/mojaloop/transaction-requests-service/commit/05c6b822bbb53e5d7eac4003d3369e6c09b67459",target:"_blank",rel:"noopener noreferrer"}},[e._v("transaction-requests-service"),a("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=o.exports}}]);