(window.webpackJsonp=window.webpackJsonp||[]).push([[4,6,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27],{309:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Pre-linking.293de80d.svg"},310:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Discovery.1a31c51d.svg"},311:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Request_consent_(Web).f9e2fc6c.svg"},312:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Request_consent_(OTP).ffa400a3.svg"},313:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Authentication_(Web).5e415975.svg"},314:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Authentication_(OTP).aaadba47.svg"},315:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Grant_consent.c12f52ec.svg"},316:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Credential_registration_(challenge).c2700881.svg"},317:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Credential_registration_(verification).5a2d456f.svg"},318:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Unlinking.7088d65b.svg"},319:function(e,t,r){e.exports=r.p+"assets/img/PISP_Linking__Authentication_(Third-party_FIDO_registration).af651c17.svg"},320:function(e,t,r){e.exports=r.p+"assets/img/OutboundThirdpartyTransactionModel.39381e48.svg"},321:function(e,t,r){e.exports=r.p+"assets/img/InboundThirdpartyTransactionModel.4a2d44bd.svg"},322:function(e,t,r){e.exports=r.p+"assets/img/PISPTransferSimpleAPI.8c04d80e.svg"},323:function(e,t,r){e.exports=r.p+"assets/img/PISPGetTransactionRequest.614fd594.svg"},343:function(e){e.exports=JSON.parse('{"swagger":"2.0","info":{"title":"Transaction Requests related parts of Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)","version":"1.0","description":"Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.","license":{"name":"Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)"}},"basePath":"/","schemes":["http"],"produces":["application/json"],"paths":{"/health":{"get":{"produces":["application/json"],"tags":["health"],"responses":{"200":{"$ref":"#/responses/ResponseHealth200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"HealthGet","summary":"Get Server","description":"The HTTP request GET /health is used to return the current status of the API."}},"/metrics":{"get":{"produces":["application/json"],"tags":["metrics"],"responses":{"200":{"$ref":"#/responses/ResponseHealth200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"MetricsGet","summary":"Prometheus metrics endpoint","description":"The HTTP request GET /metrics is used to return metrics for the API."}},"/transactionRequests/{ID}/error":{"put":{"produces":["application/json"],"tags":["transactionRequests","sampled"],"parameters":[{"$ref":"#/parameters/ID"},{"name":"body","schema":{"$ref":"#/definitions/ErrorInformationObject"},"in":"body","required":true},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"200":{"$ref":"#/responses/Response200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"TransactionRequestsErrorByID","summary":"TransactionRequestsErrorByID","description":"If the server is unable to find or create a transaction request, or another processing error occurs, the error callback PUT /transactionRequests/<ID>/error is used. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>.","x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”","extensionList":{"extension":[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}}}},"/transactionRequests/{ID}":{"get":{"produces":["application/json"],"tags":["transactionRequests","sampled"],"parameters":[{"$ref":"#/parameters/Accept"},{"$ref":"#/parameters/ID"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"202":{"$ref":"#/responses/Response202"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"TransactionRequestsByID","summary":"TransactionRequestsByID","description":"The HTTP request GET /transactionRequests/<ID> is used to get information regarding an earlier created or requested transaction request. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request."},"put":{"produces":["application/json"],"tags":["transactionRequests","sampled"],"parameters":[{"name":"body","schema":{"$ref":"#/definitions/TransactionRequestsIDPutResponse"},"in":"body","required":true},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/ID"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"200":{"$ref":"#/responses/Response200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"TransactionRequestsByIDPut","summary":"TransactionRequestsByID","description":"The callback PUT /transactionRequests/<ID> is used to inform the client of a requested or created transaction request. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>.","x-examples":{"application/json":{"“transactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“transactionRequestState”":"“RECEIVED”","extensionList":{"extension":[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}}},"/transactionRequests":{"post":{"produces":["application/json"],"tags":["transactionRequests","sampled"],"parameters":[{"name":"body","schema":{"$ref":"#/definitions/TransactionRequestsPostRequest"},"in":"body","required":true},{"$ref":"#/parameters/Accept"},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"202":{"$ref":"#/responses/Response202"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"TransactionRequests","summary":"TransactionRequests","description":"The HTTP request POST /transactionRequests is used to request the creation of a transaction request for the provided financial transaction in the server.","x-examples":{"application/json":{"“transactionRequestId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“payee”":{"partyIdInfo":{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},"merchantClassificationCode":"4321","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}},"“payer”":{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},"“amount”":{"“currency”":"“USD”","“amount”":"“123.45”"},"“transactionType”":{"“scenario”":"“DEPOSIT”","“subScenario”":"“locally defined sub-scenario”","“initiator”":"“PAYEE”","“initiatorType”":"“CONSUMER”","“refundInfo”":{"“originalTransactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“refundReason”":"“free text indicating reason for the refund”"},"“balanceOfPayments”":"“123”"},"“note”":"“Free-text memo”","“geoCode”":{"“latitude”":"“+45.4215”","“longitude”":"“+75.6972”"},"“authenticationType”":"“OTP”","“expiration”":"“2016-05-24T08:38:08.699-04:00”","extensionList":{"extension":[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}}},"/authorizations":{"post":{"description":"The HTTP request POST /authorizations is used to request the Payer to enter the applicable credentials in the PISP system.","summary":"/authorizations","tags":["authorizations"],"operationId":"AuthorizationsByIDPost","produces":["application/json"],"parameters":[{"name":"body","in":"body","required":true,"schema":{"$ref":"#/definitions/AuthorizationsPostRequest"}},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"authenticationType":"U2F","retriesLeft":1,"amount":{"currency":"USD","amount":"18"},"transactionId":"2f169631-ef99-4cb1-96dc-91e8fc08f539","transactionRequestId":"02e28448-3c05-4059-b5f7-d518d0a2d8ea","quote":{"transferAmount":{"currency":"USD","amount":"18"},"payeeReceiveAmount":{"currency":"USD","amount":"0"},"payeeFspFee":{"currency":"USD","amount":"0"},"payeeFspCommission":{"currency":"USD","amount":"0"},"expiration":"2020-05-17T15:28:54.250Z","geoCode":{"latitude":"string","longitude":"string"},"ilpPacket":"string","condition":"string","extensionList":{"extension":[{"key":"string","value":"string"}]}}}},"responses":{"202":{"$ref":"#/responses/Response202"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}}}},"/authorizations/{ID}":{"get":{"tags":["authorizations","sampled"],"parameters":[{"name":"authenticationType","description":"a valid enumeration for the authentication type: OTP, QRCODE","in":"query","required":true,"type":"string","enum":["OTP","QRCODE"]},{"name":"retriesLeft","description":"The number of retries left before the financial transaction is rejected","in":"query","required":true,"type":"integer"},{"name":"amount","description":"The transaction amount that will be withdrawn from the Payer’s account","in":"query","required":true,"type":"string"},{"name":"currency","description":"The transaction currency for the amount that will be withdrawn from the Payer’s account","in":"query","required":true,"type":"string"},{"$ref":"#/parameters/ID"},{"$ref":"#/parameters/Accept"},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination","required":true},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"200":{"$ref":"#/responses/Response200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"summary":"/authorizations/<ID>","description":"The HTTP request GET /authorizations/<ID> is used to request authorization for a specified transaction request. The <ID> in the URI should contain the transactionRequestId for which authorization is being requested."},"put":{"tags":["authorizations","sampled"],"parameters":[{"name":"body","schema":{"$ref":"#/definitions/AuthorizationsIDPutResponse"},"in":"body","required":true},{"$ref":"#/parameters/ID"},{"$ref":"#/parameters/Accept"},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"200":{"$ref":"#/responses/Response200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"AuthorizationsIDPutResponse","summary":"/authorizations/<ID>","description":"The callback PUT /authorizations/<ID> is used to inform the client of an authorization result for a transactionRequest. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>."}},"/authorizations/{ID}/error":{"put":{"produces":["application/json"],"tags":["authorizations","sampled"],"parameters":[{"$ref":"#/parameters/ID"},{"name":"body","schema":{"$ref":"#/definitions/ErrorInformationObject"},"in":"body","required":true},{"$ref":"#/parameters/Content-Length"},{"$ref":"#/parameters/Content-Type"},{"$ref":"#/parameters/Date"},{"$ref":"#/parameters/X-Forwarded-For"},{"$ref":"#/parameters/FSPIOP-Source"},{"$ref":"#/parameters/FSPIOP-Destination"},{"$ref":"#/parameters/FSPIOP-Encryption"},{"$ref":"#/parameters/FSPIOP-Signature"},{"$ref":"#/parameters/FSPIOP-URI"},{"$ref":"#/parameters/FSPIOP-HTTP-Method"}],"responses":{"200":{"$ref":"#/responses/Response200"},"400":{"$ref":"#/responses/ErrorResponse400"},"401":{"$ref":"#/responses/ErrorResponse401"},"403":{"$ref":"#/responses/ErrorResponse403"},"404":{"$ref":"#/responses/ErrorResponse404"},"405":{"$ref":"#/responses/ErrorResponse405"},"406":{"$ref":"#/responses/ErrorResponse406"},"501":{"$ref":"#/responses/ErrorResponse501"},"503":{"$ref":"#/responses/ErrorResponse503"}},"operationId":"AuthorizationsErrorByID","summary":"/authorizations/<ID>/error","description":"If the server is unable to process the authorization message, the error callback PUT /authorizations/<ID>/error is used. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>.","x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”","extensionList":{"extension":[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}}}}},"definitions":{"Amount":{"title":"Amount","description":"The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed.","pattern":"^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$","type":"string"},"AmountType":{"title":"AmountType","description":"Below are the allowed values for the enumeration AmountType - SEND Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. - RECEIVE Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive fees.","enum":["SEND","RECEIVE"],"type":"string"},"AuthenticationType":{"title":"AuthenticationTypeEnum","description":"Below are the allowed values for the enumeration AuthenticationType. - OTP One-time password generated by the Payer FSP. - QRCODE QR code used as One Time Password. - U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.","enum":["OTP","QRCODE","U2F"],"type":"string"},"AuthenticationVal":{"title":"AuthenticationVal","description":"Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type.","pattern":"^\\\\d{3,10}$|^\\\\S{1,64}$","type":"string"},"AuthorizationResponse":{"title":"AuthorizationResponse","description":"Below are the allowed values for the enumeration - ENTERED Consumer entered the authentication value. - REJECTED Consumer rejected the transaction. - RESEND Consumer requested to resend the authentication value.","enum":["ENTERED","REJECTED","RESEND"],"type":"string"},"BalanceOfPayments":{"title":"BalanceOfPayments","description":"(BopCode) The API data type BopCode is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. https://www.imf.org/external/np/sta/bopcode/","pattern":"^[1-9]\\\\d{2}$","type":"string"},"BinaryString":{"description":"The API data type BinaryString is a JSON String. The string is a base64url  encoding of a string of raw bytes, where padding (character ‘=’) is added at the end of the data if needed to ensure that the string is a multiple of 4 characters. The length restriction indicates the allowed number of characters.","pattern":"^[A-Za-z0-9-_]+[=]{0,2}$","type":"string"},"BinaryString32":{"description":"The API data type BinaryString32 is a fixed size version of the API data type BinaryString, where the raw underlying data is always of 32 bytes. The data type BinaryString32 should not use a padding character as the size of the underlying data is fixed.","pattern":"^[A-Za-z0-9-_]{43}$","type":"string"},"BulkTransferState":{"title":"BulkTransactionStateEnum","description":"Below are the allowed values for the enumeration - RECEIVED Payee FSP has received the bulk transfer from the Payer FSP. - PENDING Payee FSP has validated the bulk transfer. - ACCEPTED Payee FSP has accepted to process the bulk transfer. - PROCESSING Payee FSP has started to transfer fund to the Payees. - COMPLETED Payee FSP has completed transfer of funds to the Payees. - REJECTED Payee FSP has rejected to process the bulk transfer.","enum":["RECEIVED","PENDING","ACCEPTED","PROCESSING","COMPLETED","REJECTED"],"type":"string"},"Code":{"title":"Code","description":"Any code/token returned by the Payee FSP (TokenCode Type).","pattern":"^[0-9a-zA-Z]{4,32}$","type":"string"},"CorrelationId":{"title":"CorrelationId","description":"Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).","pattern":"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$","type":"string"},"Currency":{"title":"CurrencyEnum","description":"The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.","maxLength":3,"minLength":3,"enum":["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD"],"type":"string"},"Counter":{"title":"Counter","$ref":"#/definitions/Integer","description":"Sequential counter used for cloning detection. Present only for U2F authentication."},"Date":{"title":"Date","description":"The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples - \\"1982-05-23\\", \\"1987-08-05”","pattern":"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$","type":"string"},"DateOfBirth":{"title":"DateofBirth (type Date)","description":"Date of Birth of the Party.","pattern":"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$","type":"string"},"DateTime":{"title":"DateTime","description":"The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  \\"2016-05-24T08:38:08.699-04:00\\", \\"2016-05-24T08:38:08.699Z\\" (where Z indicates Zulu time zone, same as UTC).","pattern":"^(?:[1-9]\\\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\\d|2[0-3]):[0-5]\\\\d:[0-5]\\\\d(?:(\\\\.\\\\d{3}))(?:Z|[+-][01]\\\\d:[0-5]\\\\d)$","type":"string"},"ErrorCode":{"title":"ErrorCode","description":"The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error.","pattern":"^[1-9]\\\\d{3}$","type":"string"},"ErrorDescription":{"title":"ErrorDescription","description":"Error description string.","maxLength":128,"minLength":1,"type":"string"},"ExtensionKey":{"title":"ExtensionKey","description":"Extension key.","maxLength":32,"minLength":1,"type":"string"},"ExtensionValue":{"title":"ExtensionValue","description":"Extension value.","maxLength":128,"minLength":1,"type":"string"},"FirstName":{"title":"FirstName","description":"First name of the Party (Name Type).","maxLength":128,"minLength":1,"pattern":"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$","type":"string"},"FspId":{"title":"FspId","description":"FSP identifier.","maxLength":32,"minLength":1,"type":"string"},"IlpCondition":{"title":"IlpCondition","description":"Condition that must be attached to the transfer by the Payer.","maxLength":48,"pattern":"^[A-Za-z0-9-_]{43}$","type":"string"},"IlpFulfilment":{"title":"IlpFulfilment","description":"Fulfilment that must be attached to the transfer by the Payee.","maxLength":48,"pattern":"^[A-Za-z0-9-_]{43}$","type":"string"},"IlpPacket":{"title":"IlpPacket","description":"Information for recipient (transport layer information).","maxLength":32768,"minLength":1,"pattern":"^[A-Za-z0-9-_]+[=]{0,2}$","type":"string"},"Integer":{"title":"Integer","description":"The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits.","pattern":"^[1-9]\\\\d*$","type":"string"},"LastName":{"title":"LastName","description":"Last name of the Party (Name Type).","maxLength":128,"minLength":1,"pattern":"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$","type":"string"},"Latitude":{"title":"Latitude","description":"The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.","pattern":"^(\\\\+|-)?(?:90(?:(?:\\\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\\\.[0-9]{1,6})?))$","type":"string"},"Longitude":{"title":"Longitude","description":"The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons.","pattern":"^(\\\\+|-)?(?:180(?:(?:\\\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\\\.[0-9]{1,6})?))$","type":"string"},"MerchantClassificationCode":{"title":"MerchantClassificationCode","description":"A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc.","pattern":"^[\\\\d]{1,4}$","type":"string"},"MiddleName":{"title":"MiddleName","description":"Middle name of the Party (Name Type).","maxLength":128,"minLength":1,"pattern":"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$","type":"string"},"Name":{"title":"Name","description":"The API data type Name is a JSON String, restricted by a regular expression to avoid characters which are generally not used in a name. Regular Expression - The regular expression for restricting the Name type is \\"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$\\". The restriction does not allow a string consisting of whitespace only, all Unicode characters are allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,) and space characters ( ). Note -  In some programming languages, Unicode support must be specifically enabled. For example, if Java is used the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.","pattern":"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$","type":"string"},"Note":{"title":"Note","description":"Memo assigned to transaction","maxLength":128,"minLength":1,"type":"string"},"OtpValue":{"title":"OtpValue","description":"The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed.","pattern":"^\\\\d{3,10}$","type":"string"},"PartyIdentifier":{"title":"PartyIdentifier","description":"Identifier of the Party.","maxLength":128,"minLength":1,"type":"string"},"PartyIdType":{"title":"PartyIdTypeEnum","description":"Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier.","enum":["MSISDN","EMAIL","PERSONAL_ID","BUSINESS","DEVICE","ACCOUNT_ID","IBAN","ALIAS"],"type":"string"},"PartyName":{"title":"PartyName","description":"Name of the Party. Could be a real name or a nickname.","maxLength":128,"minLength":1,"type":"string"},"PartySubIdOrType":{"title":"PartySubIdOrType","description":"Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType.","maxLength":128,"minLength":1,"type":"string"},"PersonalIdentifierType":{"title":"PersonalIdentifierType","description":"Below are the allowed values for the enumeration - PASSPORT A passport number is used as reference to a Party. - NATIONAL_REGISTRATION A national registration number is used as reference to a Party. - DRIVING_LICENSE A driving license is used as reference to a Party. - ALIEN_REGISTRATION An alien registration number is used as reference to a Party. - NATIONAL_ID_CARD A national ID card number is used as reference to a Party. - EMPLOYER_ID A tax identification number is used as reference to a Party. - TAX_ID_NUMBER A tax identification number is used as reference to a Party. - SENIOR_CITIZENS_CARD A senior citizens card number is used as reference to a Party. - MARRIAGE_CERTIFICATE A marriage certificate number is used as reference to a Party. - HEALTH_CARD A health card number is used as reference to a Party. - VOTERS_ID A voter’s identification number is used as reference to a Party. - UNITED_NATIONS An UN (United Nations) number is used as reference to a Party. - OTHER_ID Any other type of identification type number is used as reference to a Party.","enum":["PASSPORT","NATIONAL_REGISTRATION","DRIVING_LICENSE","ALIEN_REGISTRATION","NATIONAL_ID_CARD","EMPLOYER_ID","TAX_ID_NUMBER","SENIOR_CITIZENS_CARD","MARRIAGE_CERTIFICATE","HEALTH_CARD","VOTERS_ID","UNITED_NATIONS","OTHER_ID"],"type":"string"},"QRCODE":{"title":"QRCODE","description":"QR code used as One Time Password.","maxLength":64,"minLength":1,"type":"string"},"RefundReason":{"title":"RefundReason","description":"Reason for the refund.","maxLength":128,"minLength":1,"type":"string"},"RetriesLeft":{"title":"RetriesLeft","$ref":"#/definitions/Integer","description":"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},"TokenCode":{"title":"TokenCode","description":"The API data type TokenCode is a JSON String between 4 and 32 characters, consisting of digits or upper or lowercase characters from a to z.","pattern":"^[0-9a-zA-Z]{4,32}$","type":"string"},"TransactionInitiator":{"title":"TransactionInitiatorEnum","description":"Below are the allowed values for the enumeration - PAYER Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way. - PAYEE Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device.","enum":["PAYER","PAYEE"],"type":"string"},"TransactionInitiatorType":{"title":"TransactionInitiatorTypeEnum","description":"Below are the allowed values for the enumeration - CONSUMER Consumer is the initiator of the transaction. - AGENT Agent is the initiator of the transaction. - BUSINESS Business is the initiator of the transaction. - DEVICE Device is the initiator of the transaction.","enum":["CONSUMER","AGENT","BUSINESS","DEVICE"],"type":"string"},"TransactionRequestState":{"title":"TransactionRequestStateEnum","description":"Below are the allowed values for the enumeration - RECEIVED Payer FSP has received the transaction from the Payee FSP. - PENDING Payer FSP has sent the transaction request to the Payer. - ACCEPTED Payer has approved the transaction. - REJECTED Payer has rejected the transaction.","enum":["RECEIVED","PENDING","ACCEPTED","REJECTED"],"type":"string"},"TransactionScenario":{"title":"TransactionScenarioEnum","description":"Below are the allowed values for the enumeration - DEPOSIT Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User. - WITHDRAWAL Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer. - TRANSFER Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction. - PAYMENT Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on. - REFUND Used for performing a refund of transaction.","enum":["DEPOSIT","WITHDRAWAL","TRANSFER","PAYMENT","REFUND"],"type":"string"},"TransactionState":{"title":"TransactionStateEnum","description":"Below are the allowed values for the enumeration - RECEIVED Payee FSP has received the transaction from the Payer FSP. - PENDING Payee FSP has validated the transaction. - COMPLETED Payee FSP has successfully performed the transaction. - REJECTED Payee FSP has failed to perform the transaction.","enum":["RECEIVED","PENDING","COMPLETED","REJECTED"],"type":"string"},"TransactionSubScenario":{"title":"TransactionSubScenario","description":"Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).","pattern":"^[A-Z_]{1,32}$","type":"string"},"TransferState":{"title":"TransferStateEnum","description":"Below are the allowed values for the enumeration - RECEIVED Next ledger has received the transfer. - RESERVED Next ledger has reserved the transfer. - COMMITTED Next ledger has successfully performed the transfer. - ABORTED Next ledger has aborted the transfer due a rejection or failure to perform the transfer.","enum":["RECEIVED","RESERVED","COMMITTED","ABORTED"],"type":"string"},"UndefinedEnum":{"title":"UndefinedEnum","description":"The API data type UndefinedEnum is a JSON String consisting of 1 to 32 uppercase characters including an underscore character (_).","pattern":"^[A-Z_]{1,32}$","type":"string"},"U2F":{"title":"U2F","type":"string","minLength":1,"maxLength":64,"description":"U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key."},"AuthenticationInfo":{"title":"AuthenticationInfo","description":"Data model for the complex type AuthenticationInfo","required":["authentication","authenticationValue"],"type":"object","properties":{"authentication":{"type":"string"},"authenticationValue":{"type":"string"}}},"AuthenticationValue":{"title":"AuthenticationValue","type":"object","description":"Data model for the complex type AuthenticationValue","properties":{"authenticationVal":{"$ref":"#/definitions/AuthenticationVal","description":"Authentication value."},"counter":{"$ref":"#/definitions/Counter","description":"Sequential counter used for cloning detection. Present only for U2F authentication."}},"required":["authenticationVal"]},"AuthorizationsPostRequest":{"title":"AuthorizationsPostRequest","type":"object","description":"POST /authorizations Request object","properties":{"authenticationType":{"$ref":"#/definitions/AuthenticationType","description":"This value is a valid authentication type from the enumeration AuthenticationType(OTP or QR Code or U2F)."},"retriesLeft":{"$ref":"#/definitions/RetriesLeft","description":"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},"amount":{"$ref":"#/definitions/Money","description":"This is the transaction amount that will be withdrawn from the Payer’s account."},"transactionId":{"$ref":"#/definitions/CorrelationId","description":"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process."},"transactionRequestId":{"$ref":"#/definitions/CorrelationId","description":"The transactionRequestID, received from the POST /transactionRequests service earlier in the process."},"quote":{"$ref":"#/definitions/QuotesIDPutResponse","description":"Quotes object"}},"required":["authenticationType","retriesLeft","amount","currency","transactionId","transactionRequestId","quote"]},"AuthorizationsIDPutResponse":{"title":"AuthorizationsIDPutResponse","description":"PUT /authorizations/{ID} object","required":["responseType"],"type":"object","properties":{"authenticationInfo":{"$ref":"#/definitions/AuthenticationInfo","description":"OTP or QR Code if entered, otherwise empty."},"responseType":{"description":"Enum containing response information; if the customer entered the authentication value, rejected the transaction, or requested a resend of the authentication value.","type":"string"}}},"BulkQuotesPostRequest":{"title":"BulkQuotesPostRequest","description":"POST /bulkQuotes object","required":["bulkQuoteId","payer","individualQuotes"],"type":"object","properties":{"bulkQuoteId":{"description":"Common ID between the FSPs for the bulk quote object, decided by the Payer FSP. The ID should be reused for resends of the same bulk quote. A new ID should be generated for each new bulk quote.","type":"string"},"payer":{"$ref":"#/definitions/Party","description":"Information about the Payer in the proposed financial transaction."},"geoCode":{"$ref":"#/definitions/GeoCode","description":"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},"expiration":{"description":"Expiration is optional to let the Payee FSP know when a quote no longer needs to be returned.","type":"string"},"individualQuotes":{"description":"List of quotes elements.","maxItems":1000,"minItems":1,"type":"array","items":{"$ref":"#/definitions/IndividualQuote"}},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"BulkQuotesIDPutResponse":{"title":"BulkQuotesIDPutResponse","description":"PUT /bulkQuotes/{ID} object","required":["expiration"],"type":"object","properties":{"individualQuoteResults":{"description":"Fees for each individual transaction, if any of them are charged per transaction.","maxItems":1000,"type":"array","items":{"$ref":"#/definitions/IndividualQuoteResult"}},"expiration":{"description":"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction request.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"BulkTransfersPostRequest":{"title":"BulkTransfersPostRequest","description":"POST /bulkTransfers object","required":["bulkTransferId","bulkQuoteId","payerFsp","payeeFsp","individualTransfers","expiration"],"type":"object","properties":{"bulkTransferId":{"description":"Common ID between the FSPs and the optional Switch for the bulk transfer object, decided by the Payer FSP. The ID should be reused for resends of the same bulk transfer. A new ID should be generated for each new bulk transfer.","type":"string"},"bulkQuoteId":{"description":"ID of the related bulk quote.","type":"string"},"payerFsp":{"description":"Payer FSP identifier.","type":"string"},"payeeFsp":{"description":"Payee FSP identifier.","type":"string"},"individualTransfers":{"description":"List of IndividualTransfer elements.","maxItems":1000,"minItems":1,"type":"array","items":{"$ref":"#/definitions/IndividualTransfer"}},"expiration":{"description":"Expiration time of the transfers.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"BulkTransfersIDPutResponse":{"title":"BulkTransfersIDPutResponse","description":"PUT /bulkTransfers/{ID} object","required":["bulkTransferState"],"type":"object","properties":{"completedTimestamp":{"description":"Time and date when the bulk transaction was completed.","type":"string"},"individualTransferResults":{"description":"List of IndividualTransferResult elements.","maxItems":1000,"type":"array","items":{"$ref":"#/definitions/IndividualTransferResult"}},"bulkTransferState":{"description":"The state of the bulk transfer.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"ErrorInformation":{"title":"ErrorInformation","description":"Data model for the complex type ErrorInformation.","required":["errorCode","errorDescription"],"type":"object","properties":{"errorCode":{"description":"Specific error number.","type":"string"},"errorDescription":{"description":"Error description string.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional list of extensions, specific to deployment."}}},"ErrorInformationObject":{"title":"ErrorInformationObject","description":"Data model for the complex type object that contains ErrorInformation.","required":["errorInformation"],"type":"object","properties":{"errorInformation":{"$ref":"#/definitions/ErrorInformation"}}},"ErrorInformationResponse":{"title":"ErrorInformationResponse","description":"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.","type":"object","properties":{"errorInformation":{"$ref":"#/definitions/ErrorInformation"}}},"Extension":{"title":"Extension","description":"Data model for the complex type Extension","required":["key","value"],"type":"object","properties":{"key":{"description":"Extension key.","type":"string"},"value":{"description":"Extension value.","type":"string"}}},"ExtensionList":{"title":"ExtensionList","description":"Data model for the complex type ExtensionList","required":["extension"],"type":"object","properties":{"extension":{"description":"Number of Extension elements","maxItems":16,"minItems":1,"type":"array","items":{"$ref":"#/definitions/Extension"}}}},"GeoCode":{"title":"GeoCode","description":"Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.","required":["latitude","longitude"],"type":"object","properties":{"latitude":{"description":"Latitude of the Party.","type":"string"},"longitude":{"description":"Longitude of the   Party.","type":"string"}}},"IndividualQuote":{"title":"IndividualQuote","description":"Data model for the complex type IndividualQuote.","required":["quoteId","transactionId","payee","amountType","amount","transactionType"],"type":"object","properties":{"quoteId":{"description":"Identifies quote message.","type":"string"},"transactionId":{"description":"Identifies transaction message.","type":"string"},"payee":{"$ref":"#/definitions/Party","description":"Information about the Payee in the proposed financial transaction."},"amountType":{"description":"SEND for sendAmount, RECEIVE for receiveAmount.","type":"string"},"amount":{"$ref":"#/definitions/Money","description":"Depending on amountType - If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."},"fees":{"$ref":"#/definitions/Money","description":"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},"transactionType":{"$ref":"#/definitions/TransactionType","description":"Type of transaction that the quote is requested for."},"note":{"description":"Memo that will be attached to the transaction.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"IndividualQuoteResult":{"title":"IndividualQuoteResult","description":"Data model for the complex type IndividualQuoteResult.","required":["quoteId"],"type":"object","properties":{"quoteId":{"description":"Identifies quote message.","type":"string"},"payee":{"$ref":"#/definitions/Party","description":"Information about the Payee in the proposed financial transaction."},"transferAmount":{"$ref":"#/definitions/Money","description":"Amount that the Payee FSP should receive."},"payeeReceiveAmount":{"$ref":"#/definitions/Money","description":"Amount that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees."},"payeeFspFee":{"$ref":"#/definitions/Money","description":"Payee FSP’s part of the transaction fee."},"payeeFspCommission":{"$ref":"#/definitions/Money","description":"Transaction commission from the Payee FSP"},"ilpPacket":{"description":"The ILP Packet that must be attached to the transfer by the Payer.","type":"string"},"condition":{"description":"The condition that must be attached to the transfer by the Payer.","type":"string"},"errorInformation":{"$ref":"#/definitions/ErrorInformation","description":"Error code, category description. Note - receiveAmount, payeeFspFee, payeeFspCommission, expiration, ilpPacket, condition should not be set if errorInformation is set."},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"IndividualTransfer":{"title":"IndividualTransfer","description":"Data model for the complex type IndividualTransfer.","required":["transferId","transferAmount","ilpPacket","condition"],"type":"object","properties":{"transferId":{"description":"Identifies messages related to the same /transfers sequence.","type":"string"},"transferAmount":{"$ref":"#/definitions/Money","description":"Transaction amount to be sent."},"ilpPacket":{"description":"ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data.","type":"string"},"condition":{"description":"Condition that must be fulfilled to commit the transfer.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"IndividualTransferResult":{"title":"IndividualTransferResult","description":"Data model for the complex type IndividualTransferResult.","required":["transferId"],"type":"object","properties":{"transferId":{"description":"Identifies messages related to the same /transfers sequence.","type":"string"},"fulfilment":{"description":"Fulfilment of the condition specified with the transaction. Note - Either fulfilment or errorInformation should be set, not both.","type":"string"},"errorInformation":{"$ref":"#/definitions/ErrorInformation","description":"If transfer is REJECTED, error information may be provided. Note - Either fulfilment or errorInformation should be set, not both."},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"Money":{"title":"Money","description":"Data model for the complex type Money.","required":["currency","amount"],"type":"object","properties":{"currency":{"description":"Currency of the amount.","type":"string"},"amount":{"description":"Amount of Money.","type":"string"}}},"ParticipantsTypeIDSubIDPostRequest":{"title":"ParticipantsTypeIDSubIDPostRequest","description":"POST /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID} object","required":["fspId"],"type":"object","properties":{"fspId":{"description":"FSP Identifier that the Party belongs to.","type":"string"},"currency":{"description":"Indicate that the provided Currency is supported by the Party.","type":"string"}}},"ParticipantsTypeIDPutResponse":{"title":"ParticipantsTypeIDPutResponse","description":"PUT /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID} object","type":"object","properties":{"fspId":{"description":"FSP Identifier that the Party belongs to.","type":"string"}}},"ParticipantsIDPutResponse":{"title":"ParticipantsIDPutResponse","description":"PUT /participants/{ID} object","required":["partyList"],"type":"object","properties":{"partyList":{"description":"List of PartyResult elements that were either created or failed to be created.","maxItems":10000,"minItems":1,"type":"array","items":{"$ref":"#/definitions/PartyResult"}},"currency":{"description":"Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.","type":"string"}}},"ParticipantsPostRequest":{"title":"ParticipantsPostRequest","description":"POST /participants object","required":["requestId","partyList"],"type":"object","properties":{"requestId":{"description":"The ID of the request, decided by the client. Used for identification of the callback from the server.","type":"string"},"partyList":{"description":"List of PartyIdInfo elements that the client would like to update or create FSP information about.","maxItems":10000,"minItems":1,"type":"array","items":{"$ref":"#/definitions/PartyIdInfo"}},"currency":{"description":"Indicate that the provided Currency is supported by each PartyIdInfo in the list.","type":"string"}}},"Party":{"title":"Party","description":"Data model for the complex type Party.","required":["partyIdInfo"],"type":"object","properties":{"partyIdInfo":{"$ref":"#/definitions/PartyIdInfo","description":"Party Id type, id, sub ID or type, and FSP Id."},"merchantClassificationCode":{"description":"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.","type":"string"},"name":{"description":"Display name of the Party, could be a real name or a nick name.","type":"string"},"personalInfo":{"$ref":"#/definitions/PartyPersonalInfo","description":"Personal information used to verify identity of Party such as first, middle, last name and date of birth."}}},"PartyComplexName":{"title":"PartyComplexName","description":"Data model for the complex type PartyComplexName.","type":"object","properties":{"firstName":{"description":"Party’s first name.","type":"string"},"middleName":{"description":"Party’s middle name.","type":"string"},"lastName":{"description":"Party’s last name.","type":"string"}}},"PartyIdInfo":{"title":"PartyIdInfo","description":"Data model for the complex type PartyIdInfo.","required":["partyIdType","partyIdentifier"],"type":"object","properties":{"partyIdType":{"description":"Type of the identifier.","type":"string"},"partyIdentifier":{"description":"An identifier for the Party.","type":"string"},"partySubIdOrType":{"description":"A sub-identifier or sub-type for the Party.","type":"string"},"fspId":{"description":"FSP ID (if known)","type":"string"}}},"PartiesTypeIDPutResponse":{"title":"PartiesTypeIDPutResponse","description":"PUT /parties/{Type}/{ID} object","required":["party"],"type":"object","properties":{"party":{"$ref":"#/definitions/Party","description":"Information regarding the requested Party."}}},"PartyPersonalInfo":{"title":"PartyPersonalInfo","description":"Data model for the complex type PartyPersonalInfo.","type":"object","properties":{"complexName":{"$ref":"#/definitions/PartyComplexName","description":"First, middle and last name for the Party."},"dateOfBirth":{"description":"Date of birth for the Party.","type":"string"}}},"PartyResult":{"title":"PartyResult","description":"Data model for the complex type PartyResult.","required":["partyId"],"type":"object","properties":{"partyId":{"$ref":"#/definitions/PartyIdInfo","description":"Party Id type, id, sub ID or type, and FSP Id."},"errorInformation":{"$ref":"#/definitions/ErrorInformation","description":"If the Party failed to be added, error information should be provided. Otherwise, this parameter should be empty to indicate success."}}},"QuotesPostRequest":{"title":"QuotesPostRequest","description":"POST /quotes object","required":["quoteId","transactionId","payee","payer","amountType","amount","transactionType"],"type":"object","properties":{"quoteId":{"description":"Common ID between the FSPs for the quote object, decided by the Payer FSP. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction.","type":"string"},"transactionId":{"description":"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction.","type":"string"},"transactionRequestId":{"description":"Identifies an optional previously-sent transaction request.","type":"string"},"payee":{"$ref":"#/definitions/Party","description":"Information about the Payee in the proposed financial transaction."},"payer":{"$ref":"#/definitions/Party","description":"Information about the Payer in the proposed financial transaction."},"amountType":{"description":"SEND for send amount, RECEIVE for receive amount.","type":"string"},"amount":{"$ref":"#/definitions/Money","description":"Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."},"fees":{"$ref":"#/definitions/Money","description":"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},"transactionType":{"$ref":"#/definitions/TransactionType","description":"Type of transaction for which the quote is requested."},"geoCode":{"$ref":"#/definitions/GeoCode","description":"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},"note":{"description":"A memo that will be attached to the transaction.","type":"string"},"expiration":{"description":"Expiration is optional. It can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, and Merchant to know that their request has a time limit.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"QuotesIDPutResponse":{"title":"QuotesIDPutResponse","description":"PUT /quotes/{ID} object","required":["transferAmount","expiration","ilpPacket","condition"],"type":"object","properties":{"transferAmount":{"$ref":"#/definitions/Money","description":"The amount of money that the Payee FSP should receive."},"payeeReceiveAmount":{"$ref":"#/definitions/Money","description":"The amount of Money that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees."},"payeeFspFee":{"$ref":"#/definitions/Money","description":"Payee FSP’s part of the transaction fee."},"payeeFspCommission":{"$ref":"#/definitions/Money","description":"Transaction commission from the Payee FSP."},"expiration":{"description":"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction.","type":"string"},"geoCode":{"$ref":"#/definitions/GeoCode","description":"Longitude and Latitude of the Payee. Can be used to detect fraud."},"ilpPacket":{"description":"The ILP Packet that must be attached to the transfer by the Payer.","type":"string"},"condition":{"description":"The condition that must be attached to the transfer by the Payer.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"Refund":{"title":"Refund","description":"Data model for the complex type Refund.","required":["originalTransactionId"],"type":"object","properties":{"originalTransactionId":{"description":"Reference to the original transaction ID that is requested to be refunded.","type":"string"},"refundReason":{"description":"Free text indicating the reason for the refund.","type":"string"}}},"Status":{"title":"Status","description":"Data model for the api status.","type":"object","properties":{"status":{"description":"The return status, usually \\"OK\\"","type":"string"},"uptime":{"description":"The amount of time in seconds that the server has been up for.","type":"number"},"startTime":{"description":"The UTC time that the server started up","type":"string"},"versionNumber":{"description":"Current version of the API","type":"string"},"services":{"description":"An list of the statuses of services that the API requires","type":"array","items":{}}}},"Transaction":{"title":"Transaction","description":"Data model for the complex type Transaction. The Transaction type is used to carry end-to-end data between the Payer FSP and the Payee FSP in the ILP Packet. Both the transactionId and the quoteId in the data model are decided by the Payer FSP in the POST /quotes.","required":["transactionId","quoteId","payee","payer","amount","transactionType"],"type":"object","properties":{"transactionId":{"description":"ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote.","type":"string"},"quoteId":{"description":"ID of the quote, the ID is decided by the Payer FSP during the creation of the quote.","type":"string"},"payee":{"$ref":"#/definitions/Party","description":"Information about the Payee in the proposed financial transaction."},"payer":{"$ref":"#/definitions/Party","description":"Information about the Payer in the proposed financial transaction."},"amount":{"$ref":"#/definitions/Money","description":"Transaction amount to be sent."},"transactionType":{"$ref":"#/definitions/TransactionType","description":"Type of the transaction."},"note":{"description":"Memo associated to the transaction, intended to the Payee.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"TransactionRequestsIDPutResponse":{"title":"TransactionRequestsIDPutResponse","description":"PUT /transactionRequests/{ID} object","required":["transactionRequestState"],"type":"object","properties":{"transactionId":{"description":"Identifies a related transaction (if a transaction has been created).","type":"string"},"transactionRequestState":{"description":"State of the transaction request.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"TransactionsIDPutResponse":{"title":"TransactionsIDPutResponse","description":"PUT /transactions/{ID} object","required":["transactionState"],"type":"object","properties":{"completedTimestamp":{"description":"Time and date when the transaction was completed.","type":"string"},"transactionState":{"description":"State of the transaction.","type":"string"},"code":{"description":"Optional redemption information provided to Payer after transaction has been completed.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"TransactionType":{"title":"TransactionType","description":"Data model for the complex type TransactionType.","required":["scenario","initiator","initiatorType"],"type":"object","properties":{"scenario":{"description":"Deposit, withdrawal, refund, …","type":"string"},"subScenario":{"description":"Possible sub-scenario, defined locally within the scheme.","type":"string"},"initiator":{"description":"Who is initiating the transaction - Payer or Payee","type":"string"},"initiatorType":{"description":"Consumer, agent, business, …","type":"string"},"refundInfo":{"$ref":"#/definitions/Refund","description":"Extra information specific to a refund scenario. Should only be populated if scenario is REFUND"},"balanceOfPayments":{"description":"Balance of Payments code.","type":"string"}}},"TransfersPostRequest":{"title":"TransfersPostRequest","description":"POST /transfers Request object","required":["transferId","payeeFsp","payerFsp","amount","ilpPacket","condition","expiration"],"type":"object","properties":{"transferId":{"description":"The common ID between the FSPs and the optional Switch for the transfer object, decided by the Payer FSP. The ID should be reused for resends of the same transfer. A new ID should be generated for each new transfer.","type":"string"},"payeeFsp":{"description":"Payee FSP in the proposed financial transaction.","type":"string"},"payerFsp":{"description":"Payer FSP in the proposed financial transaction.","type":"string"},"amount":{"$ref":"#/definitions/Money","description":"The transfer amount to be sent."},"ilpPacket":{"description":"The ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data.","type":"string"},"condition":{"description":"The condition that must be fulfilled to commit the transfer.","type":"string"},"expiration":{"description":"Expiration can be set to get a quick failure expiration of the transfer. The transfer should be rolled back if no fulfilment is delivered before this time.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"TransactionRequestsPostRequest":{"title":"TransactionRequestsPostRequest","description":"POST /transactionRequests object","required":["transactionRequestId","payee","payer","amount","transactionType"],"type":"object","properties":{"transactionRequestId":{"description":"Common ID between the FSPs for the transaction request object, decided by the Payee FSP. The ID should be reused for resends of the same transaction request. A new ID should be generated for each new transaction request.","type":"string"},"payee":{"$ref":"#/definitions/Party","description":"Information about the Payee in the proposed financial transaction."},"payer":{"$ref":"#/definitions/PartyIdInfo","description":"Information about the Payer type, id, sub-type/id, FSP Id in the proposed financial transaction."},"amount":{"$ref":"#/definitions/Money","description":"Requested amount to be transferred from the Payer to Payee."},"transactionType":{"$ref":"#/definitions/TransactionType","description":"Type of transaction."},"note":{"description":"Reason for the transaction request, intended to the Payer.","type":"string"},"geoCode":{"$ref":"#/definitions/GeoCode","description":"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},"authenticationType":{"description":"OTP or QR Code, otherwise empty.","type":"string"},"expiration":{"description":"Can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, Merchant to know that their request has a time limit.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}},"TransfersIDPutResponse":{"title":"TransfersIDPutResponse","description":"PUT /transfers/{ID} object","required":["transferState"],"type":"object","properties":{"fulfilment":{"description":"Fulfilment of the condition specified with the transaction. Mandatory if transfer has completed successfully.","type":"string"},"completedTimestamp":{"description":"Time and date when the transaction was completed.","type":"string"},"transferState":{"description":"State of the transfer.","type":"string"},"extensionList":{"$ref":"#/definitions/ExtensionList","description":"Optional extension, specific to deployment."}}}},"parameters":{"Accept":{"name":"accept","description":"The Accept header field indicates the version of the API the client would like the server to use.","in":"header","required":true,"type":"string"},"Content-Length":{"name":"content-length","description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)","in":"header","required":false,"type":"integer"},"Content-Type":{"name":"content-type","description":"The Content-Type header indicates the specific version of the API used to send the payload body.","in":"header","required":true,"type":"string"},"Date":{"name":"date","description":"The Date header field indicates the date when the request was sent.","in":"header","required":true,"type":"string"},"X-Forwarded-For":{"name":"x-forwarded-for","description":"The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For.","in":"header","required":false,"type":"string"},"FSPIOP-Source":{"name":"fspiop-source","description":"The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature).","in":"header","required":true,"type":"string"},"FSPIOP-Destination":{"name":"fspiop-destination","description":"The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes.","in":"header","required":false,"type":"string"},"FSPIOP-Encryption":{"name":"fspiop-encryption","description":"The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request.","in":"header","required":false,"type":"string"},"FSPIOP-Signature":{"name":"fspiop-signature","description":"The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature.","in":"header","required":false,"type":"string"},"FSPIOP-URI":{"name":"fspiop-uri","description":"The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document.","in":"header","required":false,"type":"string"},"FSPIOP-HTTP-Method":{"name":"fspiop-http-method","description":"The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document.","in":"header","required":false,"type":"string"},"ID":{"name":"ID","in":"path","required":true,"type":"string"},"Type":{"name":"Type","in":"path","required":true,"type":"string"},"SubId":{"name":"SubId","in":"path","required":true,"type":"string"}},"responses":{"ResponseHealth200":{"description":"OK","schema":{"$ref":"#/definitions/Status"}},"Response200":{"description":"OK"},"Response202":{"description":"Accepted"},"ErrorResponse400":{"description":"Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse401":{"description":"Unauthorized - The request requires authentication in order to be processed.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse403":{"description":"Forbidden - The request was denied and will be denied in the future.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse404":{"description":"Not Found - The resource specified in the URI was not found.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse405":{"description":"Method Not Allowed - An unsupported HTTP method for the request was used.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse406":{"description":"Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse501":{"description":"Not Implemented - The server does not support the requested service. The client should not retry.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}},"ErrorResponse503":{"description":"Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.","headers":{"Content-Length":{"description":"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.","type":"integer"},"Content-Type":{"description":"The Content-Type header indicates the specific version of the API used to send the payload body.","type":"string"}},"schema":{"$ref":"#/definitions/ErrorInformationResponse"}}}}')},349:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement;return(this._self._c||e)("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}})}),[],!1,null,null,null);t.default=n.exports},350:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("ClientOnly",[t("ApiDocWrapper",{attrs:{src:"api/thirdparty-pisp-api.yaml"}})],1)],1)}),[],!1,null,null,null);t.default=n.exports},351:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("ClientOnly",[t("ApiDocWrapper",{attrs:{src:"api/thirdparty-dfsp-api.yaml"}})],1)],1)}),[],!1,null,null,null);t.default=n.exports},352:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"background"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#background"}},[e._v("#")]),e._v(" Background")]),e._v(" "),r("p",[e._v("todo: write this doc")]),e._v(" "),r("ul",[r("li",[e._v("what is PISP?")]),e._v(" "),r("li",[e._v("why?")]),e._v(" "),r("li",[e._v("progress")]),e._v(" "),r("li",[e._v("examples")])])])}),[],!1,null,null,null);t.default=n.exports},353:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"error-codes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#error-codes"}},[e._v("#")]),e._v(" Error Codes")]),e._v(" "),r("p",[e._v("This document is suggesting that a high level error category 6xxx(can be another number if 6xxx is reserved) be used to represent errors that are returned to a third party such as PISP’s and AISP’s. These are error codes the Switch would send back to a PISP.")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Third Party Error")]),e._v(" -- "),r("strong",[e._v("60")]),r("em",[e._v("xx")])])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("Error Code")])]),e._v(" "),r("th",[r("strong",[e._v("Name")])]),e._v(" "),r("th",[r("strong",[e._v("Description")])]),e._v(" "),r("th",[e._v("/parties")]),e._v(" "),r("th",[e._v("/thirdPartyRequest")]),e._v(" "),r("th",[e._v("/consentRequests")]),e._v(" "),r("th",[e._v("/authorizations")]),e._v(" "),r("th",[e._v("/consents")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("6000")])]),e._v(" "),r("td",[e._v("Third party error")]),e._v(" "),r("td",[e._v("Generic third party error.")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6001")])]),e._v(" "),r("td",[e._v("Third party request error")]),e._v(" "),r("td",[e._v("Third party request failed.")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")])])])]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Permission Error")]),e._v(" -- "),r("strong",[e._v("61")]),r("em",[e._v("xx")])])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("Error Code")])]),e._v(" "),r("th",[r("strong",[e._v("Name")])]),e._v(" "),r("th",[r("strong",[e._v("Description")])]),e._v(" "),r("th",[e._v("/parties")]),e._v(" "),r("th",[e._v("/thirdPartyRequest")]),e._v(" "),r("th",[e._v("/consentRequests")]),e._v(" "),r("th",[e._v("/authorizations")]),e._v(" "),r("th",[e._v("/consents")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("6100")])]),e._v(" "),r("td",[e._v("Authentication rejection")]),e._v(" "),r("td",[e._v("Generic authentication rejection")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6101")])]),e._v(" "),r("td",[e._v("Unsupported authentication channel")]),e._v(" "),r("td",[e._v("Authentication request is attempting to authorize with an authentication channel that the DFSP does not support. Example Web, OTP.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6102")])]),e._v(" "),r("td",[e._v("Unsupported scopes were requested")]),e._v(" "),r("td",[e._v("Authentication request is attempting to get authorization for scopes that the DFSP doesn’t allow/support")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6103")])]),e._v(" "),r("td",[e._v("Consent not given")]),e._v(" "),r("td",[e._v("DFSP denies user gave consent or DFSP says user has revoked consent.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6104")])]),e._v(" "),r("td",[e._v("Consent not valid")]),e._v(" "),r("td",[e._v("DFSP denies user has valid consent with correct credentials.")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td"),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6105")])]),e._v(" "),r("td",[e._v("Thirdparty request rejection")]),e._v(" "),r("td",[e._v("DFSP catch all error used when it rejects a thirdparty request.")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")])])])]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Validation Error")]),e._v(" -- "),r("strong",[e._v("62")]),r("em",[e._v("xx")])])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[r("strong",[e._v("Error Code")])]),e._v(" "),r("th",[r("strong",[e._v("Name")])]),e._v(" "),r("th",[r("strong",[e._v("Description")])]),e._v(" "),r("th",[e._v("/parties")]),e._v(" "),r("th",[e._v("/thirdPartyRequest")]),e._v(" "),r("th",[e._v("/consentRequests")]),e._v(" "),r("th",[e._v("/authorizations")]),e._v(" "),r("th",[e._v("/consents")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("6200")])]),e._v(" "),r("td",[e._v("Invalid signed challenge")]),e._v(" "),r("td",[e._v("PISP server/DFSP receives signed challenge that is invalid.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6201")])]),e._v(" "),r("td",[e._v("Maximum authorization retires reached")]),e._v(" "),r("td",[e._v("PISP server has reached maximum number of authorizations.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6202")])]),e._v(" "),r("td",[e._v("Missing authentication credential")]),e._v(" "),r("td",[e._v("Payload received with missing authentication credential.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6203")])]),e._v(" "),r("td",[e._v("Invalid authentication token")]),e._v(" "),r("td",[e._v("DFSP receives invalid authentication token from PISP.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6204")])]),e._v(" "),r("td",[e._v("OTP is incorrect")]),e._v(" "),r("td",[e._v("One time password is incorrect.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("6205")])]),e._v(" "),r("td",[e._v("Mismatched thirdparty ID")]),e._v(" "),r("td",[e._v("Thirdparty ID doesn't match corresponding thirdparty request.")]),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td"),e._v(" "),r("td",[e._v("X")]),e._v(" "),r("td")])])])])}),[],!1,null,null,null);t.default=n.exports},354:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"design-decisions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#design-decisions"}},[e._v("#")]),e._v(" Design Decisions")]),e._v(" "),r("blockquote",[r("p",[e._v("For now, let's place the decisions inline for ease of reference, but we may want each decision to have it's own "),r("code",[e._v(".md")]),e._v(" file in the future.")])]),e._v(" "),r("h2",{attrs:{id:"outstanding-questions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#outstanding-questions"}},[e._v("#")]),e._v(" Outstanding Questions")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Q: How does the switch "),r("em",[e._v("know")]),e._v(" to send a callback to the PISP after a sucessful transfer?")]),e._v(" "),r("ul",[r("li",[e._v("Refer to "),r("a",{attrs:{href:"https://github.com/mojaloop/pisp/issues/42",target:"_blank",rel:"noopener noreferrer"}},[e._v("#42"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[e._v("Q: Will we make a new "),r("code",[e._v("thirdparty-scheme-adapter")]),e._v(" to handle thirdparty requests?")]),e._v(" "),r("ul",[r("li",[e._v("Signs point to yes at the moment, but the challenge is how to divide between the existing "),r("code",[e._v("sdk-scheme-adapter")]),e._v(" and a new "),r("code",[e._v("thirdparty-scheme-adapter")])])])])]),e._v(" "),r("h2",{attrs:{id:"decisions-made"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#decisions-made"}},[e._v("#")]),e._v(" Decisions Made")]),e._v(" "),r("h3",{attrs:{id:"how-does-the-switch-determine-whether-or-not-a-dfsp-is-using-their-own-fido-service-do-we-want-to-use-the-als-or-some-other-method"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-does-the-switch-determine-whether-or-not-a-dfsp-is-using-their-own-fido-service-do-we-want-to-use-the-als-or-some-other-method"}},[e._v("#")]),e._v(" How does the switch determine whether or not a DFSP is using their own FIDO service? Do we want to use the ALS or some other method?")]),e._v(" "),r("p",[e._v("We will use the ALS to record the auth service for a given participant")]),e._v(" "),r("p",[e._v("For example, to find the Auth service for "),r("code",[e._v("dfspa")]),e._v(", a participant can call "),r("code",[e._v("GET /participants/AUTHSERVICE/dfspa")])]),e._v(" "),r("h4",{attrs:{id:"example-1-internal-auth-service"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#example-1-internal-auth-service"}},[e._v("#")]),e._v(" Example 1. internal auth-service")]),e._v(" "),r("p",[r("strong",[e._v("request")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("GET /participants/AUTHSERVICE/dfspa\n")])])]),r("p",[r("strong",[e._v("response")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('{\n  "fspId": "switch"\n}\n')])])]),r("h4",{attrs:{id:"example-2-dfsp-s-own-auth-service"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#example-2-dfsp-s-own-auth-service"}},[e._v("#")]),e._v(" Example 2. dfsp's own auth service")]),e._v(" "),r("p",[r("strong",[e._v("request")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("GET /participants/AUTHSERVICE/dfspb\n")])])]),r("p",[r("strong",[e._v("response")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('{\n  "fspId": "dfspb"\n}\n')])])]),r("h3",{attrs:{id:"will-the-pisp-demo-server-use-the-sdk-scheme-adapter-thirdparty-scheme-adapter-or-will-it-speak-native-async-mojaloop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#will-the-pisp-demo-server-use-the-sdk-scheme-adapter-thirdparty-scheme-adapter-or-will-it-speak-native-async-mojaloop"}},[e._v("#")]),e._v(" Will the "),r("code",[e._v("pisp-demo-server")]),e._v(" use the "),r("code",[e._v("sdk-scheme-adapter")]),e._v("/"),r("code",[e._v("thirdparty-scheme-adapter")]),e._v("? Or will it speak native async mojaloop?")]),e._v(" "),r("p",[e._v("It will speak native async mojaloop, so will not be using any adapter. It will however use the "),r("code",[e._v("sdk-standard-components")]),e._v(" which is currently being updated for")]),e._v(" "),r("p",[e._v("For now, we are adding PISP functionality to the sdk-scheme-adapter primarily because the mojaloop-simulator requires it for our end to end tests.")]),e._v(" "),r("h3",{attrs:{id:"which-api-should-the-dfsp-need-to-implement-for-pisp-functionaliy-we-have-a-few-options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#which-api-should-the-dfsp-need-to-implement-for-pisp-functionaliy-we-have-a-few-options"}},[e._v("#")]),e._v(" Which api should the DFSP need to implement for PISP functionaliy? We have a few options:")]),e._v(" "),r("ol",[r("li",[e._v("Add the DFSP changes to the existing FSPIOP-API")]),e._v(" "),r("li",[e._v("Add the DFSP changes to the new "),r("code",[e._v("thirdparty-api")])]),e._v(" "),r("li",[e._v("Divide the "),r("code",[e._v("thirdparty-api")]),e._v(" into 2 parts:\n"),r("ul",[r("li",[r("code",[e._v("thirdparty-pisp-api")]),e._v(" for the PISP to implement")]),e._v(" "),r("li",[r("code",[e._v("thirdparty-dfsp-api")]),e._v(" for the DFSP to implement")])])])]),e._v(" "),r("p",[e._v("A: Option 3: We are going to divide the new thirdparty-api into 2 parts.")]),e._v(" "),r("p",[e._v("Refer to "),r("a",{attrs:{href:"https://github.com/mojaloop/design-authority/issues/47",target:"_blank",rel:"noopener noreferrer"}},[e._v("DA issue #47"),r("OutboundLink")],1),e._v(" for more information about this decision.")]),e._v(" "),r("h3",{attrs:{id:"how-should-we-implement-the-changes-required-for-the-pisp-role"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#how-should-we-implement-the-changes-required-for-the-pisp-role"}},[e._v("#")]),e._v(" How should we implement the changes required for the PISP role?")]),e._v(" "),r("ul",[r("li",[e._v("Should we extend the existing APIs or should we create one or more new APIs to manage the specialised PISP interactions?")])]),e._v(" "),r("p",[e._v("We are going to add a new api, called the "),r("code",[e._v("thirdparty-api")]),e._v(" to cover at least the PISP's interactions with the switch.")]),e._v(" "),r("p",[e._v("There is still the outstanding question for the DFSP side of the equation (See above)")]),e._v(" "),r("h3",{attrs:{id:"should-the-mojaloop-auth-service-api-be-sync-or-async"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#should-the-mojaloop-auth-service-api-be-sync-or-async"}},[e._v("#")]),e._v(" Should the "),r("code",[e._v("mojaloop/auth-service")]),e._v(" API be Sync or Async?")]),e._v(" "),r("p",[e._v("It will be Async")]),e._v(" "),r("h3",{attrs:{id:"what-is-the-challenge-that-is-being-signed-during-the-transfer-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-is-the-challenge-that-is-being-signed-during-the-transfer-flow"}},[e._v("#")]),e._v(" What is the challenge that is being signed during the transfer flow?")]),e._v(" "),r("p",[e._v("The condition from the "),r("code",[e._v("QuoteResponse")]),e._v(" object should be signed by the PISP app running on the user's device.")]),e._v(" "),r("h3",{attrs:{id:"pisp-transfer-initiation-resource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pisp-transfer-initiation-resource"}},[e._v("#")]),e._v(" PISP transfer initiation resource")]),e._v(" "),r("p",[e._v("For the PISP role, we will add an additional resource to the API to initiate a 3rd party payment")]),e._v(" "),r("ul",[r("li",[e._v("currently we are planning on calling it "),r("code",[e._v("/thirdPartyRequests/transfer")]),e._v(". This may change.")]),e._v(" "),r("li",[e._v("For our current implementation work however, we can still use the existing "),r("code",[e._v("/transactionRequests")]),e._v(" resource.")])]),e._v(" "),r("h3",{attrs:{id:"handling-of-an-authorization-for-external-fido"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#handling-of-an-authorization-for-external-fido"}},[e._v("#")]),e._v(" Handling of an "),r("code",[e._v("/authorization")]),e._v(" for external FIDO")]),e._v(" "),r("p",[e._v("In the case where a DFSP wishes to bring their own FIDO Service instead of using the FIDO service that is a part of the hub ("),r("code",[e._v("mojaloop/auth-service")]),e._v("), we want to pass on the "),r("code",[e._v("PUT /authorization/{id}")]),e._v(" (see "),r("code",[e._v("AG-26")]),e._v(" in the Transfers E2E flow) directly to the DFSP for their own FIDO Service to verify that the public key matches the signed challenge.")]),e._v(" "),r("p",[e._v("This means that we don't need to unpack the "),r("code",[e._v("authorization")]),e._v(" object, nor do we need to design a new API Endpoint for external auth services.")]),e._v(" "),r("p",[e._v("This does, however, require some thinking about the error cases when verifying the signed challenge. Here is what we have proposed:")]),e._v(" "),r("ul",[r("li",[e._v("internal (Mojaloop-hosted) fido: failure case for FIDO -> forward error to DFSP in "),r("code",[e._v("PUT /authorizations/{id}/error")])]),e._v(" "),r("li",[e._v("external fido: forward whole "),r("code",[e._v("PUT /authorizations/{id}")]),e._v(" request to the DFSP to take care")])])])}),[],!1,null,null,null);t.default=n.exports},355:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"branch-strategy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#branch-strategy"}},[e._v("#")]),e._v(" branch strategy:")]),e._v(" "),r("ol",[r("li",[e._v("When we are creating a new branch we are using "),r("code",[e._v("pisp/")]),e._v(" prefix in branch name.")]),e._v(" "),r("li",[e._v("We have "),r("code",[e._v("pisp/master")]),e._v(" leading branch to keep our final feature candidate to be merged with "),r("code",[e._v("master")])]),e._v(" "),r("li",[e._v("Newly created PR for every WIP branch should have "),r("code",[e._v("pisp/master")]),e._v(" set as target")]),e._v(" "),r("li",[e._v("When the new version of "),r("code",[e._v("master")]),e._v(" is published (by other team for example), we should propagate all changes via merge with "),r("code",[e._v("pisp/master")])])]),e._v(" "),r("h2",{attrs:{id:"pisp-changes-in-other-repos"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pisp-changes-in-other-repos"}},[e._v("#")]),e._v(" PISP changes in other Repos :")]),e._v(" "),r("ol",[r("li",[e._v("POST /authorizations Swagger changes "),r("a",{attrs:{href:"https://github.com/mojaloop/mojaloop/issues/269",target:"_blank",rel:"noopener noreferrer"}},[e._v("#269"),r("OutboundLink")],1),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/mojaloop/mojaloop-specification/commit/6ca00674e96990053926da29a2af3f07cf71b976",target:"_blank",rel:"noopener noreferrer"}},[e._v("mojaloop-specification"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/mojaloop/transaction-requests-service/commit/05c6b822bbb53e5d7eac4003d3369e6c09b67459",target:"_blank",rel:"noopener noreferrer"}},[e._v("transaction-requests-service"),r("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=n.exports},356:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"dfsp-integration-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dfsp-integration-guide"}},[this._v("#")]),this._v(" DFSP Integration Guide")]),this._v(" "),t("p",[this._v("TODO: write this doc")])])}),[],!1,null,null,null);t.default=n.exports},357:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"dfsp-integration-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dfsp-integration-guide"}},[this._v("#")]),this._v(" DFSP Integration Guide")]),this._v(" "),t("p",[this._v("TODO: write this doc")])])}),[],!1,null,null,null);t.default=n.exports},358:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"pisp-integration-guide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pisp-integration-guide"}},[this._v("#")]),this._v(" PISP Integration Guide")]),this._v(" "),t("p",[this._v("TODO: write this doc")])])}),[],!1,null,null,null);t.default=n.exports},359:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"identifiers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#identifiers"}},[e._v("#")]),e._v(" Identifiers")]),e._v(" "),r("blockquote",[r("p",[r("em",[r("strong",[e._v("Note:")]),e._v(" This isn't the final destination for this documentation, I just figured this repo would be a good place to add any new docs. If you think it belongs elsewhere, please suggest a new location.")])])]),e._v(" "),r("h2",{attrs:{id:"purpose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#purpose"}},[e._v("#")]),e._v(" Purpose:")]),e._v(" "),r("p",[e._v("Within the PISP world we are designing, we need a means to associate a PISP's view of a (user + device + account) with a DFSP's view of a (Party + Account), and be able to share such an association with other participants (DFSPs) in the Mojaloop Ecosystem.")]),e._v(" "),r("p",[e._v("For example:")]),e._v(" "),r("ol",[r("li",[e._v("Ayeesha holds 2 accounts with "),r("code",[e._v("DFSP A")]),e._v(", a Savings Account and Chequing Account")]),e._v(" "),r("li",[e._v("She also has a PISP account with "),r("code",[e._v("PISP X")]),e._v(", and has associated her Chequing Account with "),r("code",[e._v("DFSP A")]),e._v(" with the PISP's app on her mobile device")]),e._v(" "),r("li",[e._v("Ayeesha wishes to send to Bravesh, who holds an account with "),r("code",[e._v("DFSP B")])]),e._v(" "),r("li",[e._v("Ayeesha wants to initiate the payment from the convenience of her PISP app (this flow is covered elsewhere)")]),e._v(" "),r("li",[e._v("Since she holds more than 1 account with "),r("code",[e._v("DFSP A")]),e._v(', the PISP needs a method to "tell" '),r("code",[e._v("DFSP A")]),e._v(" which account Ayeesha wishes to use, and to debit.")])]),e._v(" "),r("p",[e._v("This document aims to define the relationship between a party's account with a DFSP and a (Device + User + Account) registered with a PISP. Such a relationship needs to be:")]),e._v(" "),r("ol",[r("li",[r("strong",[e._v("routeable:")]),e._v(" Today, the Mojaloop ALS (account lookup service) is for looking up "),r("em",[e._v("parties")]),e._v(" and their associated "),r("em",[e._v("DFSPs")]),e._v(" and not specific "),r("em",[e._v("accounts")]),e._v(". For the sake of the PISP proposal, this means we need a new way to identify both a party and it's account which is held with a DFSP.\n"),r("ul",[r("li",[e._v('1.1 This allows a PISP to "tell" a DFSP which account the user intended to send the funds from')])])]),e._v(" "),r("li",[r("strong",[e._v("secure:")]),e._v(" We don't want to ask DFSPs to disclose potentially sensitive information about a user and/or their account to the PISP if we don't have to.")])]),e._v(" "),r("h2",{attrs:{id:"flows"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#flows"}},[e._v("#")]),e._v(" Flows:")]),e._v(" "),r("h3",{attrs:{id:"basic-sequence-diagram"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#basic-sequence-diagram"}},[e._v("#")]),e._v(" Basic Sequence Diagram")]),e._v(" "),r("ol",[r("li",[e._v("Ayeesha registers her chequing account with DFSP A to the PISP App")])]),e._v(" "),r("blockquote",[r("p",[e._v("... Account Linking Steps here...")])]),e._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[e._v("DFSP A generates a random UUID, "),r("code",[e._v("1111-2222")]),e._v(", and internally saves a record: "),r("code",[e._v("1111-2222")]),e._v(" refers to Ayeesha's Chequing account")]),e._v(" "),r("li",[e._v("DFSP A informs the PISP Server of the UUID, and asks it to use that UUID to refer to Ayeesha's chequing account on the PISP End")]),e._v(" "),r("li",[e._v("Async? callback")]),e._v(" "),r("li",[e._v("Internal processing")]),e._v(" "),r("li",[e._v("DFSP A asks the switch to create a new "),r("code",[e._v("ASSOCIATION")]),e._v(" for "),r("code",[e._v("1111-2222")])]),e._v(" "),r("li",[e._v("Async Callback")]),e._v(" "),r("li",[e._v("Switch asks the ALS to create a new key/value pair for "),r("code",[e._v("ASSOCIATION/1111-2222")]),e._v(" + "),r("code",[e._v("DFSPA")])]),e._v(" "),r("li",[e._v("Async Callback")]),e._v(" "),r("li",[e._v("Switch calls back to DFSP A, saying that the association has been created")]),e._v(" "),r("li",[e._v("DFSP calls back to the PISP Server, informing it that the association has been created")])]),e._v(" "),r("h2",{attrs:{id:"questions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[e._v("#")]),e._v(" Questions:")]),e._v(" "),r("p",[e._v("Q: Why can't the association between a PISP and DFSP Account be stored either with the DFSP or PISP? For example, the DFSP could give an account number to the PISP to store. Or the opposite, the PISP could generate their own association ID to give to the DFSP to be able to identify the sending account.\nA: A few reasons:")]),e._v(" "),r("ul",[r("li",[e._v("There is no standard for accounts defined in Mojaloop. For the DFSP to give an 'account number' to the PISP, this would need to be defined, and would make the solution less generalizable accross a myriad of DFSPs")]),e._v(" "),r("li",[e._v("Even if we did have a standard for 'account number' the DFSP could share the a PISP, do we really want to ask the DFSP to disclose this information? In some instances it might be ok from a security perspective, but once again, that is heavily dependent on the DFSP's own implementations, which we don't want to get involved with.")]),e._v(" "),r("li",[e._v('The PISP could create an identifier and ask the DFSP to store this for them, but it seems to me that PISPs should be "read only" from DFSPs, and asking DFSPs to store a value on behalf of the PISPs would break the existing convention we have.\n'),r("blockquote",[r("p",[e._v("Could someone please add to this answer? Or let me know if it even makes sense? I'm sure there's other reasons we don't want to do this.")])])])]),e._v(" "),r("h2",{attrs:{id:"previous-discussion"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#previous-discussion"}},[e._v("#")]),e._v(" Previous Discussion")]),e._v(" "),r("blockquote",[r("p",[e._v("A summary of the existing discussion from our meeting + Slack.")])]),e._v(" "),r("h3",{attrs:{id:"london-meeting-notes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#london-meeting-notes"}},[e._v("#")]),e._v(" London Meeting Notes")]),e._v(" "),r("h4",{attrs:{id:"account-identifiers-and-information"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#account-identifiers-and-information"}},[e._v("#")]),e._v(" Account identifiers and Information")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Need more work on this, most focus thus far has been on sending, not receiving")])]),e._v(" "),r("li",[r("p",[e._v("e.g. From Alice@DFSPA to Bob@DFSPB")])]),e._v(" "),r("li",[r("p",[e._v("But DFSPA needs to know which account to debit")])]),e._v(" "),r("li",[r("p",[e._v("Therefore need to assign identifiers")]),e._v(" "),r("ul",[r("li",[e._v("because we are “sending from the account”")])])]),e._v(" "),r("li",[r("p",[e._v("Identifiers act as a link between PISP to a single account at DFSP")])]),e._v(" "),r("li",[r("p",[e._v("PISP should know about it...")])]),e._v(" "),r("li",[r("p",[e._v("need to do GET parties "),r("em",[e._v("both")]),e._v(" for Sending Party and Receiving Party")]),e._v(" "),r("ul",[r("li",[e._v('E.g. check the sending account is not frozen. Give the Sending DFSP a chance to say "Wait, no this acc')]),e._v(" "),r("li",[e._v("need to map between what the PISP knows with what it can Tell the other Mojaloop participants")])])])]),e._v(" "),r("h3",{attrs:{id:"slack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slack"}},[e._v("#")]),e._v(" Slack")]),e._v(" "),r("p",[r("em",[e._v("Michael Richards:")])]),e._v(" "),r("p",[r("strong",[e._v("Thoughts on identifiers:")]),r("br"),e._v("\nAs part of the association process, either the PISP or the DFSP creates a nonce value (e.g. a UUID) to identify the association with a particular account.")]),e._v(" "),r("ol",[r("li",[e._v("We add a new identifier type, say ASSOCIATION")]),e._v(" "),r("li",[e._v("The PISP and the DFSP share the newly created value")]),e._v(" "),r("li",[e._v("The DFSP registers that value with the ALS")]),e._v(" "),r("li",[e._v("Now, when the PISP wants to identify the DFSP associated with a particular association, it can simply ask the ALS: who owns this association value? and the ALS responds: the DFSP...")])]),e._v(" "),r("p",[r("em",[e._v("Lewis Daly:")])]),e._v(" "),r("p",[e._v("Thanks Michael, can you please jog my memory about the problem being solved with this?")]),e._v(" "),r("p",[r("em",[e._v("Sam:")])]),e._v(" "),r("p",[e._v("@Lewis Daly this is a proposal I think, to provide for identifying & associating multiple accounts (understanding the possibility of having multiple accounts for a same ID). Right now, the API supports only one account for any ID."),r("br"),e._v("\n@Michael Richards please let me know if I understood that correctly")]),e._v(" "),r("p",[r("em",[e._v("matdehaast:")]),r("br"),e._v("\nAnd also ensuring account data provided to PISP's aren't sensitive data and mapped internally")]),e._v(" "),r("p",[r("em",[e._v("Michael Richards:")])]),e._v(" "),r("p",[e._v("The way in which Mojaloop obtains the route to a DFSP is by using an identifier - a "),r("code",[e._v("MSISDN")]),e._v(", or "),r("code",[e._v("IBAN")]),e._v(", or whatever - to get an answer from the ALS: apply to this DFSP.")]),e._v(" "),r("p",[e._v("The DFSP then associates the identifier with an actual transaction account using its own internal processes which are undefined as far as Mojaloop is concerned. For associations between a PISP and a DFSP, we need to ensure that the identifier used by the PISP will always route to the associated account, so we want to make the identifier specific to that account. Which is what this solution is designed to achieve...")]),e._v(" "),r("p",[r("em",[e._v("Lewis Daly:")])]),e._v(" "),r("p",[e._v("Ah I see, thanks. And as Matt said, we also want to make sure a PISP doesn’t know sensitive information about the account holder, right? Otherwise we could determine the UUID deterministically (ie. a hash value of the dfspId, pispId and account iban/msisdn)")]),e._v(" "),r("p",[r("em",[e._v("Michael Richards:")])]),e._v(" "),r("p",[e._v("Yes, indeed. You should keep arbitrary things arbitrary, in my view...")])])}),[],!1,null,null,null);t.default=n.exports},360:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",[e._v("Contents")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#1-linking"}},[e._v("1. Linking")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#11-pre-linking"}},[e._v("1.1. Pre-linking")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#12-discovery"}},[e._v("1.2. Discovery")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#13-request-consent"}},[e._v("1.3. Request consent")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#131-web"}},[e._v("1.3.1. Web")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#132-otp--sms"}},[e._v("1.3.2. OTP / SMS")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#14-authentication"}},[e._v("1.4. Authentication")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#141-web"}},[e._v("1.4.1. Web")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#142-otp"}},[e._v("1.4.2. OTP")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#15-grant-consent"}},[e._v("1.5. Grant consent")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#16-credential-registration"}},[e._v("1.6. Credential registration")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#161-requesting-a-challenge"}},[e._v("1.6.1. Requesting a challenge")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#162-finalizing-the-credential"}},[e._v("1.6.2. Finalizing the credential")])])])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#2-unlinking"}},[e._v("2. Unlinking")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#3-third-party-credential-registration"}},[e._v("3. Third-party credential registration")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#31-authentication"}},[e._v("3.1. Authentication")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#32-credential-registration"}},[e._v("3.2. Credential registration")])])])])]),e._v(" "),s("h1",{attrs:{id:"_1-linking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-linking"}},[e._v("#")]),e._v(" 1. Linking")]),e._v(" "),s("p",[e._v("The goal of the linking process is to explain how users establish trust between\nall three interested parties:")]),e._v(" "),s("ol",[s("li",[e._v("User")]),e._v(" "),s("li",[e._v("DFSP where User has an account")]),e._v(" "),s("li",[e._v("PISP that User wants to rely on to initiate payments")])]),e._v(" "),s("p",[s("em",[e._v("NOTE: For now, we're focusing on the FIDO / Web authentication channel.")])]),e._v(" "),s("p",[e._v("Linking is broken down into several separate phases:")]),e._v(" "),s("ol",[s("li",[s("strong",[e._v("Pre-linking")]),e._v("\nIn this phase, a PISP asks what DFSPs are available to link with.")]),e._v(" "),s("li",[s("strong",[e._v("Request consent")]),e._v("\nIn this phase, a PISP attempts to establish trust between the 3 parties.")]),e._v(" "),s("li",[s("strong",[e._v("Authentication")]),e._v("\nIn this phase, a User proves their identity to their DFSP.")]),e._v(" "),s("li",[s("strong",[e._v("Grant consent")]),e._v("\nIn this phase, a PISP proves to the DFSP that the User and PISP have\nestablished trust and, as a result, the DFSP confirms that mutual trust\nexists between the 3 parties.")]),e._v(" "),s("li",[s("strong",[e._v("Credential registration")]),e._v("\nIn this phase, a User establishes the credential they'll use to consent to\nfuture transfers from the DFSP and initiated by the PISP.")])]),e._v(" "),s("h2",{attrs:{id:"_1-1-pre-linking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-pre-linking"}},[e._v("#")]),e._v(" 1.1. Pre-linking")]),e._v(" "),s("p",[e._v("In this phase, a PISP Server needs to know what DFSPs are available to link\nwith. This is "),s("em",[e._v("unlikely")]),e._v(' to be done on-demand (e.g., when a User clicks "link"\nin the PISP mobile App), and far more likely to be done periodically and cached\nby the PISP Server. The reason for this is simply that new DFSPs don\'t typically\njoin the Mojaloop network all that frequently, so calling this multiple times on\nthe same day (or even the same month) would likely yield the same results.')]),e._v(" "),s("p",[e._v("The end-goal of this phase is for the PISP Server to have a final list of DFSPs\navailable and any relevant metadata about those DFPSs that are necessary to\nbegin the linking process.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(309),alt:"Pre-linking"}})]),e._v(" "),s("h2",{attrs:{id:"_1-2-discovery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-discovery"}},[e._v("#")]),e._v(" 1.2. Discovery")]),e._v(" "),s("p",[e._v("In this phase, we ask the user for the identifier they use with the DFSP they\nintend to link with. This could be a username, MSISDN (phone number), or email\naddress.")]),e._v(" "),s("p",[e._v("The result of this phase is a list of potential accounts available for linking.\nThe user will then choose one or more of these source accounts and the PISP will\nprovide these to the DFSP when requesting consent.")]),e._v(" "),s("p",[s("strong",[e._v("NOTE:")]),e._v(" When using the Web authentication channel, it's possible that the\nchoices made (i.e., the accounts to link with) will be overridden by the user in\na web view. In other words, the user may decide during the Authentication phase\nthat they actually would like to link a different account than those chosen at\nthe very beginning. This is perfectly acceptable and should be expected from\ntime to time.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(310),alt:"Discovery"}})]),e._v(" "),s("h2",{attrs:{id:"_1-3-request-consent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-request-consent"}},[e._v("#")]),e._v(" 1.3. Request consent")]),e._v(" "),s("p",[e._v("In this phase, a PISP is asking a specific DFSP to start the process of\nestablishing consent between three parties:")]),e._v(" "),s("ol",[s("li",[e._v("The PISP")]),e._v(" "),s("li",[e._v("The specified DFSP")]),e._v(" "),s("li",[e._v("A User that is presumed to be a customer of the DFSP in (2)")])]),e._v(" "),s("p",[e._v("The PISPs request to establish consent must include a few important pieces of\ninformation:")]),e._v(" "),s("ul",[s("li",[e._v("The authentication channels that are acceptable to the User")]),e._v(" "),s("li",[e._v("The scopes required as part of the consent (in this case, almost always just\nthe ability to view a balance of a specific account and send funds from an\naccount).")])]),e._v(" "),s("p",[e._v("Some information depends on the authentication channel used (either web or OTP).\nSpecically, if the web authentication channel is used, the following extra\ninformation is required:")]),e._v(" "),s("ul",[s("li",[e._v("A callback URI of where a user can be redirected with any extra information.")])]),e._v(" "),s("p",[e._v("The end result of this phase depends on the authentication channel used:")]),e._v(" "),s("h3",{attrs:{id:"_1-3-1-web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-web"}},[e._v("#")]),e._v(" 1.3.1. Web")]),e._v(" "),s("p",[e._v("In the web authentication channel, the result is the PISP being instructed on\na specific URL where this supposed user should be redirected. This URL should be\na place where the user can prove their identity (e.g., by logging in).")]),e._v(" "),s("p",[s("img",{attrs:{src:r(311),alt:"Request consent"}})]),e._v(" "),s("h3",{attrs:{id:"_1-3-2-otp-sms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-otp-sms"}},[e._v("#")]),e._v(" 1.3.2. OTP / SMS")]),e._v(" "),s("p",[e._v("In the OTP authentication channel, the result is the PISP being instructed on\na specific URL where this supposed user should be redirected. This URL should be\na place where the user can prove their identity (e.g., by logging in).")]),e._v(" "),s("p",[s("img",{attrs:{src:r(312),alt:"Request consent"}})]),e._v(" "),s("h2",{attrs:{id:"_1-4-authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-authentication"}},[e._v("#")]),e._v(" 1.4. Authentication")]),e._v(" "),s("p",[e._v("In the authentication phase, the user is expected to prove their identity to the\nDFSP. Once this is done, the DFSP will provide the User with some sort of secret\n(e.g., an OTP or access token). This secret will then be passed along to the\nPISP so that the PISP can demonstrate a chain of trust:")]),e._v(" "),s("ul",[s("li",[e._v("The DFSP trusts the User")]),e._v(" "),s("li",[e._v("The DFSP gives the User a secret")]),e._v(" "),s("li",[e._v("The User trusts the PISP")]),e._v(" "),s("li",[e._v("The User gives the PISP the secret that came from the DFSP")]),e._v(" "),s("li",[e._v("The PISP gives the secret to the DFSP")]),e._v(" "),s("li",[e._v("The DFSP verified that the secret is correct")])]),e._v(" "),s("p",[e._v("This chain results in the conclusion: The DFSP can trust the PISP is acting on\nbehalf of the User, and mutual trust exists between all three parties.")]),e._v(" "),s("p",[e._v("The process of establishing this chain of trust depends on the authentication\nchannel being used:")]),e._v(" "),s("h3",{attrs:{id:"_1-4-1-web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-web"}},[e._v("#")]),e._v(" 1.4.1. Web")]),e._v(" "),s("p",[e._v("In the web authentication channel, the user is actually redirected to the DFSP's\nwebsite where they can prove their identity (likely by a typical username and\npassword style login).")]),e._v(" "),s("p",[s("strong",[e._v("Note:")]),e._v(" Keep in mind that at this stage, the User may update their choices of\nwhich accounts to link with. The result of this will be seen later on when\nduring the Grant consent phase, where the DFSP will provide the correct values\nto the PISP in the "),s("code",[e._v("scopes")]),e._v(" field.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(313),alt:"Authentication (Web)"}})]),e._v(" "),s("h3",{attrs:{id:"_1-4-2-otp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-otp"}},[e._v("#")]),e._v(" 1.4.2. OTP")]),e._v(" "),s("p",[e._v("When using the OTP authentication channel, the DFSP will send the User some sort\nof one-time password over a pre-established channel (most likely SMS). The PISP\nshould prompt the user for this secret and then provide that back to the DFSP.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(314),alt:"Authentication (OTP)"}})]),e._v(" "),s("h2",{attrs:{id:"_1-5-grant-consent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-grant-consent"}},[e._v("#")]),e._v(" 1.5. Grant consent")]),e._v(" "),s("p",[e._v("Now that mutual trust has been established between all three parties, the DFSP\nis able to create a record of that fact by creating a new Consent resource.\nThis resource will store all the relevant information about the relationship\nbetween the three parties, and will eventually contain additional information\nfor how the User can prove that it consents to each individual transfer in the\nfuture.")]),e._v(" "),s("p",[e._v("This phase consists exclusively of the DFSP requesting that a new consent be\ncreated. This request must be conveyed both to the PISP itself and the Auth\nservice which will be the record of trust for these resources.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(315),alt:"Grant consent"}})]),e._v(" "),s("h2",{attrs:{id:"_1-6-credential-registration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-credential-registration"}},[e._v("#")]),e._v(" 1.6. Credential registration")]),e._v(" "),s("p",[e._v("Once the consent resource has been created, the PISP will attempt to establish\nwith the network the credential that should be used to verify that a user has\ngiven consent for each transfer in the future.")]),e._v(" "),s("p",[e._v("This will be done by storing a FIDO credential (e.g., a public key) on the Auth\nservice inside the consent resource. When future transfers are proposed, we will\nrequire that those transfers be digitally signed by the FIDO credential (in this\ncase, the private key) in order to be considered valid.")]),e._v(" "),s("p",[e._v("This credential registration is composed of two phases: requesting a challenge\nand finalizing the signature.")]),e._v(" "),s("h3",{attrs:{id:"_1-6-1-requesting-a-challenge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-1-requesting-a-challenge"}},[e._v("#")]),e._v(" 1.6.1. Requesting a challenge")]),e._v(" "),s("p",[e._v("In this sub-phase, the PISP requests a challenge from the Auth service, which\nwill be returned to the PISP via a "),s("code",[e._v("PUT /consents/{ID}")]),e._v(" API call.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(316),alt:"Credential registration: Challenge"}})]),e._v(" "),s("h3",{attrs:{id:"_1-6-2-finalizing-the-credential"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-2-finalizing-the-credential"}},[e._v("#")]),e._v(" 1.6.2. Finalizing the credential")]),e._v(" "),s("p",[e._v("Once the challenge is provided to the PISP, the PISP will generate a new\ncredential on the device, digitally sign the challenge, and provide the some new\ninformation about the credential on the Consent resource:")]),e._v(" "),s("ol",[s("li",[e._v("The credential itself (the public component)")]),e._v(" "),s("li",[e._v("A signature of the challenge (to be verified against this public component)")]),e._v(" "),s("li",[e._v("The ID of the credential understood by the device itself")])]),e._v(" "),s("p",[e._v("This information is provided back to the Auth service, which then verifies that\nthe signature is correct. It then updates the status of the credential to\n"),s("code",[e._v('"VERIFIED"')]),e._v(", and notifies both the PISP and the DFSP about these new changes\nto the Consent resource.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(317),alt:"Credential registration: Register"}})]),e._v(" "),s("h1",{attrs:{id:"_2-unlinking"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-unlinking"}},[e._v("#")]),e._v(" 2. Unlinking")]),e._v(" "),s("p",[e._v("At some point in the future, it's possible that a User, PISP, or DFSP may decide\nthat the relationship of trust previously established should no longer exist.\nFor example, a very common scenario might be a user losing their mobile device\nand using an interface from their DFSP to remove the link between the lost\ndevice, the PISP, and the DFSP.")]),e._v(" "),s("p",[e._v("To make this work, we simply need to provide a way for a member on the network\nto remove the Consent resourse and notify the other parties about the removal.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(318),alt:"Credential registration: Register"}})]),e._v(" "),s("h1",{attrs:{id:"_3-third-party-credential-registration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-third-party-credential-registration"}},[e._v("#")]),e._v(" 3. Third-party credential registration")]),e._v(" "),s("p",[e._v("There is ongoing work with the FIDO alliance to allow third parties the ability\nto collect a FIDO credential on behalf of the intended user of the credential.\nIn other words, this work would allow the DFSP (during the web authentication\nflow) to ask the user to provide a FIDO credential that would be for use by the\nPISP rather than the DFSP.")]),e._v(" "),s("p",[e._v("If this becomes possible, the flow changes, speciifcally in the Authentication\nphase and the Credential registration phase.")]),e._v(" "),s("h2",{attrs:{id:"_3-1-authentication"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-authentication"}},[e._v("#")]),e._v(" 3.1. Authentication")]),e._v(" "),s("p",[e._v("The authentication phase becomes very minimal. Since the credential will be\ncollected by the DFSP itself (for use later by the PISP), there's no need to\nsend back any sort of secret and no need to pass a secret back to the DFSP.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(319),alt:"Credential registration: Register"}})]),e._v(" "),s("h2",{attrs:{id:"_3-2-credential-registration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-credential-registration"}},[e._v("#")]),e._v(" 3.2. Credential registration")]),e._v(" "),s("p",[e._v("TODO!")])])}),[],!1,null,null,null);t.default=n.exports},361:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"pisp-docs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pisp-docs"}},[e._v("#")]),e._v(" PISP/Docs")]),e._v(" "),r("p",[e._v("Supporting documentation for the PISP implementation.")]),e._v(" "),r("h2",{attrs:{id:"overview"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),r("ul",[r("li",[e._v("Sequence Diagrams\n"),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/linking/"}},[e._v("Linking")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/transfer/"}},[e._v("Transfer")])],1)])]),e._v(" "),r("li",[e._v("Design Elements\n"),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/error_codes.html"}},[e._v("Proposed Error Codes")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/roles_and_endpoints.html"}},[e._v("Mojaloop Roles + Endpoints")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/thirdparty_scheme_adapter_models.html"}},[e._v("Scheme Adapter Changes")])],1)])]),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/design-decisions/"}},[e._v("Design Decisions")])],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/git_branching.html"}},[e._v("Git Branching Strategy")])],1),e._v(" "),r("li",[r("a",{attrs:{href:"#tools"}},[e._v("Tools")])])]),e._v(" "),r("h2",{attrs:{id:"tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tools"}},[e._v("#")]),e._v(" Tools")]),e._v(" "),r("p",[e._v("To update the sequence diagrams in "),r("code",[e._v("./docs/out")]),e._v(", ensure you have the "),r("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml&ssr=false#overview",target:"_blank",rel:"noopener noreferrer"}},[e._v("PlantUML vscode plugin"),r("OutboundLink")],1),e._v(" installed.")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("CMD + Shift + P")])]),e._v(" "),r("li",[e._v("Select "),r("code",[e._v("PlantUML: Export Workspace Diagrams")])]),e._v(" "),r("li",[e._v("Wait for the export to complete, and commit the changes")])]),e._v(" "),r("div",{staticClass:"language-ts extra-class"},[r("pre",{pre:!0,attrs:{class:"language-ts"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("export")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("default")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  name"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'MyComponent'")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// ...")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),r("p",[e._v("This is a tip")])]),e._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),r("p",[e._v("This is a warning")])]),e._v(" "),r("div",{staticClass:"custom-block danger"},[r("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),r("p",[e._v("This is a dangerous warning")])]),e._v(" "),r("details",{staticClass:"custom-block details"},[r("summary",[e._v("DETAILS")]),e._v(" "),r("p",[e._v("This is a details block, which does not work in IE / Edge")])])])}),[],!1,null,null,null);t.default=n.exports},362:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"participant-endpoint-enums"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#participant-endpoint-enums"}},[e._v("#")]),e._v(" Participant Endpoint Enums")]),e._v(" "),r("p",[e._v("This is the list of endpoints that a PISP or DFSP must register with the switch to get callbacks from the "),r("code",[e._v("thirdparty-api-adapter")]),e._v(" and "),r("code",[e._v("transaction-request-service")]),e._v(".")]),e._v(" "),r("p",[e._v("These endpoints should be added to the enums of "),r("code",[e._v("central-services-shared")]),e._v(", and the seeds of "),r("code",[e._v("central-ledger")])]),e._v(" "),r("h2",{attrs:{id:"pisp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pisp"}},[e._v("#")]),e._v(" PISP:")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT_ERROR")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_POST")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT_ERROR")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_PUT")])]),e._v(" "),r("li",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_PUT_ERROR")])]),e._v(" "),r("li",[r("code",[e._v("FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE")]),e._v(" "),r("blockquote",[r("p",[e._v("(Note this is the existing endpoint for "),r("code",[e._v("/authorizations")]),e._v(" resource)")])])])]),e._v(" "),r("h2",{attrs:{id:"dfsp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#dfsp"}},[e._v("#")]),e._v(" DFSP:")]),e._v(" "),r("ul",[r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_POST")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_REQUEST_PUT_ERROR")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_POST")])]),e._v(" "),r("blockquote",[r("p",[e._v("Point to central-auth to get the final consent creation - see "),r("a",{attrs:{href:"https://github.com/mojaloop/pisp/tree/master/docs/linking#15-grant-consent",target:"_blank",rel:"noopener noreferrer"}},[e._v("GRANT-4"),r("OutboundLink")],1)])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CREATE_CREDENTIAL_POST")])]),e._v(" "),r("blockquote",[r("p",[e._v("Point to central-auth for central, or dfsp for self-hosted auth service")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT")])]),e._v(" "),r("blockquote",[r("p",[e._v("This is tricky, as for some requests it should be central-auth, but others it should be the dfsp itself...")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_CONSENT_PUT_ERROR")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("FSPIOP_CALLBACK_URL_TRX_REQ_SERVICE")])]),e._v(" "),r("blockquote",[r("p",[e._v("(Note this is the existing endpoint for "),r("code",[e._v("/authorizations")]),e._v(" resource)")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_POST")])]),e._v(" "),r("blockquote",[r("p",[e._v("Point to central-auth for central, or dfsp for self-hosted auth service")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_PUT")])]),e._v(" "),r("blockquote",[r("p",[e._v("Point to dfsp")])])]),e._v(" "),r("li",[r("p",[r("code",[e._v("THIRDPARTY_CALLBACK_URL_TRANSACTION_REQUEST_AUTHORIZATIONS_PUT_ERROR")])]),e._v(" "),r("blockquote",[r("p",[e._v("Point to dfsp")])])])])])}),[],!1,null,null,null);t.default=n.exports},363:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"scheme-adapter-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheme-adapter-changes"}},[e._v("#")]),e._v(" Scheme Adapter Changes")]),e._v(" "),s("p",[e._v("A design document to explain/discuss the changes required in the "),s("code",[e._v("sdk-scheme-adapter")]),e._v(" to implement PISP functionality.")]),e._v(" "),s("h2",{attrs:{id:"scheme-adapter-background"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheme-adapter-background"}},[e._v("#")]),e._v(" Scheme Adapter Background")]),e._v(" "),s("p",[e._v("One of the purposes of the "),s("code",[e._v("sdk-scheme-adapter")]),e._v(" is to abstract away the Mojaloop API's async nature to make integrations easier. In addition, we use the scheme adapter as part of the "),s("code",[e._v("mojaloop-simulator")]),e._v(", so in order to prove and test our solution, we need to add functionality to the "),s("code",[e._v("mojaloop-simulator")]),e._v(", and hence the "),s("code",[e._v("sdk-scheme-adapter")]),e._v(".")]),e._v(" "),s("h3",{attrs:{id:"state-machines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state-machines"}},[e._v("#")]),e._v(" State Machines")]),e._v(" "),s("p",[e._v("The "),s("code",[e._v("sdk-scheme-adapter")]),e._v(" uses a series of state machines, implemented using the "),s("a",{attrs:{href:"https://github.com/jakesgordon/javascript-state-machine",target:"_blank",rel:"noopener noreferrer"}},[e._v("javascript-state-machine"),s("OutboundLink")],1),e._v(" library. These state machines make it possible to handle complex async calls to a mojaloop hub, and expose them as a simpler, syncronous API to DFSPs and the "),s("code",[e._v("mojaloop-simulator")]),e._v(" alike.")]),e._v(" "),s("p",[e._v("Below we propose a number of new state machines to be implemented as a part of the PISP functionality. Keep in mind the names are not set in stone, this is very much a first pass and will be expected to change.")]),e._v(" "),s("h4",{attrs:{id:"outboundthirdpartytransactionmodel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#outboundthirdpartytransactionmodel"}},[e._v("#")]),e._v(" OutboundThirdpartyTransactionModel")]),e._v(" "),s("p",[s("strong",[e._v("Purpose:")]),s("br"),e._v("\nModels the PISP side of a PISP transaction, starting with a "),s("code",[e._v("GET /parties")]),e._v(", all the way to the "),s("code",[e._v("PUT /thirdpartyRequests/transaction/{ID}")]),e._v(" callback.")]),e._v(" "),s("p",[s("strong",[e._v("Model:")]),s("br"),e._v(" "),s("img",{attrs:{src:r(320),alt:""}})]),e._v(" "),s("p",[s("strong",[e._v("States:")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("start")]),e._v(" - when the state machine is created")]),e._v(" "),s("li",[s("code",[e._v("payeeResolved")]),e._v(" - on a "),s("code",[e._v("PUT /parties/{type}/{ID}")])]),e._v(" "),s("li",[s("code",[e._v("authorizationReceived")]),e._v(" - on a "),s("code",[e._v("POST /authorization")])]),e._v(" "),s("li",[s("code",[e._v("transactionSuccess")]),e._v(" - on a "),s("code",[e._v("PUT /thirdpartyRequests/transaction/{ID}")])]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" - on any error callback, or internal processing error")])]),e._v(" "),s("p",[s("strong",[e._v("Functions:")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("resolvePayee()")]),e._v(" - Calls "),s("code",[e._v("GET /parties/{type}/{ID}")]),e._v(" to lookup the payee party of the transaction")]),e._v(" "),s("li",[s("code",[e._v("executeThirdPartyTransaction()")]),e._v(" - Calls "),s("code",[e._v("POST /thirdpartyRequests/transaction")]),e._v(" to kick off the PISP Transaction")]),e._v(" "),s("li",[s("code",[e._v("signChallenge()")]),e._v(" - Calls "),s("code",[e._v("PUT /authorizations/{ID}")]),e._v(" with the signed challenge from the user")])]),e._v(" "),s("h4",{attrs:{id:"inboundthirdpartytransactionmodel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inboundthirdpartytransactionmodel"}},[e._v("#")]),e._v(" InboundThirdpartyTransactionModel")]),e._v(" "),s("p",[s("strong",[e._v("Purpose:")]),e._v("\nModels the DFSP side of a PISP transaction, initiated by receiving a "),s("code",[e._v("POST /thirdpartyRequests/transaction")])]),e._v(" "),s("p",[s("strong",[e._v("Model:")]),s("br"),e._v(" "),s("img",{attrs:{src:r(321),alt:""}})]),e._v(" "),s("p",[s("strong",[e._v("States:")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("transactionRequestReceived")]),e._v(" - on a "),s("code",[e._v("POST /thirdpartyRequests/transaction")])]),e._v(" "),s("li",[s("code",[e._v("quoteReceived")]),e._v(" - on a "),s("code",[e._v("PUT /quotes/{ID}")])]),e._v(" "),s("li",[s("code",[e._v("authorizationReceived")]),e._v(" - on a "),s("code",[e._v("PUT /authorizations/{ID}")]),e._v(", with a signed challenge")]),e._v(" "),s("li",[s("code",[e._v("transactionSuccess")]),e._v(" - on a "),s("code",[e._v("PUT /transfers/{ID}")])]),e._v(" "),s("li",[s("code",[e._v("error")]),e._v(" - on any error callback, or internal processing error")])]),e._v(" "),s("p",[s("strong",[e._v("Functions:")])]),e._v(" "),s("ul",[s("li",[s("code",[e._v("getQuote()")]),e._v(" - Calls "),s("code",[e._v("POST /quotes")]),e._v(" to ask the payee for a quote for the given transaction")]),e._v(" "),s("li",[s("code",[e._v("authorizeTransaction()")]),e._v(" - Calls "),s("code",[e._v("POST /authorizations")]),e._v(" to ask the PISP to ask their user to authorize the transaction with their FIDO credential")]),e._v(" "),s("li",[s("code",[e._v("executeTransfer()")]),e._v(" - Calls "),s("code",[e._v("POST /transfer")]),e._v(" to execute the transfer")])]),e._v(" "),s("h2",{attrs:{id:"questions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[e._v("#")]),e._v(" Questions:")]),e._v(" "),s("ul",[s("li",[e._v("How do we handle authorization retries in the above models? Maybe we can leave this for now.")])])])}),[],!1,null,null,null);t.default=n.exports},364:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"transfer-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transfer-api"}},[e._v("#")]),e._v(" Transfer API")]),e._v(" "),s("h3",{attrs:{id:"happy-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#happy-path"}},[e._v("#")]),e._v(" Happy Path")]),e._v(" "),s("p",[e._v("Edit the transfer flow "),s("code",[e._v(".puml")]),e._v(" files here: "),s("a",{attrs:{href:"./api_calls_detailed.puml"}},[e._v("PISP Transfer Api Calls Detailed")])]),e._v(" "),s("p",[s("img",{attrs:{src:r(322),alt:"PISPTransferSimpleAPI"}})]),e._v(" "),s("blockquote",[s("p",[e._v("Puml source: "),s("a",{attrs:{href:"./transfer/api_calls_simple.puml"}},[s("code",[e._v("./transfer/api_calls_simple.puml")])])])]),e._v(" "),s("p",[e._v("For a more detailed breakdown of the api calls, Refer to the detailed API flows:")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"../out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page1.svg"}},[e._v("Discovery")])]),e._v(" "),s("li",[s("a",{attrs:{href:"../out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page2.svg"}},[e._v("Agreement")])]),e._v(" "),s("li",[s("a",{attrs:{href:"../out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page3.svg"}},[e._v("Transfer")])])]),e._v(" "),s("h3",{attrs:{id:"request-transactionrequest-status"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#request-transactionrequest-status"}},[e._v("#")]),e._v(" Request TransactionRequest Status")]),e._v(" "),s("p",[e._v("A PISP can issue a "),s("code",[e._v("GET /thirdpartyRequests/{id}/transactions")]),e._v(" to find the status of a transaction request.")]),e._v(" "),s("p",[s("img",{attrs:{src:r(323),alt:"PISPTransferSimpleAPI"}})]),e._v(" "),s("ol",[s("li",[s("p",[e._v("PISP issues a "),s("code",[e._v("GET /thirdpartyRequests/transactions/{id}")])])]),e._v(" "),s("li",[s("p",[e._v("Switch validates request and responds with "),s("code",[e._v("202 Accepted")])])]),e._v(" "),s("li",[s("p",[e._v("Switch looks up the endpoint for "),s("code",[e._v("dfspa")]),e._v(" for forwards to DFSP A")])]),e._v(" "),s("li",[s("p",[e._v("DFSPA validates the request and responds with "),s("code",[e._v("202 Accepted")])])]),e._v(" "),s("li",[s("p",[e._v("DFSP looks up the transaction request based on it's "),s("code",[e._v("transactionRequestId")]),e._v(" ("),s("code",[e._v("123")]),e._v(" in this case)")]),e._v(" "),s("ul",[s("li",[e._v("If it can't be found, it calls "),s("code",[e._v("PUT /thirdpartyRequests/transactions/{id}/error")]),e._v(" to the Switch, with a relevant error message")])])]),e._v(" "),s("li",[s("p",[e._v("DFSP Ensures that the "),s("code",[e._v("FSPIOP-Source")]),e._v(" header matches that of the originator of the "),s("code",[e._v("POST //thirdpartyRequests/transactions")])]),e._v(" "),s("ul",[s("li",[e._v("If it does not match, it calls "),s("code",[e._v("PUT /thirdpartyRequests/transactions/{id}/error")]),e._v(" to the Switch, with a relevant error message")])])]),e._v(" "),s("li",[s("p",[e._v("DFSP calls "),s("code",[e._v("PUT /thirdpartyRequests/transactions/{id}")]),e._v(" with the following request body:")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{\n  transactionId: <transactionId>\n  transactionRequestState: TransactionRequestState\n}\n")])])]),s("p",[e._v("Where "),s("code",[e._v("transactionId")]),e._v(" is the DFSP-generated id of the transaction, and "),s("code",[e._v("TransactionRequestState")]),e._v(" is "),s("code",[e._v("RECEIVED")]),e._v(", "),s("code",[e._v("PENDING")]),e._v(", "),s("code",[e._v("ACCEPTED")]),e._v(", "),s("code",[e._v("REJECTED")]),e._v(", as defined in "),s("a",{attrs:{href:"https://docs.mojaloop.io/mojaloop-specification/documents/API%20Definition%20v1.0.html#7510-transactionrequeststate",target:"_blank",rel:"noopener noreferrer"}},[e._v("7.5.10 TransactionRequestState"),s("OutboundLink")],1),e._v(" of the API Definition")])]),e._v(" "),s("li",[s("p",[e._v("Switch validates request and responds with "),s("code",[e._v("200 OK")])])]),e._v(" "),s("li",[s("p",[e._v("Switch looks up the endpoint for "),s("code",[e._v("pispa")]),e._v(" for forwards to PISP")])]),e._v(" "),s("li",[s("p",[e._v("PISP validates the request and responds with "),s("code",[e._v("200 OK")])])])]),e._v(" "),s("h3",{attrs:{id:"error-conditions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error-conditions"}},[e._v("#")]),e._v(" Error Conditions")]),e._v(" "),s("p",[e._v("The PayerDFSP is responsible for communicating failures to the PISP")]),e._v(" "),s("ol",[s("li",[s("p",[e._v("Thirdparty Transaction Request fails")])]),e._v(" "),s("li",[s("p",[e._v("Downstream Quote Failure")])]),e._v(" "),s("li",[s("p",[e._v("Authorization Failure")])]),e._v(" "),s("li",[s("p",[e._v("Transfer Failure")])])]),e._v(" "),s("p",[e._v("[ todo: in mojaloop/mojaloop#346 ]")])])}),[],!1,null,null,null);t.default=n.exports},365:function(e,t,r){"use strict";r.r(t);var s=r(43),n=Object(s.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"user-cases"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user-cases"}},[this._v("#")]),this._v(" User Cases")]),this._v(" "),t("p",[this._v("TODO: write this doc")])])}),[],!1,null,null,null);t.default=n.exports},392:function(e,t,r){var s={"./README.md":349,"./api/thirdparty-dfsp-api.yaml":393,"./api/thirdparty-dfsp.md":351,"./api/thirdparty-pisp-api.yaml":394,"./api/thirdparty-pisp.md":350,"./background.md":352,"./design-decisions/README.md":354,"./error_codes.md":353,"./fspiop-rest-v1.0-OpenAPI-implementation.yaml":395,"./fspiop-rest-v1.0-OpenAPI-implementation_openapi3.yaml":396,"./git_branching.md":355,"./guides/dfsp_integration.md":356,"./guides/pisp_integration.md":358,"./guides/reference_pisp_app.md":357,"./identifiers.md":359,"./linking/0-pre-linking.puml":397,"./linking/1-discovery.puml":398,"./linking/2-request-consent-otp.puml":399,"./linking/2-request-consent-web.puml":400,"./linking/3-authentication-otp.puml":401,"./linking/3-authentication-third-party-fido.puml":402,"./linking/3-authentication-web.puml":403,"./linking/4-grant-consent.puml":404,"./linking/5a-credential-registration.puml":405,"./linking/5b-credential-registration.puml":406,"./linking/README.md":360,"./linking/unlinking.puml":407,"./out/linking/0-pre-linking/PISP_Linking__Pre-linking.svg":309,"./out/linking/1-discovery/PISP_Linking__Discovery.svg":310,"./out/linking/2-request-consent-otp/PISP_Linking__Request_consent_(OTP).svg":312,"./out/linking/2-request-consent-web/PISP_Linking__Request_consent_(Web).svg":311,"./out/linking/3-authentication-otp/PISP_Linking__Authentication_(OTP).svg":314,"./out/linking/3-authentication-third-party-fido/PISP_Linking__Authentication_(Third-party_FIDO_registration).svg":319,"./out/linking/3-authentication-web/PISP_Linking__Authentication_(Web).svg":313,"./out/linking/4-grant-consent/PISP_Linking__Grant_consent.svg":315,"./out/linking/5a-credential-registration/PISP_Linking__Credential_registration_(challenge).svg":316,"./out/linking/5b-credential-registration/PISP_Linking__Credential_registration_(verification).svg":317,"./out/linking/unlinking/PISP_Linking__Unlinking.svg":318,"./out/state_diagrams/InboundThirdpartyTransactionModel/InboundThirdpartyTransactionModel.svg":321,"./out/state_diagrams/OutboundThirdpartyTransactionModel/OutboundThirdpartyTransactionModel.svg":320,"./out/transaction_callback/1_subscription/1_subscription.svg":408,"./out/transaction_callback/2_context_auth/2_context_auth.svg":409,"./out/transaction_callback/3_context_transfer/3_context_transfer.svg":410,"./out/transaction_callback/4_transaction_callback/4_transaction_callback.svg":411,"./out/transaction_callback/listener_states_errors/listener_states_errors.svg":412,"./out/transaction_callback/listener_states_simple/listener_states_simple.svg":413,"./out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page1.svg":414,"./out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page2.svg":415,"./out/transfer/api_calls_detailed/PISPTransferDetailedAPI-page3.svg":416,"./out/transfer/api_calls_simple/PISPTransferSimpleAPI.svg":322,"./out/transfer/api_calls_simple_pisp_transfer/PISPTransferSimpleAPI.svg":417,"./out/transfer/get_transaction_request/PISPGetTransactionRequest.svg":323,"./out/transfer/participants/participants.svg":418,"./out/transfer/participants_api/participants_api.svg":419,"./overview.md":361,"./participant_endpoint_enums.md":362,"./roles_and_endpoints.md":439,"./scripts/_update_seq.sh":420,"./state_diagrams/InboundThirdpartyTransactionModel.puml":421,"./state_diagrams/OutboundThirdpartyTransactionModel.puml":422,"./swagger":343,"./swagger.json":343,"./thirdparty-rest-v1.0-OpenApi.yaml":423,"./thirdparty_scheme_adapter_models.md":363,"./transaction_callback/1_subscription.puml":424,"./transaction_callback/2_context_auth.puml":425,"./transaction_callback/3_context_transfer.puml":426,"./transaction_callback/4_transaction_callback.puml":427,"./transaction_callback/README.md":440,"./transaction_callback/listener_states_errors.puml":428,"./transaction_callback/listener_states_simple.puml":429,"./transfer/README.md":364,"./transfer/api_calls_detailed.puml":430,"./transfer/api_calls_simple.puml":431,"./transfer/api_calls_simple_pisp_transfer.puml":432,"./transfer/get_transaction_request.puml":433,"./transfer/participants.iuml":434,"./transfer/participants_api.iuml":435,"./use_cases.md":365};function n(e){var t=o(e);return r(t)}function o(e){if(!r.o(s,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return s[e]}n.keys=function(){return Object.keys(s)},n.resolve=o,e.exports=n,n.id=392},393:function(e,t){const r=[{openapi:"3.0.2",info:{title:"Thirdparty-DFSP API",version:"0.1.0",description:"A Mojaloop API for thirdparty interactions between `DFSPs` (Digital Financial Service Providers) and a Mojaloop Switch."},servers:[{url:"http://localhost:15000",description:"Local TTK server (uses test data)"},{url:"https://hub.zaikio.com/oauth/",description:"Production server (uses live data)"}],paths:{"/parties/{Type}/{ID}":{get:{summary:"Requests information relating to a transfer party identified by the specified identifier type and value.",description:"The HTTP request `GET /parties/{Type}/{ID}` is used to look up\ninformation regarding the requested transfer party,\nidentified by `{Type}` and `{ID}`.\n\nSwitch(Account Lookup Service) -> DFSP.\n",tags:["parties"],parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{name:"Type",in:"path",required:!0,schema:{type:"string"},description:"The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`."},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"}],responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}},put:{description:"The callback `PUT /parties/{Type}/{ID}` is used to inform the\nSwitch of a successful result of the Party information lookup.\n\nDFSP -> Switch(Account Lookup Service).\n",summary:"Return party information",tags:["parties"],parameters:[{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"}],requestBody:{description:"Party information returned.",required:!0,content:{"application/json":{schema:{title:"PartiesTypeIDPutResponse",type:"object",description:"The object sent in the PUT /parties/{Type}/{ID} callback.\n\nThis is a variant based on FSPIOP `PartiesTypeIDPutResponse` specification.\nMain difference being that it returns a `Party` with the newly added\n`accounts` property.\n",properties:{party:{title:"Party",type:"object",description:"Data model for the complex type Party.\n\nThis is a variant based on FSPIOP `Party` specification.\nMain difference being the newly added `accounts` property.\n",properties:{partyIdInfo:{title:"PartyIdInfo",type:"object",description:"Data model for the complex type PartyIdInfo.",properties:{partyIdType:{title:"PartyIdType",type:"string",enum:["MSISDN","EMAIL","PERSONAL_ID","BUSINESS","DEVICE","ACCOUNT_ID","IBAN","ALIAS"],description:"Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory\nNumber, that is, the phone number) is used as reference to a participant.\nThe MSISDN identifier should be in international format according to the\n[ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\nOptionally, the MSISDN may be prefixed by a single plus sign, indicating the\ninternational prefix.\n- EMAIL - An email is used as reference to a\nparticipant. The format of the email should be according to the informational\n[RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant.\nExamples of personal identification are passport number, birth certificate\nnumber, and national registration number. The identifier number is added in\nthe PartyIdentifier element. The personal identifier type is added in the\nPartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company)\nis used as reference to a participant. The BUSINESS identifier can be in any\nformat. To make a transaction connected to a specific username or bill number\nin a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a\nspecific business or organization is used as reference to a Party.\nFor referencing a specific device under a specific business or organization,\nuse the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as\nreference to a participant. The ACCOUNT_ID identifier can be in any format,\nas formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a\nparticipant. The IBAN identifier can consist of up to 34 alphanumeric\ncharacters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be\ncreated in the FSP as an alternative reference to an account owner.\nAnother example of an alias is a username in the FSP system.\nThe ALIAS identifier can be in any format. It is also possible to use the\nPartySubIdOrType element for identifying an account under an Alias defined\nby the PartyIdentifier.\n",example:"PERSONAL_ID"},partyIdentifier:{title:"PartyIdentifier",type:"string",minLength:1,maxLength:128,description:"Identifier of the Party.",example:16135551212},partySubIdOrType:{title:"PartySubIdOrType",type:"string",minLength:1,maxLength:128,description:"Either a sub-identifier of a PartyIdentifier, or a sub-type of the\nPartyIdType, normally a PersonalIdentifierType.\n",example:"DRIVING_LICENSE"},fspId:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}},required:["partyIdType","partyIdentifier"]},merchantClassificationCode:{title:"MerchantClassificationCode",type:"string",pattern:"^[\\d]{1,4}$",description:"A limited set of pre-defined numbers. This list would be a limited set of\nnumbers identifying a set of popular merchant types like School Fees,\nPubs and Restaurants, Groceries, etc.\n",example:4321},name:{title:"PartyName",type:"string",minLength:1,maxLength:128,description:"Name of the Party. Could be a real name or a nickname.",example:"Henrik Karlsson"},personalInfo:{title:"PartyPersonalInfo",type:"object",description:"Data model for the complex type PartyPersonalInfo.",properties:{complexName:{title:"PartyComplexName",type:"object",description:"Data model for the complex type PartyComplexName.",properties:{firstName:{title:"FirstName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"First name of the Party (Name Type).",example:"Henrik"},middleName:{title:"MiddleName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Middle name of the Party (Name Type).",example:"Johannes"},lastName:{title:"LastName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Last name of the Party (Name Type).",example:"Karlsson"}}},dateOfBirth:{title:"DateofBirth (type Date)",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:"Date of Birth of the Party.",example:"1966-06-16"}}},accounts:{description:"List of accounts associated with the party containing and DFSP routable address, currency identifier and description.",title:"AccountList",type:"object",properties:{account:{type:"array",items:{title:"Account",type:"object",description:"Data model for the complex type Account.",properties:{address:{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"},currency:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount/properties/currency"},description:{title:"Name",type:"string",pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:'The API data type Name is a JSON String, restricted by a regular expression\nto avoid characters which are generally not used in a name.\nRegular Expression - The regular expression for restricting the\nName type is \\"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$\\". The restriction does not\nallow a string consisting of whitespace only, all Unicode characters are\nallowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)\nand space characters ( ).\n**Note:** In some programming languages,\nUnicode support must be specifically enabled. For example, if Java is used,\nthe flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.\n'}},required:["currency"]},minItems:1,maxItems:32,description:"Accounts associated with the Party."}},required:["account"]}},required:["partyIdInfo"]}},required:["party"]}}}},responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/thirdpartyRequests/transactions":{post:{tags:["thirdpartyRequests","sampled"],operationId:"CreateThirdpartyTransactionRequests",summary:"CreateThirdpartyTransactionRequests",description:"The HTTP request `POST /thirdpartyRequests/transactions` is used to request the creation of a third party transaction.\nCalled by a Switch to initiate initiate the DFSP quoting process.\n\nSwitch(Thirdparty API Adapter) -> DFSP\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"Transaction request to be created.",required:!0,content:{"application/json":{schema:{title:"ThirdpartyRequestsTransactionsPostRequest",type:"object",description:"The object sent in the POST /thirdpartyRequests/transactions request.",properties:{transactionRequestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the FSPs for the transaction request object. The ID should be reused for resends of the same transaction request. A new ID should be generated for each new transaction request.\n"},sourceAccountId:{allOf:[{title:"AccountAddress",type:"string",description:"A long-lived unique account identifier provided by the DFSP. This MUST NOT\nbe Bank Account Number or anything that may expose a User's private bank\naccount information.\n",pattern:"^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$",minLength:1,maxLength:1023}],description:"DFSP specific account identifiers, e.g. `dfspa.alice.1234`"},consentId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object This tells DFSP and auth-service which constent allows the PISP to initiate transaction.\n"},payee:{allOf:[{title:"Party",type:"object",description:"Data model for the complex type Party.",properties:{partyIdInfo:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/partyIdInfo"},merchantClassificationCode:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/merchantClassificationCode"},name:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/name"},personalInfo:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/personalInfo"}},required:["partyIdInfo"]}],description:"Information about the Payee in the proposed financial transaction."},payer:{allOf:[{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/payee/allOf/0"}],description:"Information about the Payer in the proposed financial transaction."},amountType:{allOf:[{title:"AmountType",type:"string",enum:["SEND","RECEIVE"],description:"Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should\nbe withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is,\nthe amount that should be sent to the receiver exclusive of any fees.\n",example:"RECEIVE"}],description:"SEND for sendAmount, RECEIVE for receiveAmount."},amount:{allOf:[{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"}],description:"Requested amount to be transferred from the Payer to Payee."},transactionType:{allOf:[{title:"TransactionType",type:"object",description:"Data model for the complex type TransactionType.",properties:{scenario:{title:"TransactionScenario",type:"string",enum:["DEPOSIT","WITHDRAWAL","TRANSFER","PAYMENT","REFUND"],description:"Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction.\nIn a normal scenario, electronic funds are transferred from a\nBusiness account to a Consumer account, and physical cash is given\nfrom the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction.\nIn a normal scenario, electronic funds are transferred from a Consumer’s\naccount to a Business account, and physical cash is given from the Business\nUser to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer)\ntransaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a\nMerchant or Organization, but could also be for a B2B (Business to Business)\npayment. The transaction could be online for a purchase in an Internet store,\nin a physical store where both the Consumer and Business User are present, a\nbill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.\n",example:"DEPOSIT"},subScenario:{title:"TransactionSubScenario",type:"string",pattern:"^[A-Z_]{1,32}$",description:"Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",example:"LOCALLY_DEFINED_SUBSCENARIO"},initiator:{title:"TransactionInitiator",type:"string",enum:["PAYER","PAYEE"],description:"Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction.\nThe account to send from is either owned by the Payer or is connected to the\nPayer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a\ntransaction request. The Payer must approve the transaction, either\nautomatically by a pre-generated OTP or by pre-approval of the Payee,\nor by manually approving in his or her own Device.\n",example:"PAYEE"},initiatorType:{title:"TransactionInitiatorType",type:"string",enum:["CONSUMER","AGENT","BUSINESS","DEVICE"],description:"Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.\n",example:"CONSUMER"},refundInfo:{title:"Refund",type:"object",description:"Data model for the complex type Refund.",properties:{originalTransactionId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},refundReason:{title:"RefundReason",type:"string",minLength:1,maxLength:128,description:"Reason for the refund.",example:"Free text indicating reason for the refund."}},required:["originalTransactionId"]},balanceOfPayments:{title:"BalanceOfPayments",type:"string",pattern:"^[1-9]\\d{2}$",description:"(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/)\nis a JSON String of 3 characters, consisting of digits only.\nNegative numbers are not allowed. A leading zero is not allowed.\n",example:123}},required:["scenario","initiator","initiatorType"]}],description:"Type of transaction."},expiration:{type:"string",description:"Date and time until when the transaction request is valid. It can be set to get a quick failure in case the peer FSP takes too long to respond.\n",example:"2016-05-24T08:38:08.699-04:00"}},required:["transactionRequestId","sourceAccountId","consentId","payee","payer","amountType","amount","transactionType","expiration"]},example:{transactionRequestId:"8d34f91d-d078-4077-8263-2c047876fcf6",sourceAccountId:"dfspa.alice.1234",consentId:"111",payee:{partyIdInfo:{partyIdType:"MSISDN",partyIdentifier:"+44 1234 5678",fspId:"dfspb"}},payer:{personalInfo:{complexName:{firstName:"Alice",lastName:"K"}},partyIdInfo:{partyIdType:"MSISDN",partyIdentifier:"+44 8765 4321",fspId:"dfspa"}},amountType:"SEND",amount:{amount:"100",currency:"USD"},transactionType:{scenario:"TRANSFER",initiator:"PAYER",initiatorType:"CONSUMER"},expiration:"2020-07-15T22:17:28.985-01:00"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/authorizations":{post:{operationId:"OutboundAuthorizationsPost",summary:"Outbound Authorizations endpoint",description:"DFSP Requests Authorization of Transaction from the End User.\n\nDFSP -> Switch\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"}],requestBody:{description:"Authorization request details",required:!0,content:{"application/json":{schema:{title:"AuthorizationsPostRequest",description:"POST /authorizations request object.",type:"object",properties:{authenticationType:{title:"AuthorizationChannelType",type:"string",enum:["OTP","QRCODE","U2F"],description:"Below are the allowed values for the enumeration AuthorizationChannelType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.\n\nThis is based on FSPIOP `AuthenticationType` with U2F added.\n",example:"U2F"},retriesLeft:{title:"Integer",type:"string",pattern:"^[1-9]\\d*$",description:"The API data type Integer is a JSON String consisting of digits only.\nNegative numbers and leading zeroes are not allowed.\nThe data type is always limited to a specific number of digits.\n"},amount:{title:"Money",type:"object",description:"Data model for the complex type Money.",properties:{currency:{title:"Currency",description:"The currency codes defined in\n[ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)\nas three-letter alphabetic codes are used as the standard naming representation for currencies.\n",type:"string",minLength:3,maxLength:3,enum:["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD"],example:"USD"},amount:{title:"Amount",type:"string",pattern:"^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",description:"The API data type Amount is a JSON String in a canonical format that is\nrestricted by a regular expression for interoperability reasons.\nThis pattern does not allow any trailing zeroes at all, but allows an amount\nwithout a minor currency unit. It also only allows four digits in the minor\ncurrency unit; a negative value is not allowed. Using more than 18 digits\nin the major currency unit is not allowed.\n",example:123.45}},required:["currency","amount"]},transactionId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},transactionRequestId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},quote:{title:"QuotesIDPutResponse",type:"object",description:"The object sent in the PUT /quotes/{ID} callback.",properties:{transferAmount:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeReceiveAmount:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeFspFee:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeFspCommission:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},expiration:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/revokedAt"},geoCode:{title:"GeoCode",type:"object",description:"Data model for the complex type GeoCode.\nIndicates the geographic location from where the transaction was initiated.\n",properties:{latitude:{title:"Latitude",type:"string",pattern:"^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Latitude is a JSON String in a lexical format that is\nrestricted by a regular expression for interoperability reasons.\n",example:"+45.4215"},longitude:{title:"Longitude",type:"string",pattern:"^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Longitude is a JSON String in a lexical format that\nis restricted by a regular expression for interoperability reasons.\n",example:"+75.6972"}},required:["latitude","longitude"]},ilpPacket:{title:"IlpPacket",type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",minLength:1,maxLength:32768,description:"Information for recipient (transport layer information).",example:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"},condition:{title:"IlpCondition",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Condition that must be attached to the transfer by the Payer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},extensionList:{title:"ExtensionList",type:"object",description:"Data model for the complex type ExtensionList.\nAn optional list of extensions, specific to deployment.\n",properties:{extension:{type:"array",items:{title:"Extension",type:"object",description:"Data model for the complex type Extension.",properties:{key:{title:"ExtensionKey",type:"string",minLength:1,maxLength:32,description:"Extension key."},value:{title:"ExtensionValue",type:"string",minLength:1,maxLength:128,description:"Extension value."}},required:["key","value"]},minItems:1,maxItems:16,description:"Number of Extension elements."}},required:["extension"]}},required:["transferAmount","expiration","ilpPacket","condition"]}},required:["authenticationType","retriesLeft","amount","transactionId","transactionRequestId","quote"],additionalProperties:!1}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/thirdpartyRequests/transactions/{ID}/authorizations":{post:{operationId:"VerifyThirdPartyAuthorization",summary:"VerifyThirdPartyAuthorization",description:"The HTTP request `POST /thirdpartyRequests/transactions/{id}/authorizations`\nis used by the DFSP to verify a third party authorization.\n\nDFSP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"}],requestBody:{description:"The thirdparty authorization details to verify",required:!0,content:{"application/json":{schema:{title:"ThirdpartyRequestsTransactionsIDAuthorizationsPostRequest",type:"object",description:"The object sent in the POST /thirdpartyRequests/transactions/{id}/authorizations request.",properties:{challenge:{type:"string",description:"Base64 encoded binary string - the original challenge."},value:{allOf:[{$ref:"#/paths/~1thirdpartyRequests~1transactions~1%7BID%7D~1authorizations/put/requestBody/content/application~1json/schema/properties/value/allOf/0"}],description:"Base64 encoded binary string - the signed challenge"},consentId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object This tells DFSP and auth-service which constent allows the PISP to initiate transaction.\n"},sourceAccountId:{allOf:[{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"}],description:"DFSP specific account identifiers, e.g. `dfspa.alice.1234`"},status:{type:"string",enum:["PENDING"],description:"The status of the authorization. This MUST be PENDING for a POST request"}},required:["challenge","value","consentId","sourceAccountId","status"]},example:{challenge:"<QuoteResponse object>",value:"<base64 encoded binary - the signed quote response object>",consentId:"8d34f91d-d078-4077-8263-2c0498dhbjr",sourceAccountId:"dfspa.alice.1234",status:"PENDING"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}},put:{operationId:"UpdateThirdpartyAuthorization",summary:"UpdateThirdpartyAuthorization",description:"The HTTP request `PUT /thirdpartyRequests/transactions/{id}/authorizations` is used by the auth-service to update a thirdparty authorization after successful validation.\nFor an unsuccessful authorization result, the `PUT /thirdpartyRequests/transactions/{id}/authorizations/error` will be called by the auth-service, instead of this endpoint.\n\nPISP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"The thirdparty authorization details to update",required:!0,content:{"application/json":{schema:{title:"ThirdpartyRequestsTransactionsIDAuthorizationsPutResponse",type:"object",description:"The object sent in the PUT /thirdpartyRequests/transactions/{id}/authorizations request.",properties:{challenge:{type:"string",description:"Base64 encoded binary string - the original challenge."},value:{allOf:[{type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",description:"The API data type BinaryString is a JSON String.\nThe string is a base64url  encoding of a string of raw bytes,\nwhere padding (character ‘=’) is added at the end of the data if\nneeded to ensure that the string is a multiple of 4 characters.\nThe length restriction indicates the allowed number of characters.\n"}],description:"Base64 encoded binary string - the signed challenge."},consentId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object This tells DFSP and auth-service which consent allows the PISP to initiate transaction.\n"},sourceAccountId:{allOf:[{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"}],description:"DFSP specific account identifiers, e.g. `dfspa.alice.1234`"},status:{type:"string",enum:["VERIFIED"],description:"The status of the authorization. This value must be `VERIFIED` for a PUT request."}},required:["challenge","value","consentId","sourceAccountId","status"]}}}},responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consentRequests":{post:{tags:["consentRequests","sampled"],operationId:"CreateConsentRequest",summary:"CreateConsentRequest",description:"A request from a PISP to a DFSP to start the process of delegating consent.\n\nSwitch -> DFSP\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"The consentRequest to create",required:!0,content:{"application/json":{schema:{title:"ConsentRequestsPostRequest",type:"object",description:"The object sent in a `POST /consentRequests` request.",properties:{id:{title:"CorrelationId",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"Identifier that correlates all messages of the same sequence.\nThe API data type UUID (Universally Unique Identifier) is a JSON String\nin canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122),\nthat is restricted by a regular expression for interoperability reasons.\nA UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\n",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelType",type:"string",enum:["WEB","OTP"],description:'The auth channel being used for the consentRequest.\n- "WEB" - The Web auth channel.\n- "OTP" - The OTP auth channel.\n'}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."}},required:["id","initiatorId","scopes","authChannels","callbackUri"]},example:{id:"456",initiatorId:"pispA",authChannels:["WEB","OTP"],scopes:[{accountId:"dfspa.username.1234",actions:["accounts.transfer","accounts.getBalance"]},{accountId:"dfspa.username.5678",actions:["accounts.transfer","accounts.getBalance"]}],callbackUri:"pisp-app://callback.com"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consentRequests/{ID}":{put:{tags:["consentRequests"],operationId:"UpdateConsentRequest",summary:"UpdateConsentRequest",description:"DFSP updates auth channels and/or auth uri in response to consentRequest.\n\nDFSP -> Switch\n\nPISP updates the consentRequest to include authorization token from their user,\nwhich the DFSP is to then verify.\n\nSwitch -> DFSP\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"The updated consentRequest body",required:!0,content:{"application/json":{schema:{oneOf:[{title:"ConsentRequestsIDPutResponseWeb",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the request consent phase of the account linking web flow,\nthe result is the PISP being instructed on a specific URL where this\nsupposed user should be redirected. This URL should be a place where\nthe user can prove their identity (e.g., by logging in).\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelTypeWeb",type:"string",enum:["WEB"],description:"The web auth channel being used for PUT consentRequest/{ID} request.\n"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authUri:{type:"string",description:"The callback uri that the pisp app redirects to for user to complete their login."}},required:["initiatorId","scopes","authChannels","callbackUri","authUri"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseWebAuth",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the authentication phase of the account linking flow,\nthe user is expected to prove their identity to the DFSP by passing a OTP\nor secret to the PISP.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{$ref:"#/paths/~1consentRequests~1%7BID%7D/put/requestBody/content/application~1json/schema/oneOf/0/properties/authChannels/items"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authUri:{type:"string",description:"The callback uri that the pisp app redirects to for user to complete their login."},authToken:{type:"string",description:"The Auth token from the OTP or redirect to pisp app."}},required:["initiatorId","scopes","authChannels","callbackUri","authUri","authToken"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseOTP",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the request consent phase of the account linking OTP/SMS flow.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelTypeOTP",type:"string",enum:["OTP"],description:"The OTP auth channel being used for PUT consentRequest/{ID} request.\n"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."}},required:["initiatorId","scopes","authChannels","callbackUri"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseOTPAuth",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the authentication phase of the account linking flow,\nthe user is expected to prove their identity to the DFSP by passing a OTP\nor secret to the PISP.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{$ref:"#/paths/~1consentRequests~1%7BID%7D/put/requestBody/content/application~1json/schema/oneOf/2/properties/authChannels/items"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authToken:{type:"string",description:"The Auth token from the OTP or redirect to pisp app."}},required:["initiatorId","scopes","authChannels","callbackUri","authToken"],additionalProperties:!1}]}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consents":{post:{description:"Create a consent object. Called by DFSP after the successful creation and validation of a consentRequest.\nDFSP -> Switch\n",summary:"CreateConsent",operationId:"CreateConsent",tags:["consent"],requestBody:{description:"The updated consentRequest body.",required:!0,content:{"application/json":{schema:{title:"ConsentPostRequest",type:"object",description:"The object sent in a `POST /consents` request.",properties:{id:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object\ndecided by the DFSP who creates the Consent\nThis field is REQUIRED for POST /consent.\n"},requestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"The id of the ConsentRequest that was used to initiate the\ncreation of this Consent.\n"},participantId:{title:"FspId",type:"string",minLength:1,maxLength:32,description:"FSP identifier.",example:1234},initiatorId:{allOf:[{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}],description:"PISP identifier who uses this Consent."},revokedAt:{title:"DateTime",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",description:'The API data type DateTime is a JSON String in a lexical format that is\nrestricted by a regular expression for interoperability reasons.\nThe format is according to\n[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html),\nexpressed in a combined date, time and time zone format.\nA more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM].\nExamples are \\"2016-05-24T08:38:08.699-04:00\\", \\"2016-05-24T08:38:08.699Z\\"\n(where Z indicates Zulu time zone, same as UTC).\n',example:"2016-05-24T08:38:08.699-04:00"},scopes:{type:"array",items:{title:"Scope",type:"object",description:"Scope + Account Identifier mapping for a Consent.",example:'{\n  accountId: "dfsp.username.5678",\n  actions: [ "accounts.transfer", "accounts.getBalance" ]\n}\n',properties:{accountId:{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"},actions:{type:"array",items:{title:"ConsentScopeType",type:"string",enum:["accounts.getBalance","accounts.transfer"],description:'The scopes requested for a ConsentRequest.\n- "accounts.getBalance" - Get the balance of a given account.\n- "accounts.transfer" - Initiate a transfer from an account.\n'}}},required:["accountId","actions"]}}},required:["id","scopes","participantId","initiatorId"]}}}},parameters:[{name:"Accept",in:"header",required:!0,schema:{type:"string"},description:"The `Accept` header field indicates the version of the API the client\nwould like the server to use.\n"},{name:"Content-Length",in:"header",required:!1,schema:{type:"integer"},description:"The `Content-Length` header field indicates the anticipated size of the\npayload body. Only sent if there is a body.\n**Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).\n"},{name:"Content-Type",in:"header",schema:{type:"string"},required:!0,description:"The `Content-Type` header indicates the specific version of the API used\nto send the payload body.\n"},{name:"Date",in:"header",schema:{type:"string"},required:!0,description:"The `Date` header field indicates the date when the request was sent."},{name:"X-Forwarded-For",in:"header",schema:{type:"string"},required:!1,description:"The `X-Forwarded-For` header field is an unofficially accepted standard used\nfor informational purposes of the originating client IP address, as a\nrequest might pass multiple proxies, firewalls, and so on. Multiple\n`X-Forwarded-For` values should be expected and supported by implementers\nof the API.\n**Note:** An alternative to `X-Forwarded-For` is defined in\n[RFC 7239](https://tools.ietf.org/html/rfc7239).\nHowever, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.\n"},{name:"FSPIOP-Source",in:"header",schema:{type:"string"},required:!0,description:"The `FSPIOP-Source` header field is a non-HTTP standard field\nused by the API for identifying the sender of the HTTP request.\nThe field should be set by the original sender of the request.\nRequired for routing and signature verification\n(see header field `FSPIOP-Signature`).\n"},{name:"FSPIOP-Destination",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Destination` header field is a non-HTTP standard field used by\nthe API for HTTP header based routing of requests and responses to the\ndestination. The field should be set by the original sender of the request\n(if known), so that any entities between the client and the server do not\nneed to parse the payload for routing purposes.\n"},{name:"FSPIOP-Encryption",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Encryption` header field is a non-HTTP standard field used by\nthe API for applying end-to-end encryption of the request.\n"},{name:"FSPIOP-Signature",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Signature` header field is a non-HTTP standard field used by the\nAPI for applying an end-to-end request signature.\n"},{name:"FSPIOP-URI",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-URI` header field is a non-HTTP standard field used by the API\nfor signature verification, should contain the service URI. Required if\nsignature verification is used, for more information, see\n[the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n"},{name:"FSPIOP-HTTP-Method",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by\nthe API for signature verification, should contain the service HTTP method.\nRequired if signature verification is used, for more information, see\n[the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n"}],responses:{202:{description:"Accepted"},400:{description:"Bad Request",content:{"application/json":{schema:{title:"ErrorInformationResponse",type:"object",description:"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",properties:{errorInformation:{title:"ErrorInformation",type:"object",description:"Data model for the complex type ErrorInformation.",properties:{errorCode:{title:"ErrorCode",type:"string",pattern:"^[1-9]\\d{3}$",description:"The API data type ErrorCode is a JSON String of four characters,\nconsisting of digits only. Negative numbers are not allowed.\nA leading zero is not allowed. Each error code in the API is a\nfour-digit number, for example, 1234, where the first number\n(1 in the example) represents the high-level error category,\nthe second number (2 in the example) represents the low-level error category,\nand the last two numbers (34 in the example) represent the specific error.\n",example:5100},errorDescription:{title:"ErrorDescription",type:"string",minLength:1,maxLength:128,description:"Error description string.",example:"This is an error description."},extensionList:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/quote/properties/extensionList"}},required:["errorCode","errorDescription"]}}}}},headers:{"Content-Length":{required:!1,schema:{type:"integer"},description:"The `Content-Length` header field indicates the anticipated\nsize of the payload body. Only sent if there is a body.\n**Note:** The API supports a maximum size of 5242880 bytes\n(5 Megabytes).\n"},"Content-Type":{schema:{type:"string"},required:!0,description:"The `Content-Type` header indicates the specific version of the API used to send the payload body."}}},401:{description:"Unauthorized",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},403:{description:"Forbidden",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},404:{description:"Not Found",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},405:{description:"Method Not Allowed",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},406:{description:"Not Acceptable",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},501:{description:"Not Implemented",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},503:{description:"Service Unavailable",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}}}}},"/consents/{ID}":{put:{description:"The HTTP request `PUT /consents/{ID}` is used to update a specified consent object.\nThe `{ID}` in the URI should contain the `{ID}` that was used in the `POST /consents`.\n- Called by a `auth-service` to add the credential details.\n\n- Called by a `PISP` to add a signature of the challenge.\n\nSwitch -> DFSP\n",summary:"UpdateConsent",tags:["consent"],operationId:"UpdateConsent",requestBody:{required:!0,content:{"application/json":{schema:{title:"ConsentsIDPutResponse",type:"object",description:"The HTTP request `PUT /consents/{ID}` is used to update a specified consent object.\nThe `{ID}` in the URI should contain the `{ID}` that was used in the `POST /consents`.\n\n- Called by a `auth-service` to add the credential details\n\n- Called by a `PISP` to add a signature of the challenge\n",properties:{requestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"The id of the ConsentRequest that was used to initiate the\ncreation of this Consent.\n"},participantId:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"},initiatorId:{allOf:[{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}],description:"PISP identifier who uses this Consent."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},credential:{title:"UpdatedCredential",type:"object",description:"A credential used to allow a user to prove their identity and access\nto an account with a DFSP.\n\nUpdatedCredential is a special formatting of the credential to allow us to be\nmore explicit about the `status` field - it should only ever be PENDING when updating\na credential.\n",properties:{id:{type:"string",description:"The id of a Credential."},type:{title:"CredentialType",type:"string",enum:["FIDO"],description:'The type of the Credential.\n- "FIDO" - A FIDO public/private keypair.\n'},status:{title:"CredentialStatusType",type:"string",enum:["PENDING","ACTIVE"],description:'The status of the Credential\'s creation\n- "PENDING" - The PISP has requested a challenge, or the challenge has\n              initialized but not yet answered by the PISP.\n- "VERIFIED" - The Credential is valid, and ready to be used by the PISP.\n'},challenge:{title:"CredentialChallenge",type:"object",description:"The challenge issued by a DFSP that must be answered by the PISP.\n",properties:{payload:{type:"string",description:"Base64 encoded binary of the challenge that must be answered by the PISP."},signature:{type:"string",description:"Base64 encoded binary string or result of the payload signed by the PISP using the private key."}},required:["payload"]},payload:{type:"string",description:"Base64 encoded bytes - The public key of the Public/Private keypair."}},required:["id","type","status","challenge","payload"]}},required:["requestId","participantId","initiatorId","scopes","credential"]}}}},parameters:[{name:"ID",in:"path",required:!0,schema:{type:"string"},description:"The identifier value."},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],responses:{200:{description:"OK"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}},patch:{description:"The HTTP request `PATCH /consents/{ID}` is used to notify the PISP and DFSP of revoked consent.\n\nSwitch -> DFSP\n",summary:"NotifyConsent",tags:["consent"],operationId:"NotifyConsent",requestBody:{required:!0,content:{"application/json":{schema:{title:"ConsentsIDPatchResponse",description:"PATCH /consents/{ID} request object.\n\nSent to both the PISP and DFSP when a consent is revoked.\n",type:"object",properties:{status:{title:"ConsentStatusType",type:"string",enum:["REVOKED"],description:'The status of the Consent.\n- "REVOKED" - The Consent is no longer valid and has been revoked.\n'},revokedAt:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/revokedAt"}},required:["status","revokedAt"]}}}},parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consents/{ID}/revoke":{post:{description:"The HTTP request `POST /consents/{ID}/revoke` is used to revoke a previously created consent.\n- Called by a PISP when a user wants to unlink their account(s).\n- Called by a DFSP when a dfsp wants to unlink user's account(s).\n\nDFSP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],operationId:"RevokeConsent",responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}}}}];e.exports=r.length<=1?r[0]:r},394:function(e,t){const r=[{openapi:"3.0.2",info:{title:"Thirdparty-PISP API",version:"0.1.0",description:"A Mojaloop API for thirdparty interactions between `PISPs` (Payment Initiation Service Providers) and a Mojaloop Switch."},servers:[{url:"http://localhost:15000",description:"Local TTK server (uses test data)"},{url:"https://hub.zaikio.com/oauth/",description:"Production server (uses live data)"}],paths:{"/parties/{Type}/{ID}":{get:{summary:"Requests information relating to a transfer party identified by the specified identifier type and value.",description:"The HTTP request `GET /parties/{Type}/{ID}` is used to look up\ninformation regarding the requested transfer party,\nidentified by `{Type}` and `{ID}`.\n\nPISP -> Switch(Account Lookup Service).\n",tags:["parties"],parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{name:"Type",in:"path",required:!0,schema:{type:"string"},description:"The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`."},{$ref:"#/paths/~1consents/post/parameters/5"}],responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}},put:{description:"The callback `PUT /parties/{Type}/{ID}` is used to inform the\nPISP of a successful result of the Party information lookup.\n\nSwitch(Account Lookup Service) -> PISP.\n",summary:"Return party information",tags:["parties"],parameters:[{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"}],requestBody:{description:"Party information returned.",required:!0,content:{"application/json":{schema:{title:"PartiesTypeIDPutResponse",type:"object",description:"The object sent in the PUT /parties/{Type}/{ID} callback.\n\nThis is a variant based on FSPIOP `PartiesTypeIDPutResponse` specification.\nMain difference being that it returns a `Party` with the newly added\n`accounts` property.\n",properties:{party:{title:"Party",type:"object",description:"Data model for the complex type Party.\n\nThis is a variant based on FSPIOP `Party` specification.\nMain difference being the newly added `accounts` property.\n",properties:{partyIdInfo:{title:"PartyIdInfo",type:"object",description:"Data model for the complex type PartyIdInfo.",properties:{partyIdType:{title:"PartyIdType",type:"string",enum:["MSISDN","EMAIL","PERSONAL_ID","BUSINESS","DEVICE","ACCOUNT_ID","IBAN","ALIAS"],description:"Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory\nNumber, that is, the phone number) is used as reference to a participant.\nThe MSISDN identifier should be in international format according to the\n[ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).\nOptionally, the MSISDN may be prefixed by a single plus sign, indicating the\ninternational prefix.\n- EMAIL - An email is used as reference to a\nparticipant. The format of the email should be according to the informational\n[RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant.\nExamples of personal identification are passport number, birth certificate\nnumber, and national registration number. The identifier number is added in\nthe PartyIdentifier element. The personal identifier type is added in the\nPartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company)\nis used as reference to a participant. The BUSINESS identifier can be in any\nformat. To make a transaction connected to a specific username or bill number\nin a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a\nspecific business or organization is used as reference to a Party.\nFor referencing a specific device under a specific business or organization,\nuse the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as\nreference to a participant. The ACCOUNT_ID identifier can be in any format,\nas formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a\nparticipant. The IBAN identifier can consist of up to 34 alphanumeric\ncharacters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be\ncreated in the FSP as an alternative reference to an account owner.\nAnother example of an alias is a username in the FSP system.\nThe ALIAS identifier can be in any format. It is also possible to use the\nPartySubIdOrType element for identifying an account under an Alias defined\nby the PartyIdentifier.\n",example:"PERSONAL_ID"},partyIdentifier:{title:"PartyIdentifier",type:"string",minLength:1,maxLength:128,description:"Identifier of the Party.",example:16135551212},partySubIdOrType:{title:"PartySubIdOrType",type:"string",minLength:1,maxLength:128,description:"Either a sub-identifier of a PartyIdentifier, or a sub-type of the\nPartyIdType, normally a PersonalIdentifierType.\n",example:"DRIVING_LICENSE"},fspId:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}},required:["partyIdType","partyIdentifier"]},merchantClassificationCode:{title:"MerchantClassificationCode",type:"string",pattern:"^[\\d]{1,4}$",description:"A limited set of pre-defined numbers. This list would be a limited set of\nnumbers identifying a set of popular merchant types like School Fees,\nPubs and Restaurants, Groceries, etc.\n",example:4321},name:{title:"PartyName",type:"string",minLength:1,maxLength:128,description:"Name of the Party. Could be a real name or a nickname.",example:"Henrik Karlsson"},personalInfo:{title:"PartyPersonalInfo",type:"object",description:"Data model for the complex type PartyPersonalInfo.",properties:{complexName:{title:"PartyComplexName",type:"object",description:"Data model for the complex type PartyComplexName.",properties:{firstName:{title:"FirstName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"First name of the Party (Name Type).",example:"Henrik"},middleName:{title:"MiddleName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Middle name of the Party (Name Type).",example:"Johannes"},lastName:{title:"LastName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Last name of the Party (Name Type).",example:"Karlsson"}}},dateOfBirth:{title:"DateofBirth (type Date)",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:"Date of Birth of the Party.",example:"1966-06-16"}}},accounts:{description:"List of accounts associated with the party containing and DFSP routable address, currency identifier and description.",title:"AccountList",type:"object",properties:{account:{type:"array",items:{title:"Account",type:"object",description:"Data model for the complex type Account.",properties:{address:{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"},currency:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount/properties/currency"},description:{title:"Name",type:"string",pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:'The API data type Name is a JSON String, restricted by a regular expression\nto avoid characters which are generally not used in a name.\nRegular Expression - The regular expression for restricting the\nName type is \\"^(?!\\\\s*$)[\\\\w .,\'-]{1,128}$\\". The restriction does not\nallow a string consisting of whitespace only, all Unicode characters are\nallowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)\nand space characters ( ).\n**Note:** In some programming languages,\nUnicode support must be specifically enabled. For example, if Java is used,\nthe flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.\n'}},required:["currency"]},minItems:1,maxItems:32,description:"Accounts associated with the Party."}},required:["account"]}},required:["partyIdInfo"]}},required:["party"]}}}},responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/thirdpartyRequests/transactions/{ID}":{patch:{tags:["thirdpartyRequests","sampled"],operationId:"NotifyThirdpartyTransactionRequests",summary:"NotifyThirdpartyTransactionRequests",description:"The HTTP request `PATCH /thirdpartyRequests/transactions/{ID}` is used to\nnotify a thirdparty of the outcome of a transaction request.\n\nSwitch(Thirdparty API Adapter) -> PISP\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"}],requestBody:{required:!0,content:{"application/json":{schema:{title:"ThirdpartyRequestsTransactionsIDPatchResponse",type:"object",description:"The object sent in the PATCH /thirdpartyRequests/transactions/{ID} callback.",properties:{fulfilment:{title:"IlpFulfilment",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Fulfilment that must be attached to the transfer by the Payee.",example:"WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"},completedTimestamp:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/revokedAt"},transferState:{title:"TransferState",type:"string",enum:["RECEIVED","RESERVED","COMMITTED","ABORTED"],description:"Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or\nfailure to perform the transfer.\n",example:"RESERVED"},extensionList:{title:"ExtensionList",type:"object",description:"Data model for the complex type ExtensionList.\nAn optional list of extensions, specific to deployment.\n",properties:{extension:{type:"array",items:{title:"Extension",type:"object",description:"Data model for the complex type Extension.",properties:{key:{title:"ExtensionKey",type:"string",minLength:1,maxLength:32,description:"Extension key."},value:{title:"ExtensionValue",type:"string",minLength:1,maxLength:128,description:"Extension value."}},required:["key","value"]},minItems:1,maxItems:16,description:"Number of Extension elements."}},required:["extension"]}},required:["transferState"]}}}},responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/thirdpartyRequests/transactions":{post:{tags:["thirdpartyRequests","sampled"],operationId:"CreateThirdpartyTransactionRequests",summary:"CreateThirdpartyTransactionRequests",description:"The HTTP request `POST /thirdpartyRequests/transactions` is used to request the creation of a third party transaction.\nCalled by a PISP to initiate a third party transaction flow.\n\nPISP -> Switch(Thirdparty API Adapter)\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"Transaction request to be created.",required:!0,content:{"application/json":{schema:{title:"ThirdpartyRequestsTransactionsPostRequest",type:"object",description:"The object sent in the POST /thirdpartyRequests/transactions request.",properties:{transactionRequestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the FSPs for the transaction request object. The ID should be reused for resends of the same transaction request. A new ID should be generated for each new transaction request.\n"},sourceAccountId:{allOf:[{title:"AccountAddress",type:"string",description:"A long-lived unique account identifier provided by the DFSP. This MUST NOT\nbe Bank Account Number or anything that may expose a User's private bank\naccount information.\n",pattern:"^([0-9A-Za-z_~\\-\\.]+[0-9A-Za-z_~\\-])$",minLength:1,maxLength:1023}],description:"DFSP specific account identifiers, e.g. `dfspa.alice.1234`"},consentId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object This tells DFSP and auth-service which constent allows the PISP to initiate transaction.\n"},payee:{allOf:[{title:"Party",type:"object",description:"Data model for the complex type Party.",properties:{partyIdInfo:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/partyIdInfo"},merchantClassificationCode:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/merchantClassificationCode"},name:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/name"},personalInfo:{$ref:"#/paths/~1parties~1%7BType%7D~1%7BID%7D/put/requestBody/content/application~1json/schema/properties/party/properties/personalInfo"}},required:["partyIdInfo"]}],description:"Information about the Payee in the proposed financial transaction."},payer:{allOf:[{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/payee/allOf/0"}],description:"Information about the Payer in the proposed financial transaction."},amountType:{allOf:[{title:"AmountType",type:"string",enum:["SEND","RECEIVE"],description:"Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should\nbe withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is,\nthe amount that should be sent to the receiver exclusive of any fees.\n",example:"RECEIVE"}],description:"SEND for sendAmount, RECEIVE for receiveAmount."},amount:{allOf:[{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"}],description:"Requested amount to be transferred from the Payer to Payee."},transactionType:{allOf:[{title:"TransactionType",type:"object",description:"Data model for the complex type TransactionType.",properties:{scenario:{title:"TransactionScenario",type:"string",enum:["DEPOSIT","WITHDRAWAL","TRANSFER","PAYMENT","REFUND"],description:"Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction.\nIn a normal scenario, electronic funds are transferred from a\nBusiness account to a Consumer account, and physical cash is given\nfrom the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction.\nIn a normal scenario, electronic funds are transferred from a Consumer’s\naccount to a Business account, and physical cash is given from the Business\nUser to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer)\ntransaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a\nMerchant or Organization, but could also be for a B2B (Business to Business)\npayment. The transaction could be online for a purchase in an Internet store,\nin a physical store where both the Consumer and Business User are present, a\nbill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction.\n",example:"DEPOSIT"},subScenario:{title:"TransactionSubScenario",type:"string",pattern:"^[A-Z_]{1,32}$",description:"Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type).",example:"LOCALLY_DEFINED_SUBSCENARIO"},initiator:{title:"TransactionInitiator",type:"string",enum:["PAYER","PAYEE"],description:"Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction.\nThe account to send from is either owned by the Payer or is connected to the\nPayer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a\ntransaction request. The Payer must approve the transaction, either\nautomatically by a pre-generated OTP or by pre-approval of the Payee,\nor by manually approving in his or her own Device.\n",example:"PAYEE"},initiatorType:{title:"TransactionInitiatorType",type:"string",enum:["CONSUMER","AGENT","BUSINESS","DEVICE"],description:"Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction.\n",example:"CONSUMER"},refundInfo:{title:"Refund",type:"object",description:"Data model for the complex type Refund.",properties:{originalTransactionId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},refundReason:{title:"RefundReason",type:"string",minLength:1,maxLength:128,description:"Reason for the refund.",example:"Free text indicating reason for the refund."}},required:["originalTransactionId"]},balanceOfPayments:{title:"BalanceOfPayments",type:"string",pattern:"^[1-9]\\d{2}$",description:"(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/)\nis a JSON String of 3 characters, consisting of digits only.\nNegative numbers are not allowed. A leading zero is not allowed.\n",example:123}},required:["scenario","initiator","initiatorType"]}],description:"Type of transaction."},expiration:{type:"string",description:"Date and time until when the transaction request is valid. It can be set to get a quick failure in case the peer FSP takes too long to respond.\n",example:"2016-05-24T08:38:08.699-04:00"}},required:["transactionRequestId","sourceAccountId","consentId","payee","payer","amountType","amount","transactionType","expiration"]},example:{transactionRequestId:"8d34f91d-d078-4077-8263-2c047876fcf6",sourceAccountId:"dfspa.alice.1234",consentId:"111",payee:{partyIdInfo:{partyIdType:"MSISDN",partyIdentifier:"+44 1234 5678",fspId:"dfspb"}},payer:{personalInfo:{complexName:{firstName:"Alice",lastName:"K"}},partyIdInfo:{partyIdType:"MSISDN",partyIdentifier:"+44 8765 4321",fspId:"dfspa"}},amountType:"SEND",amount:{amount:"100",currency:"USD"},transactionType:{scenario:"TRANSFER",initiator:"PAYER",initiatorType:"CONSUMER"},expiration:"2020-07-15T22:17:28.985-01:00"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/authorizations":{post:{operationId:"AuthorizationPostRequest",summary:"AuthorizationPostRequest",description:"Switch -> PISP\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"Authorization request details",required:!0,content:{"application/json":{schema:{title:"AuthorizationsPostRequest",description:"POST /authorizations request object.",type:"object",properties:{authenticationType:{title:"AuthorizationChannelType",type:"string",enum:["OTP","QRCODE","U2F"],description:"Below are the allowed values for the enumeration AuthorizationChannelType.\n- OTP - One-time password generated by the Payer FSP.\n- QRCODE - QR code used as One Time Password.\n- U2F - U2F is a new addition isolated to Thirdparty stream.\n\nThis is based on FSPIOP `AuthenticationType` with U2F added.\n",example:"U2F"},retriesLeft:{title:"Integer",type:"string",pattern:"^[1-9]\\d*$",description:"The API data type Integer is a JSON String consisting of digits only.\nNegative numbers and leading zeroes are not allowed.\nThe data type is always limited to a specific number of digits.\n"},amount:{title:"Money",type:"object",description:"Data model for the complex type Money.",properties:{currency:{title:"Currency",description:"The currency codes defined in\n[ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)\nas three-letter alphabetic codes are used as the standard naming representation for currencies.\n",type:"string",minLength:3,maxLength:3,enum:["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD"],example:"USD"},amount:{title:"Amount",type:"string",pattern:"^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",description:"The API data type Amount is a JSON String in a canonical format that is\nrestricted by a regular expression for interoperability reasons.\nThis pattern does not allow any trailing zeroes at all, but allows an amount\nwithout a minor currency unit. It also only allows four digits in the minor\ncurrency unit; a negative value is not allowed. Using more than 18 digits\nin the major currency unit is not allowed.\n",example:123.45}},required:["currency","amount"]},transactionId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},transactionRequestId:{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"},quote:{title:"QuotesIDPutResponse",type:"object",description:"The object sent in the PUT /quotes/{ID} callback.",properties:{transferAmount:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeReceiveAmount:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeFspFee:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},payeeFspCommission:{$ref:"#/paths/~1authorizations/post/requestBody/content/application~1json/schema/properties/amount"},expiration:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/revokedAt"},geoCode:{title:"GeoCode",type:"object",description:"Data model for the complex type GeoCode.\nIndicates the geographic location from where the transaction was initiated.\n",properties:{latitude:{title:"Latitude",type:"string",pattern:"^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Latitude is a JSON String in a lexical format that is\nrestricted by a regular expression for interoperability reasons.\n",example:"+45.4215"},longitude:{title:"Longitude",type:"string",pattern:"^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Longitude is a JSON String in a lexical format that\nis restricted by a regular expression for interoperability reasons.\n",example:"+75.6972"}},required:["latitude","longitude"]},ilpPacket:{title:"IlpPacket",type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",minLength:1,maxLength:32768,description:"Information for recipient (transport layer information).",example:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"},condition:{title:"IlpCondition",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Condition that must be attached to the transfer by the Payer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},extensionList:{$ref:"#/paths/~1thirdpartyRequests~1transactions~1%7BID%7D/patch/requestBody/content/application~1json/schema/properties/extensionList"}},required:["transferAmount","expiration","ilpPacket","condition"]}},required:["authenticationType","retriesLeft","amount","transactionId","transactionRequestId","quote"],additionalProperties:!1}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consentRequests":{post:{tags:["consentRequests","sampled"],operationId:"CreateConsentRequest",summary:"CreateConsentRequest",description:"A request from a PISP to a DFSP to start the process of delegating consentRequest.\n\nPISP -> Switch\n",parameters:[{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"The consentRequest to create",required:!0,content:{"application/json":{schema:{title:"ConsentRequestsPostRequest",type:"object",description:"The object sent in a `POST /consentRequests` request.",properties:{id:{title:"CorrelationId",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"Identifier that correlates all messages of the same sequence.\nThe API data type UUID (Universally Unique Identifier) is a JSON String\nin canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122),\nthat is restricted by a regular expression for interoperability reasons.\nA UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘).\n",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelType",type:"string",enum:["WEB","OTP"],description:'The auth channel being used for the consentRequest.\n- "WEB" - The Web auth channel.\n- "OTP" - The OTP auth channel.\n'}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."}},required:["id","initiatorId","scopes","authChannels","callbackUri"]},example:{id:"456",initiatorId:"pispA",authChannels:["WEB","OTP"],scopes:[{accountId:"dfspa.username.1234",actions:["accounts.transfer","accounts.getBalance"]},{accountId:"dfspa.username.5678",actions:["accounts.transfer","accounts.getBalance"]}],callbackUri:"pisp-app://callback.com"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consentRequests/{ID}":{put:{tags:["consentRequests"],operationId:"UpdateConsentRequest",summary:"UpdateConsentRequest",description:"PISP receives consentRequest back with DFSP auth channels and/or auth uri in response to consentRequest.\n\nSwitch -> PISP\n\nPISP updates the consentRequest to include authorization token from their user.\n\nPISP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"The updated consentRequest body",required:!0,content:{"application/json":{schema:{oneOf:[{title:"ConsentRequestsIDPutResponseWeb",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the request consent phase of the account linking web flow,\nthe result is the PISP being instructed on a specific URL where this\nsupposed user should be redirected. This URL should be a place where\nthe user can prove their identity (e.g., by logging in).\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelTypeWeb",type:"string",enum:["WEB"],description:"The web auth channel being used for PUT consentRequest/{ID} request.\n"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authUri:{type:"string",description:"The callback uri that the pisp app redirects to for user to complete their login."}},required:["initiatorId","scopes","authChannels","callbackUri","authUri"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseWebAuth",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the authentication phase of the account linking flow,\nthe user is expected to prove their identity to the DFSP by passing a OTP\nor secret to the PISP.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{$ref:"#/paths/~1consentRequests~1%7BID%7D/put/requestBody/content/application~1json/schema/oneOf/0/properties/authChannels/items"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authUri:{type:"string",description:"The callback uri that the pisp app redirects to for user to complete their login."},authToken:{type:"string",description:"The Auth token from the OTP or redirect to pisp app."}},required:["initiatorId","scopes","authChannels","callbackUri","authUri","authToken"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseOTP",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the request consent phase of the account linking OTP/SMS flow.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{title:"ConsentRequestChannelTypeOTP",type:"string",enum:["OTP"],description:"The OTP auth channel being used for PUT consentRequest/{ID} request.\n"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."}},required:["initiatorId","scopes","authChannels","callbackUri"],additionalProperties:!1},{title:"ConsentRequestsIDPutResponseOTPAuth",type:"object",description:"The object sent in a `PUT /consentRequests/{ID}` request.\n\nSchema used in the authentication phase of the account linking flow,\nthe user is expected to prove their identity to the DFSP by passing a OTP\nor secret to the PISP.\n",properties:{initiatorId:{type:"string",description:"The id of the PISP who will initiate transactions on a user's behalf."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},authChannels:{type:"array",items:{$ref:"#/paths/~1consentRequests~1%7BID%7D/put/requestBody/content/application~1json/schema/oneOf/2/properties/authChannels/items"}},callbackUri:{type:"string",description:"The callback uri that the user will be redirected to after completing the WEB auth channel."},authToken:{type:"string",description:"The Auth token from the OTP or redirect to pisp app."}},required:["initiatorId","scopes","authChannels","callbackUri","authToken"],additionalProperties:!1}]}}}},responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consents":{post:{description:"Create a consent object. Called by DFSP after the successful creation and validation of a consentRequest.\nSwitch -> PISP\n",summary:"CreateConsent",operationId:"CreateConsent",tags:["consent"],requestBody:{description:"The updated consentRequest body.",required:!0,content:{"application/json":{schema:{title:"ConsentPostRequest",type:"object",description:"The object sent in a `POST /consents` request.",properties:{id:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"Common ID between the PISP and FSP for the Consent object\ndecided by the DFSP who creates the Consent\nThis field is REQUIRED for POST /consent.\n"},requestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"The id of the ConsentRequest that was used to initiate the\ncreation of this Consent.\n"},participantId:{title:"FspId",type:"string",minLength:1,maxLength:32,description:"FSP identifier.",example:1234},initiatorId:{allOf:[{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}],description:"PISP identifier who uses this Consent."},revokedAt:{title:"DateTime",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",description:'The API data type DateTime is a JSON String in a lexical format that is\nrestricted by a regular expression for interoperability reasons.\nThe format is according to\n[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html),\nexpressed in a combined date, time and time zone format.\nA more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM].\nExamples are \\"2016-05-24T08:38:08.699-04:00\\", \\"2016-05-24T08:38:08.699Z\\"\n(where Z indicates Zulu time zone, same as UTC).\n',example:"2016-05-24T08:38:08.699-04:00"},scopes:{type:"array",items:{title:"Scope",type:"object",description:"Scope + Account Identifier mapping for a Consent.",example:'{\n  accountId: "dfsp.username.5678",\n  actions: [ "accounts.transfer", "accounts.getBalance" ]\n}\n',properties:{accountId:{$ref:"#/paths/~1thirdpartyRequests~1transactions/post/requestBody/content/application~1json/schema/properties/sourceAccountId/allOf/0"},actions:{type:"array",items:{title:"ConsentScopeType",type:"string",enum:["accounts.getBalance","accounts.transfer"],description:'The scopes requested for a ConsentRequest.\n- "accounts.getBalance" - Get the balance of a given account.\n- "accounts.transfer" - Initiate a transfer from an account.\n'}}},required:["accountId","actions"]}}},required:["id","scopes","participantId","initiatorId"]}}}},parameters:[{name:"Accept",in:"header",required:!0,schema:{type:"string"},description:"The `Accept` header field indicates the version of the API the client\nwould like the server to use.\n"},{name:"Content-Length",in:"header",required:!1,schema:{type:"integer"},description:"The `Content-Length` header field indicates the anticipated size of the\npayload body. Only sent if there is a body.\n**Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).\n"},{name:"Content-Type",in:"header",schema:{type:"string"},required:!0,description:"The `Content-Type` header indicates the specific version of the API used\nto send the payload body.\n"},{name:"Date",in:"header",schema:{type:"string"},required:!0,description:"The `Date` header field indicates the date when the request was sent."},{name:"X-Forwarded-For",in:"header",schema:{type:"string"},required:!1,description:"The `X-Forwarded-For` header field is an unofficially accepted standard used\nfor informational purposes of the originating client IP address, as a\nrequest might pass multiple proxies, firewalls, and so on. Multiple\n`X-Forwarded-For` values should be expected and supported by implementers\nof the API.\n**Note:** An alternative to `X-Forwarded-For` is defined in\n[RFC 7239](https://tools.ietf.org/html/rfc7239).\nHowever, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`.\n"},{name:"FSPIOP-Source",in:"header",schema:{type:"string"},required:!0,description:"The `FSPIOP-Source` header field is a non-HTTP standard field\nused by the API for identifying the sender of the HTTP request.\nThe field should be set by the original sender of the request.\nRequired for routing and signature verification\n(see header field `FSPIOP-Signature`).\n"},{name:"FSPIOP-Destination",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Destination` header field is a non-HTTP standard field used by\nthe API for HTTP header based routing of requests and responses to the\ndestination. The field should be set by the original sender of the request\n(if known), so that any entities between the client and the server do not\nneed to parse the payload for routing purposes.\n"},{name:"FSPIOP-Encryption",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Encryption` header field is a non-HTTP standard field used by\nthe API for applying end-to-end encryption of the request.\n"},{name:"FSPIOP-Signature",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Signature` header field is a non-HTTP standard field used by the\nAPI for applying an end-to-end request signature.\n"},{name:"FSPIOP-URI",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-URI` header field is a non-HTTP standard field used by the API\nfor signature verification, should contain the service URI. Required if\nsignature verification is used, for more information, see\n[the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n"},{name:"FSPIOP-HTTP-Method",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by\nthe API for signature verification, should contain the service HTTP method.\nRequired if signature verification is used, for more information, see\n[the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set).\n"}],responses:{202:{description:"Accepted"},400:{description:"Bad Request",content:{"application/json":{schema:{title:"ErrorInformationResponse",type:"object",description:"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",properties:{errorInformation:{title:"ErrorInformation",type:"object",description:"Data model for the complex type ErrorInformation.",properties:{errorCode:{title:"ErrorCode",type:"string",pattern:"^[1-9]\\d{3}$",description:"The API data type ErrorCode is a JSON String of four characters,\nconsisting of digits only. Negative numbers are not allowed.\nA leading zero is not allowed. Each error code in the API is a\nfour-digit number, for example, 1234, where the first number\n(1 in the example) represents the high-level error category,\nthe second number (2 in the example) represents the low-level error category,\nand the last two numbers (34 in the example) represent the specific error.\n",example:5100},errorDescription:{title:"ErrorDescription",type:"string",minLength:1,maxLength:128,description:"Error description string.",example:"This is an error description."},extensionList:{$ref:"#/paths/~1thirdpartyRequests~1transactions~1%7BID%7D/patch/requestBody/content/application~1json/schema/properties/extensionList"}},required:["errorCode","errorDescription"]}}}}},headers:{"Content-Length":{required:!1,schema:{type:"integer"},description:"The `Content-Length` header field indicates the anticipated\nsize of the payload body. Only sent if there is a body.\n**Note:** The API supports a maximum size of 5242880 bytes\n(5 Megabytes).\n"},"Content-Type":{schema:{type:"string"},required:!0,description:"The `Content-Type` header indicates the specific version of the API used to send the payload body."}}},401:{description:"Unauthorized",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},403:{description:"Forbidden",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},404:{description:"Not Found",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},405:{description:"Method Not Allowed",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},406:{description:"Not Acceptable",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},501:{description:"Not Implemented",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}},503:{description:"Service Unavailable",content:{"application/json":{schema:{$ref:"#/paths/~1consents/post/responses/400/content/application~1json/schema"}}},headers:{"Content-Length":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Length"},"Content-Type":{$ref:"#/paths/~1consents/post/responses/400/headers/Content-Type"}}}}}},"/consents/{ID}":{put:{description:"The HTTP request `PUT /consents/{ID}` is used to update a specified consent object.\nThe `{ID}` in the URI should contain the `{ID}` that was used in the `POST /consents`.\n- Called by a `auth-service` to add the credential details.\n\n- Called by a `PISP` to add a signature of the challenge.\n\nPISP -> Switch\nSwitch -> PISP\n",summary:"UpdateConsent",tags:["consent"],operationId:"UpdateConsent",requestBody:{required:!0,content:{"application/json":{schema:{title:"ConsentsIDPutResponse",type:"object",description:"The HTTP request `PUT /consents/{ID}` is used to update a specified consent object.\nThe `{ID}` in the URI should contain the `{ID}` that was used in the `POST /consents`.\n\n- Called by a `auth-service` to add the credential details\n\n- Called by a `PISP` to add a signature of the challenge\n",properties:{requestId:{allOf:[{$ref:"#/paths/~1consentRequests/post/requestBody/content/application~1json/schema/properties/id"}],description:"The id of the ConsentRequest that was used to initiate the\ncreation of this Consent.\n"},participantId:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"},initiatorId:{allOf:[{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/participantId"}],description:"PISP identifier who uses this Consent."},scopes:{type:"array",items:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/scopes/items"}},credential:{title:"UpdatedCredential",type:"object",description:"A credential used to allow a user to prove their identity and access\nto an account with a DFSP.\n\nUpdatedCredential is a special formatting of the credential to allow us to be\nmore explicit about the `status` field - it should only ever be PENDING when updating\na credential.\n",properties:{id:{type:"string",description:"The id of a Credential."},type:{$ref:"#/paths/~1consents~1%7BID%7D~1generateChallenge/post/requestBody/content/application~1json/schema/properties/type"},status:{title:"CredentialStatusType",type:"string",enum:["PENDING","ACTIVE"],description:'The status of the Credential\'s creation\n- "PENDING" - The PISP has requested a challenge, or the challenge has\n              initialized but not yet answered by the PISP.\n- "VERIFIED" - The Credential is valid, and ready to be used by the PISP.\n'},challenge:{title:"CredentialChallenge",type:"object",description:"The challenge issued by a DFSP that must be answered by the PISP.\n",properties:{payload:{type:"string",description:"Base64 encoded binary of the challenge that must be answered by the PISP."},signature:{type:"string",description:"Base64 encoded binary string or result of the payload signed by the PISP using the private key."}},required:["payload"]},payload:{type:"string",description:"Base64 encoded bytes - The public key of the Public/Private keypair."}},required:["id","type","status","challenge","payload"]}},required:["requestId","participantId","initiatorId","scopes","credential"]}}}},parameters:[{name:"ID",in:"path",required:!0,schema:{type:"string"},description:"The identifier value."},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],responses:{200:{description:"OK"},202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}},patch:{description:"The HTTP request `PATCH /consents/{ID}` is used to notify the PISP and DFSP of revoked consent.\n\nSwitch -> PISP\n",summary:"NotifyConsent",tags:["consent"],operationId:"NotifyConsent",requestBody:{required:!0,content:{"application/json":{schema:{title:"ConsentsIDPatchResponse",description:"PATCH /consents/{ID} request object.\n\nSent to both the PISP and DFSP when a consent is revoked.\n",type:"object",properties:{status:{title:"ConsentStatusType",type:"string",enum:["REVOKED"],description:'The status of the Consent.\n- "REVOKED" - The Consent is no longer valid and has been revoked.\n'},revokedAt:{$ref:"#/paths/~1consents/post/requestBody/content/application~1json/schema/properties/revokedAt"}},required:["status","revokedAt"]}}}},parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],responses:{200:{$ref:"#/paths/~1consents~1%7BID%7D/put/responses/200"},202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consents/{ID}/generateChallenge":{post:{tags:["consents"],operationId:"GenerateChallengeRequest",summary:"GenerateChallengeRequest",description:"PISP requests a challenge from the auth service.\n\nPISP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],requestBody:{description:"GenerateChallengeRequest Body",required:!0,content:{"application/json":{schema:{title:"ConsentsIDGenerateChallengePostRequest",type:"object",description:"A credential used to allow a user to prove their identity\nand access to an account with a DFSP.\n",properties:{type:{title:"CredentialType",type:"string",enum:["FIDO"],description:'The type of the Credential.\n- "FIDO" - A FIDO public/private keypair.\n'}},required:["type"]},example:{type:"FIDO"}}}},responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}},"/consents/{ID}/revoke":{post:{description:"The HTTP request `POST /consents/{ID}/revoke` is used to revoke a previously created consent.\n- Called by a PISP when a user wants to unlink their account(s).\n- Called by a DFSP when a dfsp wants to unlink user's account(s).\n\nPISP -> Switch\n",parameters:[{$ref:"#/paths/~1consents~1%7BID%7D/put/parameters/0"},{$ref:"#/paths/~1consents/post/parameters/1"},{$ref:"#/paths/~1consents/post/parameters/2"},{$ref:"#/paths/~1consents/post/parameters/3"},{$ref:"#/paths/~1consents/post/parameters/4"},{$ref:"#/paths/~1consents/post/parameters/5"},{$ref:"#/paths/~1consents/post/parameters/6"},{$ref:"#/paths/~1consents/post/parameters/7"},{$ref:"#/paths/~1consents/post/parameters/8"},{$ref:"#/paths/~1consents/post/parameters/9"},{$ref:"#/paths/~1consents/post/parameters/10"}],operationId:"RevokeConsent",responses:{202:{$ref:"#/paths/~1consents/post/responses/202"},400:{$ref:"#/paths/~1consents/post/responses/400"},401:{$ref:"#/paths/~1consents/post/responses/401"},403:{$ref:"#/paths/~1consents/post/responses/403"},404:{$ref:"#/paths/~1consents/post/responses/404"},405:{$ref:"#/paths/~1consents/post/responses/405"},406:{$ref:"#/paths/~1consents/post/responses/406"},501:{$ref:"#/paths/~1consents/post/responses/501"},503:{$ref:"#/paths/~1consents/post/responses/503"}}}}}}];e.exports=r.length<=1?r[0]:r},395:function(e,t){const r=[{swagger:"2.0",info:{version:"1.1",title:"Open API for FSP Interoperability (FSPIOP)",description:"Based on API Definition.docx updated on 2018-03-13 Version 1.0. Note - The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.",license:{name:"Open API for FSP Interoperability (FSPIOP)"}},basePath:"/fsp",schemes:["http","https"],paths:{"/participants/{ID}/error":{put:{description:"If there is an error during FSP information creation in the server, the error callback PUT /participants/{ID}/error is used. The <ID> in the URI should contain the requestId that was used for the creation of the participant information.",summary:"ParticipantsByIDAndError",tags:["participants"],operationId:"ParticipantsByIDAndError",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{errorInformation:{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants/{ID}":{put:{description:"The callback PUT /participants/<ID> is used to inform the client of the result of the creation of the provided list of identities.",summary:"ParticipantsByID",tags:["participants"],operationId:"ParticipantsByIDPut",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsIDPutResponse"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“partyList”":[{partyId:{partyIdType:"PERSONAL_ID",partyIdentifier:"p123456789"}},{partyId:{partyIdType:"PERSONAL_ID",partyIdentifier:"p987654321"}}],currency:"USD"}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants/{Type}/{ID}/error":{put:{description:"If the server is unable to find, create or delete the associated FSP of the provided identity, or another processing error occurred, the error callback PUT /participants/<Type>/<ID>/error (or PUT /participants/<Type>/<ID>/<SubId>/error) is used.",summary:"ParticipantsErrorByTypeAndID",tags:["participants"],operationId:"ParticipantsErrorByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants/{Type}/{ID}/{SubId}/error":{put:{description:"If the server is unable to find, create or delete the associated FSP of the provided identity, or another processing error occurred, the error callback PUT /participants/<Type>/<ID>/error (or PUT /participants/<Type>/<ID>/<SubId>/error) is used.",summary:"ParticipantsSubIdErrorByTypeAndID",tags:["participants"],operationId:"ParticipantsSubIdErrorByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/SubId"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants/{Type}/{ID}/{SubId}":{parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/SubId"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /participants/<Type>/<ID> (or GET /participants/<Type>/<ID>/<SubId>) is used to find out in which FSP the requested Party, defined by <Type>, <ID> and optionally <SubId>, is located (for example, GET /participants/MSISDN/123456789, or GET /participants/BUSINESS/shoecompany/employee1). This HTTP request should support a query string for filtering of currency. To use filtering of currency, the HTTP request GET /participants/<Type>/<ID>?currency=XYZ should be used, where XYZ is the requested currency.",summary:"ParticipantsSubIdByTypeAndID",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /participants/<Type>/<ID> (or PUT /participants/<Type>/<ID>/<SubId>) is used to inform the client of a successful result of the lookup, creation, or deletion of the FSP information related to the Party. If the FSP information is deleted, the fspId element should be empty; otherwise the element should include the FSP information for the Party.",summary:"ParticipantsSubIdByTypeAndID",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID3",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsTypeIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“fspId”":"“1234”"}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},post:{description:"The HTTP request POST /participants/<Type>/<ID> (or POST /participants/<Type>/<ID>/<SubId>) is used to create information in the server regarding the provided identity, defined by <Type>, <ID>, and optionally <SubId> (for example, POST /participants/MSISDN/123456789 or POST /participants/BUSINESS/shoecompany/employee1).",summary:"ParticipantsSubIdByTypeAndID",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndIDPost",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsTypeIDSubIDPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“fspId”":"“1234”","“currency”":"“USD”"}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},delete:{description:"The HTTP request DELETE /participants/<Type>/<ID> (or DELETE /participants/<Type>/<ID>/<SubId>) is used to delete information in the server regarding the provided identity, defined by <Type> and <ID>) (for example, DELETE /participants/MSISDN/123456789), and optionally <SubId>. This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request DELETE /participants/<Type>/<ID>?currency=XYZ should be used, where XYZ is the requested currency. Note -  The Account Lookup System should verify that it is the Party’s current FSP that is deleting the FSP information.",summary:"ParticipantsSubIdByTypeAndID",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID2",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants/{Type}/{ID}":{parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /participants/<Type>/<ID> (or GET /participants/<Type>/<ID>/<SubId>) is used to find out in which FSP the requested Party, defined by <Type>, <ID> and optionally <SubId>, is located (for example, GET /participants/MSISDN/123456789, or GET /participants/BUSINESS/shoecompany/employee1). This HTTP request should support a query string for filtering of currency. To use filtering of currency, the HTTP request GET /participants/<Type>/<ID>?currency=XYZ should be used, where XYZ is the requested currency.",summary:"ParticipantsByTypeAndID",tags:["participants"],operationId:"ParticipantsByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /participants/<Type>/<ID> (or PUT /participants/<Type>/<ID>/<SubId>) is used to inform the client of a successful result of the lookup, creation, or deletion of the FSP information related to the Party. If the FSP information is deleted, the fspId element should be empty; otherwise the element should include the FSP information for the Party.",summary:"ParticipantsByTypeAndID",tags:["participants"],operationId:"ParticipantsByTypeAndID3",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsTypeIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“fspId”":"“1234”"}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},post:{description:"The HTTP request POST /participants/<Type>/<ID> (or POST /participants/<Type>/<ID>/<SubId>) is used to create information in the server regarding the provided identity, defined by <Type>, <ID>, and optionally <SubId> (for example, POST /participants/MSISDN/123456789 or POST /participants/BUSINESS/shoecompany/employee1).",summary:"ParticipantsByIDAndType",tags:["participants"],operationId:"ParticipantsByIDAndType",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsTypeIDSubIDPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“fspId”":"“1234”","“currency”":"“USD”"}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},delete:{description:"The HTTP request DELETE /participants/<Type>/<ID> (or DELETE /participants/<Type>/<ID>/<SubId>) is used to delete information in the server regarding the provided identity, defined by <Type> and <ID>) (for example, DELETE /participants/MSISDN/123456789), and optionally <SubId>. This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request DELETE /participants/<Type>/<ID>?currency=XYZ should be used, where XYZ is the requested currency. Note -  The Account Lookup System should verify that it is the Party’s current FSP that is deleting the FSP information.",summary:"ParticipantsByTypeAndID",tags:["participants"],operationId:"ParticipantsByTypeAndID2",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/participants":{post:{description:"The HTTP request POST /participants is used to create information in the server regarding the provided list of identities. This request should be used for bulk creation of FSP information for more than one Party. The optional currency parameter should indicate that each provided Party supports the currency",summary:"Participants",tags:["participants"],operationId:"Participants1",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ParticipantsPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“requestId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“partyList”":[{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“PASSPORT”","“fspId”":"“1234”"},{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551234”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"}],currency:"USD"}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/parties/{Type}/{ID}":{parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /parties/<Type>/<ID> (or GET /parties/<Type>/<ID>/<SubId>) is used to lookup information regarding the requested Party, defined by <Type>, <ID> and optionally <SubId> (for example, GET /parties/MSISDN/123456789, or GET /parties/BUSINESS/shoecompany/employee1).",summary:"PartiesByTypeAndID",tags:["parties"],operationId:"PartiesByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /parties/<Type>/<ID> (or PUT /parties/<Type>/<ID>/<SubId>) is used to inform the client of a successful result of the Party information lookup.",summary:"PartiesByTypeAndID2",tags:["parties"],operationId:"PartiesByTypeAndID2",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/PartiesTypeIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{party:{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},merchantClassificationCode:"4321","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/parties/{Type}/{ID}/error":{put:{description:"If the server is unable to find Party information of the provided identity, or another processing error occurred, the error callback PUT /parties/<Type>/<ID>/error (or PUT /parties/<Type>/<ID>/<SubId>/error) is used.",summary:"PartiesErrorByTypeAndID",tags:["parties"],operationId:"PartiesErrorByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/parties/{Type}/{ID}/{SubId}":{parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/SubId"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /parties/<Type>/<ID> (or GET /parties/<Type>/<ID>/<SubId>) is used to lookup information regarding the requested Party, defined by <Type>, <ID> and optionally <SubId> (for example, GET /parties/MSISDN/123456789, or GET /parties/BUSINESS/shoecompany/employee1).",summary:"PartiesSubIdByTypeAndID",tags:["parties"],operationId:"PartiesSubIdByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /parties/<Type>/<ID> (or PUT /parties/<Type>/<ID>/<SubId>) is used to inform the client of a successful result of the Party information lookup.",summary:"PartiesSubIdByTypeAndID",tags:["parties"],operationId:"PartiesSubIdByTypeAndIDPut",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/PartiesTypeIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{party:{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},merchantClassificationCode:"4321","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/parties/{Type}/{ID}/{SubId}/error":{put:{description:"If the server is unable to find Party information of the provided identity, or another processing error occurred, the error callback PUT /parties/<Type>/<ID>/error (or PUT /parties/<Type>/<ID>/<SubId>/error) is used.",summary:"PartiesSubIdErrorByTypeAndID",tags:["parties"],operationId:"PartiesSubIdErrorByTypeAndID",produces:["application/json"],parameters:[{$ref:"#/parameters/Type"},{$ref:"#/parameters/ID"},{$ref:"#/parameters/SubId"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transactionRequests/{ID}/error":{put:{description:"If the server is unable to find or create a transaction request, or another processing error occurs, the error callback PUT /transactionRequests/<ID>/error is used. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>.",summary:"TransactionRequestsErrorByID",tags:["transactionRequests"],operationId:"TransactionRequestsErrorByID",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transactionRequests/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /transactionRequests/<ID> is used to get information regarding an earlier created or requested transaction request. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request.",summary:"TransactionRequestsByID",tags:["transactionRequests"],operationId:"TransactionRequestsByID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /transactionRequests/<ID> is used to inform the client of a requested or created transaction request. The <ID> in the URI should contain the transactionRequestId that was used for the creation of the transaction request, or the <ID> that was used in the GET /transactionRequests/<ID>.",summary:"TransactionRequestsByID",tags:["transactionRequests"],operationId:"TransactionRequestsByIDPut",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/TransactionRequestsIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“transactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“transactionRequestState”":"“RECEIVED”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transactionRequests":{post:{description:"The HTTP request POST /transactionRequests is used to request the creation of a transaction request for the provided financial transaction in the server.",summary:"TransactionRequests",tags:["transactionRequests"],operationId:"TransactionRequests",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/TransactionRequestsPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“transactionRequestId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“payee”":{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},merchantClassificationCode:"4321","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}},"“payer”":{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},"“amount”":{"“currency”":"“USD”","“amount”":"“123.45”"},"“transactionType”":{"“scenario”":"“DEPOSIT”","“subScenario”":"“locally defined sub-scenario”","“initiator”":"“PAYEE”","“initiatorType”":"“CONSUMER”","“refundInfo”":{"“originalTransactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“refundReason”":"“free text indicating reason for the refund”"},"“balanceOfPayments”":"“123”"},"“note”":"“Free-text memo”","“geoCode”":{"“latitude”":"“+45.4215”","“longitude”":"“+75.6972”"},"“authenticationType”":"“OTP”","“expiration”":"“2016-05-24T08:38:08.699-04:00”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/quotes/{ID}/error":{put:{description:"If the server is unable to find or create a quote, or some other processing error occurs, the error callback PUT /quotes/<ID>/error is used. The <ID> in the URI should contain the quoteId that was used for the creation of the quote, or the <ID> that was used in the GET /quotes/<ID>.",summary:"QuotesByIDAndError",tags:["quotes"],operationId:"QuotesByIDAndError",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/quotes/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /quotes/<ID> is used to get information regarding an earlier created or requested quote. The <ID> in the URI should contain the quoteId that was used for the creation of the quote.",summary:"QuotesByID",tags:["quotes"],operationId:"QuotesByID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /quotes/<ID> is used to inform the client of a requested or created quote. The <ID> in the URI should contain the quoteId that was used for the creation of the quote, or the <ID> that was used in the GET /quotes/<ID>GET /quotes/<ID>.",summary:"QuotesByID",tags:["quotes"],operationId:"QuotesByID1",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/QuotesIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“transferAmount”":{"“currency”":"“USD”","“amount”":"“124.45”"},"“payeeReceiveAmount”":{"“currency”":"“USD”","“amount”":"“123.45”"},payeeFspFee:{"“currency”":"“USD”","“amount”":"“1.45”"},payeeFspCommission:{"“currency”":"“USD”","“amount”":"0"},"“expiration”":"“2016-05-24T08:38:08.699-04:00”","“geoCode”":{"“latitude”":"“+45.4215”","“longitude”":"“+75.6972”"},"“ilpPacket”":"“AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA”",condition:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/quotes":{post:{description:"The HTTP request POST /quotes is used to request the creation of a quote for the provided financial transaction in the server.",summary:"Quotes",tags:["quotes"],operationId:"Quotes",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/QuotesPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“quoteId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“transactionId”":"“a8323bc6-c228-4df2-ae82-e5a997baf899”","“transactionRequestId”":"“a8323bc6-c228-4df2-ae82-e5a997baf890”","“payee”":{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“DRIVING_LICENSE”","“fspId”":"“1234”"},merchantClassificationCode:"4321","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}},"“payer”":{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“PASSPORT”","“fspId”":"“1234”"},merchantClassificationCode:"1234","“name”":"“Donald Trump”","“personalInfo”":{"“complexName”":{"“firstName”":"“Donald”","“middleName”":"“John”","“lastName”":"“Trump”"},"“dateOfBirth”":"“1946-06-14”"}},"“amountType”":"SEND","“amount”":{"“currency”":"“USD”","“amount”":"“123.45”"},"“fees”":{"“currency”":"“USD”","“amount”":"“1.25”"},"“transactionType”":{"“scenario”":"“DEPOSIT”","“subScenario”":"“locally defined sub-scenario”","“initiator”":"“PAYEE”","“initiatorType”":"“CONSUMER”","“refundInfo”":{"“originalTransactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“refundReason”":"“free text indicating reason for the refund”"},"“balanceOfPayments”":"“123”"},"“geoCode”":{"“latitude”":"“+45.4215”","“longitude”":"“+75.6972”"},"“note”":"“Free-text memo”","“expiration”":"“2016-05-24T08:38:08.699-04:00”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/authorizations":{post:{description:"The HTTP request POST /authorizations is used to request the Payer to enter the applicable credentials in the PISP system.",summary:"AuthorizationsByID",tags:["authorizations"],operationId:"AuthorizationsByIDPost",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/AuthorizationsPostRequest"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{authenticationType:"U2F",retriesLeft:1,amount:{currency:"USD",amount:"18"},transactionId:"2f169631-ef99-4cb1-96dc-91e8fc08f539",transactionRequestId:"02e28448-3c05-4059-b5f7-d518d0a2d8ea",quote:{transferAmount:{currency:"USD",amount:"18"},payeeReceiveAmount:{currency:"USD",amount:"0"},payeeFspFee:{currency:"USD",amount:"0"},payeeFspCommission:{currency:"USD",amount:"0"},expiration:"2020-05-17T15:28:54.250Z",geoCode:{latitude:"string",longitude:"string"},ilpPacket:"string",condition:"string",extensionList:{extension:[{key:"string",value:"string"}]}}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/authorizations/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /authorizations/<ID> is used to request the Payer to enter the applicable credentials in the Payee FSP system. The <ID> in the URI should contain the transactionRequestID, received from the POST /transactionRequests service earlier in the process. This request requires a query string to be included in the URI, with the following key-value pairs - authenticationType=<Type>, where <Type> value is a valid authentication type from the enumeration AuthenticationType. retriesLeft==<NrOfRetries>, where <NrOfRetries> is the number of retries left before the financial transaction is rejected. <NrOfRetries> must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected. amount=<Amount>, where <Amount> is the transaction amount that will be withdrawn from the Payer’s account. <Amount> must be expressed in the form of the data type Amount. currency=<Currency>, where <Currency> is the transaction currency for the amount that will be withdrawn from the Payer’s account. The <Currency> value must be expressed in the form of the enumeration CurrencyCode. An example URI containing all the required key-value pairs in the query string is the following - GET /authorization/3d492671-b7af-4f3f-88de-76169b1bdf88?authenticationType=OTP&retriesLeft=2&amount=102&currency=USD",summary:"AuthorizationsByID",tags:["authorizations"],operationId:"AuthorizationsByIDGet",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /authorizations/<ID> is used to inform the client of the result of a previously-requested authorization. The <ID> in the URI should contain the <ID> that was used in the GET /authorizations/<ID>.",summary:"AuthorizationsByID",tags:["authorizations"],operationId:"AuthorizationsByIDPut",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/AuthorizationsIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“authenticationInfo”":{"“authentication”":"“OTP”",authenticationValue:{pinValue:"1234",counter:1}},responseType:"ENTERED"}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/authorizations/{ID}/error":{put:{description:"If the server is unable to find the transaction request, or another processing error occurs, the error callback PUT /authorizations/<ID>/error is used. The <ID> in the URI should contain the <ID> that was used in the GET /authorizations/<ID>.",summary:"AuthorizationsByIDAndError",tags:["authorizations"],operationId:"AuthorizationsByIDAndError",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transfers/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /transfers/<ID> is used to get information regarding an earlier created or requested transfer. The <ID> in the URI should contain the transferId that was used for the creation of the transfer.",summary:"TransfersByIDGet",tags:["transfers"],operationId:"TransfersByIDGet",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /transfers/<ID> is used to inform the client of a requested or created transfer. The <ID> in the URI should contain the transferId that was used for the creation of the transfer, or the <ID> that was used in the GET /transfers/<ID>.",summary:"TransfersByIDPut",tags:["transfers"],operationId:"TransfersByIDPut",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/TransfersIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“fulfilment”":"WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8",completedTimestamp:"“2016-05-24T08:38:08.699-04:00”",transferState:"COMMITTED",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transfers/{ID}/error":{put:{description:"If the server is unable to find or create a transfer, or another processing error occurs, the error callback PUT /transfers/<ID>/error is used. The <ID> in the URI should contain the transferId that was used for the creation of the transfer, or the <ID> that was used in the GET /transfers/<ID>.",summary:"TransfersByIDAndError",tags:["transfers"],operationId:"TransfersByIDAndError",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transfers":{post:{description:"The HTTP request POST /transfers is used to request the creation of a transfer for the next ledger, and a financial transaction for the Payee FSP.",summary:"Transfers",tags:["transfers"],operationId:"transfers",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/TransfersPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“transferId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“payeeFsp”":"“1234”","“payerFsp”":"“5678”","“amount”":{"“currency”":"“USD”","“amount”":"“123.45”"},"“ilpPacket”":"“AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA”",condition:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA","“expiration”":"“2016-05-24T08:38:08.699-04:00”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transactions/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /transactions/<ID> is used to get transaction information regarding a financial transaction created earlier. The <ID> in the URI should contain the transactionId that was used for the creation of the quote, as the transaction is created as part of another process (the transfer process).",summary:"TransactionsByID",tags:["transactions"],operationId:"TransactionsByID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /transactions/<ID> is used to inform the client of a requested transaction. The <ID> in the URI should contain the <ID> that was used in the GET /transactions/<ID>.",summary:"TransactionsByID",tags:["transactions"],operationId:"TransactionsByID1",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/TransactionsIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{'“completedTimestamp"':"“2016-05-24T08:38:08.699-04:00”","“transactionState”":"“RECEIVED”","“code”":"“Test-Code”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/transactions/{ID}/error":{put:{description:"If the server is unable to find or create a transaction, or another processing error occurs, the error callback PUT /transactions/<ID>/error is used. The <ID> in the URI should contain the <ID> that was used in the GET /transactions/<ID>.",summary:"TransactionsErrorByID",tags:["transactions"],operationId:"TransactionsErrorByID",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkQuotes/{ID}/error":{put:{description:"If the server is unable to find or create a bulk quote, or another processing error occurs, the error callback PUT /bulkQuotes/<ID>/error is used. The <ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote, or the <ID> that was used in the GET /bulkQuotes/<ID>.",summary:"BulkQuotesErrorByID",tags:["bulkQuotes"],operationId:"BulkQuotesErrorByID",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkQuotes/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /bulkQuotes/<ID> is used to get information regarding an earlier created or requested bulk quote. The <ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote.",summary:"BulkQuotesByID",tags:["bulkQuotes"],operationId:"BulkQuotesByID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /bulkQuotes/<ID> is used to inform the client of a requested or created bulk quote. The <ID> in the URI should contain the bulkQuoteId that was used for the creation of the bulk quote, or the <ID> that was used in the GET /bulkQuotes/<ID>.",summary:"BulkQuotesByID",tags:["bulkQuotes"],operationId:"BulkQuotesByID1",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/BulkQuotesIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{"“individualQuoteResults”":[{quoteId:"b51ec534-ee48-4575-b6a9-ead2955b8069",payee:{partyIdInfo:{partyIdType:"“PERSONAL_ID”",partyIdentifier:"“16135551212”",partySubIdOrType:"“DRIVING_LICENSE”",fspId:"“1234”"},merchantClassificationCode:"4321",name:"“Justin Trudeau”",personalInfo:{complexName:{firstName:"“Justin”",middleName:"“Pierre”",lastName:"“Trudeau”"},dateOfBirth:"“1971-12-25”"}},receiveAmount:{currency:"USD",amount:"123.45"},payeeFspFee:{currency:"USD",amount:"1.45"},payeeFspCommission:{currency:"USD",amount:"1.45"},ilpPacket:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA",condition:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA",errorInformation:{errorCode:"5100",errorDescription:"This is an error description",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}},extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}],"“expiration”":"“2016-05-24T08:38:08.699-04:00”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkQuotes":{post:{description:"The HTTP request POST /bulkQuotes is used to request the creation of a bulk quote for the provided financial transactions in the server.",summary:"BulkQuotes",tags:["bulkQuotes"],operationId:"BulkQuotes",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/BulkQuotesPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“bulkQuoteId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“payer”":{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“PASSPORT”","“fspId”":"“1234”"},merchantClassificationCode:"1234","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}},"“geoCode”":{"“latitude”":"“+45.4215”","“longitude”":"“+75.6972”"},"“individualQuotes”":[{"“quoteId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“transactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“payee”":{partyIdInfo:{"“partyIdType”":"“PERSONAL_ID”","“partyIdentifier”":"“16135551212”","“partySubIdOrType”":"“PASSPORT”","“fspId”":"“1234”"},merchantClassificationCode:"1234","“name”":"“Justin Trudeau”","“personalInfo”":{"“complexName”":{"“firstName”":"“Justin”","“middleName”":"“Pierre”","“lastName”":"“Trudeau”"},"“dateOfBirth”":"“1971-12-25”"}},"“amountType”":"RECEIVE","“amount”":{"“currency”":"“USD”","“amount”":"“123.45”"},"“fees”":{"“currency”":"“USD”","“amount”":"“1.45”"},"“transactionType”":{"“scenario”":"“DEPOSIT”","“subScenario”":"“locally defined sub-scenario”","“initiator”":"“PAYEE”","“initiatorType”":"“CONSUMER”","“refundInfo”":{"“originalTransactionId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“refundReason”":"“free text indicating reason for the refund”"},"“balanceOfPayments”":"“123”"},"“note”":"“Note sent to Payee”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}],"“expiration”":"“2016-05-24T08:38:08.699-04:00”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkTransfers/{ID}":{parameters:[{$ref:"#/parameters/ID"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request GET /bulkTransfers/<ID> is used to get information regarding an earlier created or requested bulk transfer. The <ID> in the URI should contain the bulkTransferId that was used for the creation of the bulk transfer.",summary:"BulkTransferByID",tags:["bulkTransfers"],operationId:"BulkTransferByID",produces:["application/json"],parameters:[{$ref:"#/parameters/Accept"}],responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}},put:{description:"The callback PUT /bulkTransfers/<ID> is used to inform the client of a requested or created bulk transfer. The <ID> in the URI should contain the bulkTransferId that was used for the creation of the bulk transfer (POST /bulkTransfers), or the <ID> that was used in the GET /bulkTransfers/<ID>.",summary:"BulkTransfersByIDPut",tags:["bulkTransfers"],operationId:"BulkTransfersByIDPut",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/BulkTransfersIDPutResponse"}},{$ref:"#/parameters/Content-Length"}],"x-examples":{"application/json":{'“completedTimestamp"':"“2016-05-24T08:38:08.699-04:00”","“individualTransferResults”":[{"“transferId”":"“b51ec534-ee48-4575-b6a9-ead2955b8069”","“fulfilment”":"“WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8”","“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}},extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}},{"“transferId”":"“a8323bc6-c228-4df2-ae82-e5a997baf890”","“fulfilment”":"“WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8”","“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}},extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}],"“bulkTransferState”":"“COMPLETED”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkTransfers":{post:{description:"The HTTP request POST /bulkTransfers is used to request the creation of a bulk transfer in the server.",summary:"BulkTransfers",tags:["bulkTransfers"],operationId:"BulkTransfers",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/BulkTransfersPostRequest"}},{$ref:"#/parameters/Accept"},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{bulkTransferId:"b51ec534-ee48-4575-b6a9-ead2955b8069",bulkQuoteId:"b51ec534-ee48-4575-b6a9-ead2955b8069",payeeFsp:"1234",payerFsp:"5678",individualTransfers:[{transferId:"b51ec534-ee48-4575-b6a9-ead2955b8069",transferAmount:{currency:"USD",amount:"123.45"},ilpPacket:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA",condition:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}},{transferId:"b51ec534-ee48-4575-b6a9-ead2955b8069",transferAmount:{currency:"USD",amount:"1233.55"},ilpPacket:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA",condition:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}],expiration:"2016-05-24T08:38:08.699-04:00",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/bulkTransfers/{ID}/error":{put:{description:"If the server is unable to find or create a bulk transfer, or another processing error occurs, the error callback PUT /bulkTransfers/<ID>/error is used. The <ID> in the URI should contain the bulkTransferId that was used for the creation of the bulk transfer (POST /bulkTransfers), or the <ID> that was used in the GET /bulkTransfers/<ID>.",summary:"BulkTransfersErrorByID",tags:["bulkTransfers"],operationId:"BulkTransfersErrorByID",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ErrorInformationObject"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{"“errorInformation”":{"“errorCode”":"“5100”","“errorDescription”":"“This is an error description”",extensionList:{extension:[{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"},{"“key”":"“errorDescription”","“value”":"“This is a more detailed error description”"}]}}}},responses:{200:{$ref:"#/responses/Response200"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}}},definitions:{Amount:{title:"Amount",type:"string",pattern:"^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",description:"The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed."},AmountType:{title:"AmountType",type:"string",enum:["SEND","RECEIVE"],description:"Below are the allowed values for the enumeration AmountType - SEND Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. - RECEIVE Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive fees."},AuthenticationType:{title:"AuthenticationTypeEnum",type:"string",enum:["OTP","QRCODE","U2F"],description:"Below are the allowed values for the enumeration AuthenticationType. - OTP One-time password generated by the Payer FSP. - QRCODE QR code used as One Time Password. - U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key."},PinValue:{title:"PinValue",type:"string",pattern:"^\\d{3,10}$|^\\S{1,64}$",description:"Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type."},AuthorizationResponse:{title:"AuthorizationResponse",type:"string",enum:["ENTERED","REJECTED","RESEND"],description:"Below are the allowed values for the enumeration - ENTERED Consumer entered the authentication value. - REJECTED Consumer rejected the transaction. - RESEND Consumer requested to resend the authentication value."},BalanceOfPayments:{title:"BalanceOfPayments",type:"string",pattern:"^[1-9]\\d{2}$",description:"(BopCode) The API data type BopCode is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. https://www.imf.org/external/np/sta/bopcode/"},BinaryString:{type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",description:"The API data type BinaryString is a JSON String. The string is a base64url  encoding of a string of raw bytes, where padding (character ‘=’) is added at the end of the data if needed to ensure that the string is a multiple of 4 characters. The length restriction indicates the allowed number of characters."},BinaryString32:{type:"string",pattern:"^[A-Za-z0-9-_]{43}$",description:"The API data type BinaryString32 is a fixed size version of the API data type BinaryString, where the raw underlying data is always of 32 bytes. The data type BinaryString32 should not use a padding character as the size of the underlying data is fixed."},BulkTransferState:{title:"BulkTransactionStateEnum",type:"string",enum:["RECEIVED","PENDING","ACCEPTED","PROCESSING","COMPLETED","REJECTED"],description:"Below are the allowed values for the enumeration - RECEIVED Payee FSP has received the bulk transfer from the Payer FSP. - PENDING Payee FSP has validated the bulk transfer. - ACCEPTED Payee FSP has accepted to process the bulk transfer. - PROCESSING Payee FSP has started to transfer fund to the Payees. - COMPLETED Payee FSP has completed transfer of funds to the Payees. - REJECTED Payee FSP has rejected to process the bulk transfer."},Code:{title:"Code",type:"string",pattern:"^[0-9a-zA-Z]{4,32}$",description:"Any code/token returned by the Payee FSP (TokenCode Type)."},CorrelationId:{title:"CorrelationId",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘)."},Currency:{title:"CurrencyEnum",description:"The currency codes defined in ISO 4217 as three-letter alphabetic codes are used as the standard naming representation for currencies.",type:"string",minLength:3,maxLength:3,enum:["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD"]},Counter:{title:"Counter",$ref:"#/definitions/Integer",description:"Sequential counter used for cloning detection. Present only for U2F authentication."},Date:{title:"Date",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:'The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples - "1982-05-23", "1987-08-05”'},DateOfBirth:{title:"DateofBirth (type Date)",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:"Date of Birth of the Party."},DateTime:{title:"DateTime",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",description:'The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).'},ErrorCode:{title:"ErrorCode",type:"string",pattern:"^[1-9]\\d{3}$",description:"The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error."},ErrorDescription:{title:"ErrorDescription",type:"string",minLength:1,maxLength:128,description:"Error description string."},ExtensionKey:{title:"ExtensionKey",type:"string",minLength:1,maxLength:32,description:"Extension key."},ExtensionValue:{title:"ExtensionValue",type:"string",minLength:1,maxLength:128,description:"Extension value."},FirstName:{title:"FirstName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"First name of the Party (Name Type)."},FspId:{title:"FspId",type:"string",minLength:1,maxLength:32,description:"FSP identifier."},IlpCondition:{title:"IlpCondition",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Condition that must be attached to the transfer by the Payer."},IlpFulfilment:{title:"IlpFulfilment",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Fulfilment that must be attached to the transfer by the Payee."},IlpPacket:{title:"IlpPacket",type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",minLength:1,maxLength:32768,description:"Information for recipient (transport layer information)."},Integer:{title:"Integer",type:"string",pattern:"^[1-9]\\d*$",description:"The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."},LastName:{title:"LastName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Last name of the Party (Name Type)."},Latitude:{title:"Latitude",type:"string",pattern:"^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons."},Longitude:{title:"Longitude",type:"string",pattern:"^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons."},MerchantClassificationCode:{title:"MerchantClassificationCode",type:"string",pattern:"^[\\d]{1,4}$",description:"A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."},MiddleName:{title:"MiddleName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Middle name of the Party (Name Type)."},Name:{title:"Name",type:"string",pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:'The API data type Name is a JSON String, restricted by a regular expression to avoid characters which are generally not used in a name. Regular Expression - The regular expression for restricting the Name type is "^(?!\\s*$)[\\w .,\'-]{1,128}$". The restriction does not allow a string consisting of whitespace only, all Unicode characters are allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,) and space characters ( ). Note -  In some programming languages, Unicode support must be specifically enabled. For example, if Java is used the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.'},Note:{title:"Note",type:"string",minLength:1,maxLength:128,description:"Memo assigned to transaction"},OtpValue:{title:"OtpValue",type:"string",pattern:"^\\d{3,10}$",description:"The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."},PartyIdentifier:{title:"PartyIdentifier",type:"string",minLength:1,maxLength:128,description:"Identifier of the Party."},PartyIdType:{title:"PartyIdTypeEnum",type:"string",enum:["MSISDN","EMAIL","PERSONAL_ID","BUSINESS","DEVICE","ACCOUNT_ID","IBAN","ALIAS"],description:"Below are the allowed values for the enumeration - MSISDN An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the ITU-T E.164 standard. Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix. - EMAIL An email is used as reference to a participant. The format of the email should be according to the informational RFC 3696. - PERSONAL_ID A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element. - BUSINESS A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used. - DEVICE A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element. - ACCOUNT_ID A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP. - IBAN A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace. - ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."},PartyName:{title:"PartyName",type:"string",minLength:1,maxLength:128,description:"Name of the Party. Could be a real name or a nickname."},PartySubIdOrType:{title:"PartySubIdOrType",type:"string",minLength:1,maxLength:128,description:"Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."},PersonalIdentifierType:{title:"PersonalIdentifierType",type:"string",enum:["PASSPORT","NATIONAL_REGISTRATION","DRIVING_LICENSE","ALIEN_REGISTRATION","NATIONAL_ID_CARD","EMPLOYER_ID","TAX_ID_NUMBER","SENIOR_CITIZENS_CARD","MARRIAGE_CERTIFICATE","HEALTH_CARD","VOTERS_ID","UNITED_NATIONS","OTHER_ID"],description:"Below are the allowed values for the enumeration - PASSPORT A passport number is used as reference to a Party. - NATIONAL_REGISTRATION A national registration number is used as reference to a Party. - DRIVING_LICENSE A driving license is used as reference to a Party. - ALIEN_REGISTRATION An alien registration number is used as reference to a Party. - NATIONAL_ID_CARD A national ID card number is used as reference to a Party. - EMPLOYER_ID A tax identification number is used as reference to a Party. - TAX_ID_NUMBER A tax identification number is used as reference to a Party. - SENIOR_CITIZENS_CARD A senior citizens card number is used as reference to a Party. - MARRIAGE_CERTIFICATE A marriage certificate number is used as reference to a Party. - HEALTH_CARD A health card number is used as reference to a Party. - VOTERS_ID A voter’s identification number is used as reference to a Party. - UNITED_NATIONS An UN (United Nations) number is used as reference to a Party. - OTHER_ID Any other type of identification type number is used as reference to a Party."},QRCODE:{title:"QRCODE",type:"string",minLength:1,maxLength:64,description:"QR code used as One Time Password."},RefundReason:{title:"RefundReason",type:"string",minLength:1,maxLength:128,description:"Reason for the refund."},RetriesLeft:{title:"RetriesLeft",$ref:"#/definitions/Integer",description:"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},TokenCode:{title:"TokenCode",type:"string",pattern:"^[0-9a-zA-Z]{4,32}$",description:"The API data type TokenCode is a JSON String between 4 and 32 characters, consisting of digits or upper or lowercase characters from a to z."},TransactionInitiator:{title:"TransactionInitiatorEnum",type:"string",enum:["PAYER","PAYEE"],description:"Below are the allowed values for the enumeration - PAYER Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way. - PAYEE Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device."},TransactionInitiatorType:{title:"TransactionInitiatorTypeEnum",type:"string",enum:["CONSUMER","AGENT","BUSINESS","DEVICE"],description:"Below are the allowed values for the enumeration - CONSUMER Consumer is the initiator of the transaction. - AGENT Agent is the initiator of the transaction. - BUSINESS Business is the initiator of the transaction. - DEVICE Device is the initiator of the transaction."},TransactionRequestState:{title:"TransactionRequestStateEnum",type:"string",enum:["RECEIVED","PENDING","ACCEPTED","REJECTED"],description:"Below are the allowed values for the enumeration - RECEIVED Payer FSP has received the transaction from the Payee FSP. - PENDING Payer FSP has sent the transaction request to the Payer. - ACCEPTED Payer has approved the transaction. - REJECTED Payer has rejected the transaction."},TransactionScenario:{title:"TransactionScenarioEnum",type:"string",enum:["DEPOSIT","WITHDRAWAL","TRANSFER","PAYMENT","REFUND"],description:"Below are the allowed values for the enumeration - DEPOSIT Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User. - WITHDRAWAL Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer. - TRANSFER Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction. - PAYMENT Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on. - REFUND Used for performing a refund of transaction."},TransactionState:{title:"TransactionStateEnum",type:"string",enum:["RECEIVED","PENDING","COMPLETED","REJECTED"],description:"Below are the allowed values for the enumeration - RECEIVED Payee FSP has received the transaction from the Payer FSP. - PENDING Payee FSP has validated the transaction. - COMPLETED Payee FSP has successfully performed the transaction. - REJECTED Payee FSP has failed to perform the transaction."},TransactionSubScenario:{title:"TransactionSubScenario",type:"string",pattern:"^[A-Z_]{1,32}$",description:"Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type)."},TransferState:{title:"TransferStateEnum",type:"string",enum:["RECEIVED","RESERVED","COMMITTED","ABORTED"],description:"Below are the allowed values for the enumeration - RECEIVED Next ledger has received the transfer. - RESERVED Next ledger has reserved the transfer. - COMMITTED Next ledger has successfully performed the transfer. - ABORTED Next ledger has aborted the transfer due a rejection or failure to perform the transfer."},UndefinedEnum:{title:"UndefinedEnum",type:"string",pattern:"^[A-Z_]{1,32}$",description:"The API data type UndefinedEnum is a JSON String consisting of 1 to 32 uppercase characters including an underscore character (_)."},U2F:{title:"U2F",type:"string",minLength:1,maxLength:64,description:"U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key."},AuthenticationInfo:{title:"AuthenticationInfo",type:"object",description:"Data model for the complex type AuthenticationInfo",properties:{authentication:{$ref:"#/definitions/AuthenticationType",description:"Type of authentication."},authenticationValue:{$ref:"#/definitions/AuthenticationValue",description:"Authentication value."}},required:["authentication","authenticationValue"]},AuthenticationValue:{title:"AuthenticationValue",type:"object",description:"Data model for the complex type AuthenticationValue",properties:{pinValue:{$ref:"#/definitions/PinValue",description:"Authentication value."},counter:{$ref:"#/definitions/Counter",description:"Sequential counter used for cloning detection. Present only for U2F authentication."}},required:["pinValue"]},AuthorizationsPostRequest:{title:"AuthorizationsPostRequest",type:"object",description:"POST /authorizations Request object",properties:{authenticationType:{$ref:"#/definitions/AuthenticationType",description:"This value is a valid authentication type from the enumeration AuthenticationType(OTP or QR Code or U2F)."},retriesLeft:{$ref:"#/definitions/RetriesLeft",description:"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},amount:{$ref:"#/definitions/Money",description:"This is the transaction amount that will be withdrawn from the Payer’s account."},transactionId:{$ref:"#/definitions/CorrelationId",description:"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process."},transactionRequestId:{$ref:"#/definitions/CorrelationId",description:"The transactionRequestID, received from the POST /transactionRequests service earlier in the process."},quote:{$ref:"#/definitions/QuotesIDPutResponse",description:"Quotes object"}},required:["authenticationType","retriesLeft","amount","transactionId","transactionRequestId","quote"]},AuthorizationsIDPutResponse:{title:"AuthorizationsIDPutResponse",type:"object",description:"PUT /authorizations/{ID} object",properties:{authenticationInfo:{$ref:"#/definitions/AuthenticationInfo",description:"OTP or QR Code or U2F if entered, otherwise empty."},responseType:{$ref:"#/definitions/AuthorizationResponse",description:"Enum containing response information; if the customer entered the authentication value, rejected the transaction, or requested a resend of the authentication value."}},required:["responseType"]},BulkQuotesPostRequest:{title:"BulkQuotesPostRequest",type:"object",description:"POST /bulkQuotes object",properties:{bulkQuoteId:{$ref:"#/definitions/CorrelationId",description:"Common ID between the FSPs for the bulk quote object, decided by the Payer FSP. The ID should be reused for resends of the same bulk quote. A new ID should be generated for each new bulk quote."},payer:{$ref:"#/definitions/Party",description:"Information about the Payer in the proposed financial transaction."},geoCode:{$ref:"#/definitions/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},expiration:{$ref:"#/definitions/DateTime",description:"Expiration is optional to let the Payee FSP know when a quote no longer needs to be returned."},individualQuotes:{type:"array",minItems:1,maxItems:1e3,items:{$ref:"#/definitions/IndividualQuote"},description:"List of quotes elements."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["bulkQuoteId","payer","individualQuotes"]},BulkQuotesIDPutResponse:{title:"BulkQuotesIDPutResponse",type:"object",description:"PUT /bulkQuotes/{ID} object",properties:{individualQuoteResults:{type:"array",maxItems:1e3,items:{$ref:"#/definitions/IndividualQuoteResult"},description:"Fees for each individual transaction, if any of them are charged per transaction."},expiration:{$ref:"#/definitions/DateTime",description:"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction request."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["expiration"]},BulkTransfersPostRequest:{title:"BulkTransfersPostRequest",type:"object",description:"POST /bulkTransfers object",properties:{bulkTransferId:{$ref:"#/definitions/CorrelationId",description:"Common ID between the FSPs and the optional Switch for the bulk transfer object, decided by the Payer FSP. The ID should be reused for resends of the same bulk transfer. A new ID should be generated for each new bulk transfer."},bulkQuoteId:{$ref:"#/definitions/CorrelationId",description:"ID of the related bulk quote."},payerFsp:{$ref:"#/definitions/FspId",description:"Payer FSP identifier."},payeeFsp:{$ref:"#/definitions/FspId",description:"Payee FSP identifier."},individualTransfers:{type:"array",minItems:1,maxItems:1e3,items:{$ref:"#/definitions/IndividualTransfer"},description:"List of IndividualTransfer elements."},expiration:{$ref:"#/definitions/DateTime",description:"Expiration time of the transfers."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["bulkTransferId","bulkQuoteId","payerFsp","payeeFsp","individualTransfers","expiration"]},BulkTransfersIDPutResponse:{title:"BulkTransfersIDPutResponse",type:"object",description:"PUT /bulkTransfers/{ID} object",properties:{completedTimestamp:{$ref:"#/definitions/DateTime",description:"Time and date when the bulk transaction was completed."},individualTransferResults:{type:"array",maxItems:1e3,items:{$ref:"#/definitions/IndividualTransferResult"},description:"List of IndividualTransferResult elements."},bulkTransferState:{$ref:"#/definitions/BulkTransferState",description:"The state of the bulk transfer."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["bulkTransferState"]},ErrorInformation:{title:"ErrorInformation",type:"object",description:"Data model for the complex type ErrorInformation.",properties:{errorCode:{$ref:"#/definitions/ErrorCode",description:"Specific error number."},errorDescription:{$ref:"#/definitions/ErrorDescription",description:"Error description string."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional list of extensions, specific to deployment."}},required:["errorCode","errorDescription"]},ErrorInformationObject:{title:"ErrorInformationObject",type:"object",description:"Data model for the complex type object that contains ErrorInformation.",properties:{errorInformation:{$ref:"#/definitions/ErrorInformation"}},required:["errorInformation"]},ErrorInformationResponse:{title:"ErrorInformationResponse",type:"object",description:"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",properties:{errorInformation:{$ref:"#/definitions/ErrorInformation"}}},Extension:{title:"Extension",type:"object",description:"Data model for the complex type Extension",properties:{key:{$ref:"#/definitions/ExtensionKey",description:"Extension key."},value:{$ref:"#/definitions/ExtensionValue",description:"Extension value."}},required:["key","value"]},ExtensionList:{title:"ExtensionList",type:"object",description:"Data model for the complex type ExtensionList",properties:{extension:{type:"array",items:{$ref:"#/definitions/Extension"},minItems:1,maxItems:16,description:"Number of Extension elements"}},required:["extension"]},GeoCode:{title:"GeoCode",type:"object",description:"Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",properties:{latitude:{$ref:"#/definitions/Latitude",description:"Latitude of the Party."},longitude:{$ref:"#/definitions/Longitude",description:"Longitude of the   Party."}},required:["latitude","longitude"]},IndividualQuote:{title:"IndividualQuote",type:"object",description:"Data model for the complex type IndividualQuote.",properties:{quoteId:{$ref:"#/definitions/CorrelationId",description:"Identifies quote message."},transactionId:{$ref:"#/definitions/CorrelationId",description:"Identifies transaction message."},payee:{$ref:"#/definitions/Party",description:"Information about the Payee in the proposed financial transaction."},amountType:{$ref:"#/definitions/AmountType",description:"SEND for sendAmount, RECEIVE for receiveAmount."},amount:{$ref:"#/definitions/Money",description:"Depending on amountType - If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."},fees:{$ref:"#/definitions/Money",description:"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},transactionType:{$ref:"#/definitions/TransactionType",description:"Type of transaction that the quote is requested for."},note:{$ref:"#/definitions/Note",description:"Memo that will be attached to the transaction."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId","transactionId","payee","amountType","amount","transactionType"]},IndividualQuoteResult:{title:"IndividualQuoteResult",type:"object",description:"Data model for the complex type IndividualQuoteResult.",properties:{quoteId:{$ref:"#/definitions/CorrelationId",description:"Identifies quote message."},payee:{$ref:"#/definitions/Party",description:"Information about the Payee in the proposed financial transaction."},transferAmount:{$ref:"#/definitions/Money",description:"The amount of Money that the Payer FSP should transfer to the Payee FSP."},payeeReceiveAmount:{$ref:"#/definitions/Money",description:"Amount that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees."},payeeFspFee:{$ref:"#/definitions/Money",description:"Payee FSP’s part of the transaction fee."},payeeFspCommission:{$ref:"#/definitions/Money",description:"Transaction commission from the Payee FSP"},ilpPacket:{$ref:"#/definitions/IlpPacket",description:"The ILP Packet that must be attached to the transfer by the Payer."},condition:{$ref:"#/definitions/IlpCondition",description:"The condition that must be attached to the transfer by the Payer."},errorInformation:{$ref:"#/definitions/ErrorInformation",description:"Error code, category description. Note - payee, transferAmount, payeeReceiveAmount, payeeFspFee, payeeFspCommission, ilpPacket, and condition should not be set if errorInformation is set."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId"]},IndividualTransfer:{title:"IndividualTransfer",type:"object",description:"Data model for the complex type IndividualTransfer.",properties:{transferId:{$ref:"#/definitions/CorrelationId",description:"Identifies messages related to the same /transfers sequence."},transferAmount:{$ref:"#/definitions/Money",description:"Transaction amount to be sent."},ilpPacket:{$ref:"#/definitions/IlpPacket",description:"ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data."},condition:{$ref:"#/definitions/IlpCondition",description:"Condition that must be fulfilled to commit the transfer."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId","transferAmount","ilpPacket","condition"]},IndividualTransferResult:{title:"IndividualTransferResult",type:"object",description:"Data model for the complex type IndividualTransferResult.",properties:{transferId:{$ref:"#/definitions/CorrelationId",description:"Identifies messages related to the same /transfers sequence."},fulfilment:{$ref:"#/definitions/IlpFulfilment",description:"Fulfilment of the condition specified with the transaction. Note - Either fulfilment or errorInformation should be set, not both."},errorInformation:{$ref:"#/definitions/ErrorInformation",description:"If transfer is REJECTED, error information may be provided. Note - Either fulfilment or errorInformation should be set, not both."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId"]},Money:{title:"Money",type:"object",description:"Data model for the complex type Money.",properties:{currency:{$ref:"#/definitions/Currency",description:"Currency of the amount."},amount:{$ref:"#/definitions/Amount",description:"Amount of Money."}},required:["currency","amount"]},ParticipantsTypeIDSubIDPostRequest:{title:"ParticipantsTypeIDSubIDPostRequest",type:"object",description:"POST /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID} object",properties:{fspId:{$ref:"#/definitions/FspId",description:"FSP Identifier that the Party belongs to."},currency:{$ref:"#/definitions/Currency",description:"Indicate that the provided Currency is supported by the Party."}},required:["fspId"]},ParticipantsTypeIDPutResponse:{title:"ParticipantsTypeIDPutResponse",type:"object",description:"PUT /participants/{Type}/{ID}/{SubId}, /participants/{Type}/{ID} object",properties:{fspId:{$ref:"#/definitions/FspId",description:"FSP Identifier that the Party belongs to."}}},ParticipantsIDPutResponse:{title:"ParticipantsIDPutResponse",type:"object",description:"PUT /participants/{ID} object",properties:{partyList:{type:"array",items:{$ref:"#/definitions/PartyResult"},minItems:1,maxItems:1e4,description:"List of PartyResult elements that were either created or failed to be created."},currency:{$ref:"#/definitions/Currency",description:"Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo."}},required:["partyList"]},ParticipantsPostRequest:{title:"ParticipantsPostRequest",type:"object",description:"POST /participants object",properties:{requestId:{$ref:"#/definitions/CorrelationId",description:"The ID of the request, decided by the client. Used for identification of the callback from the server."},partyList:{type:"array",items:{$ref:"#/definitions/PartyIdInfo"},minItems:1,maxItems:1e4,description:"List of PartyIdInfo elements that the client would like to update or create FSP information about."},currency:{$ref:"#/definitions/Currency",description:"Indicate that the provided Currency is supported by each PartyIdInfo in the list."}},required:["requestId","partyList"]},Party:{title:"Party",type:"object",description:"Data model for the complex type Party.",properties:{partyIdInfo:{$ref:"#/definitions/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},merchantClassificationCode:{$ref:"#/definitions/MerchantClassificationCode",description:"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments."},name:{$ref:"#/definitions/PartyName",description:"Display name of the Party, could be a real name or a nick name."},personalInfo:{$ref:"#/definitions/PartyPersonalInfo",description:"Personal information used to verify identity of Party such as first, middle, last name and date of birth."}},required:["partyIdInfo"]},PartyComplexName:{title:"PartyComplexName",type:"object",description:"Data model for the complex type PartyComplexName.",properties:{firstName:{$ref:"#/definitions/FirstName",description:"Party’s first name."},middleName:{$ref:"#/definitions/MiddleName",description:"Party’s middle name."},lastName:{$ref:"#/definitions/LastName",description:"Party’s last name."}}},PartyIdInfo:{title:"PartyIdInfo",type:"object",description:"Data model for the complex type PartyIdInfo.",properties:{partyIdType:{$ref:"#/definitions/PartyIdType",description:"Type of the identifier."},partyIdentifier:{$ref:"#/definitions/PartyIdentifier",description:"An identifier for the Party."},partySubIdOrType:{$ref:"#/definitions/PartySubIdOrType",description:"A sub-identifier or sub-type for the Party."},fspId:{$ref:"#/definitions/FspId",description:"FSP ID (if known)"}},required:["partyIdType","partyIdentifier"]},PartiesTypeIDPutResponse:{title:"PartiesTypeIDPutResponse",type:"object",description:"PUT /parties/{Type}/{ID} object",properties:{party:{$ref:"#/definitions/Party",description:"Information regarding the requested Party."}},required:["party"]},PartyPersonalInfo:{title:"PartyPersonalInfo",type:"object",description:"Data model for the complex type PartyPersonalInfo.",properties:{complexName:{$ref:"#/definitions/PartyComplexName",description:"First, middle and last name for the Party."},dateOfBirth:{$ref:"#/definitions/DateOfBirth",description:"Date of birth for the Party."}}},PartyResult:{title:"PartyResult",type:"object",description:"Data model for the complex type PartyResult.",properties:{partyId:{$ref:"#/definitions/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},errorInformation:{$ref:"#/definitions/ErrorInformation",description:"If the Party failed to be added, error information should be provided. Otherwise, this parameter should be empty to indicate success."}},required:["partyId"]},QuotesPostRequest:{title:"QuotesPostRequest",type:"object",description:"POST /quotes object",properties:{quoteId:{$ref:"#/definitions/CorrelationId",description:"Common ID between the FSPs for the quote object, decided by the Payer FSP. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction."},transactionId:{$ref:"#/definitions/CorrelationId",description:"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction."},transactionRequestId:{$ref:"#/definitions/CorrelationId",description:"Identifies an optional previously-sent transaction request."},payee:{$ref:"#/definitions/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{$ref:"#/definitions/Party",description:"Information about the Payer in the proposed financial transaction."},amountType:{$ref:"#/definitions/AmountType",description:"SEND for send amount, RECEIVE for receive amount."},amount:{$ref:"#/definitions/Money",description:"Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."},fees:{$ref:"#/definitions/Money",description:"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},transactionType:{$ref:"#/definitions/TransactionType",description:"Type of transaction for which the quote is requested."},geoCode:{$ref:"#/definitions/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},note:{$ref:"#/definitions/Note",description:"A memo that will be attached to the transaction."},expiration:{$ref:"#/definitions/DateTime",description:"Expiration is optional. It can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, and Merchant to know that their request has a time limit."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId","transactionId","payee","payer","amountType","amount","transactionType"]},QuotesIDPutResponse:{title:"QuotesIDPutResponse",type:"object",description:"PUT /quotes/{ID} object",properties:{transferAmount:{$ref:"#/definitions/Money",description:"The amount of Money that the Payer FSP should transfer to the Payee FSP."},payeeReceiveAmount:{$ref:"#/definitions/Money",description:"The amount of Money that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees."},payeeFspFee:{$ref:"#/definitions/Money",description:"Payee FSP’s part of the transaction fee."},payeeFspCommission:{$ref:"#/definitions/Money",description:"Transaction commission from the Payee FSP."},expiration:{$ref:"#/definitions/DateTime",description:"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction."},geoCode:{$ref:"#/definitions/GeoCode",description:"Longitude and Latitude of the Payee. Can be used to detect fraud."},ilpPacket:{$ref:"#/definitions/IlpPacket",description:"The ILP Packet that must be attached to the transfer by the Payer."},condition:{$ref:"#/definitions/IlpCondition",description:"The condition that must be attached to the transfer by the Payer."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferAmount","expiration","ilpPacket","condition"]},Refund:{title:"Refund",type:"object",description:"Data model for the complex type Refund.",properties:{originalTransactionId:{$ref:"#/definitions/CorrelationId",description:"Reference to the original transaction ID that is requested to be refunded."},refundReason:{$ref:"#/definitions/RefundReason",description:"Free text indicating the reason for the refund."}},required:["originalTransactionId"]},Transaction:{title:"Transaction",type:"object",description:"Data model for the complex type Transaction. The Transaction type is used to carry end-to-end data between the Payer FSP and the Payee FSP in the ILP Packet. Both the transactionId and the quoteId in the data model are decided by the Payer FSP in the POST /quotes.",properties:{transactionId:{$ref:"#/definitions/CorrelationId",description:"ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote."},quoteId:{$ref:"#/definitions/CorrelationId",description:"ID of the quote, the ID is decided by the Payer FSP during the creation of the quote."},payee:{$ref:"#/definitions/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{$ref:"#/definitions/Party",description:"Information about the Payer in the proposed financial transaction."},amount:{$ref:"#/definitions/Money",description:"Transaction amount to be sent."},transactionType:{$ref:"#/definitions/TransactionType",description:"Type of the transaction."},note:{$ref:"#/definitions/Note",description:"Memo associated to the transaction, intended to the Payee."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionId","quoteId","payee","payer","amount","transactionType"]},TransactionRequestsIDPutResponse:{title:"TransactionRequestsIDPutResponse",type:"object",description:"PUT /transactionRequests/{ID} object",properties:{transactionId:{$ref:"#/definitions/CorrelationId",description:"Identifies a related transaction (if a transaction has been created)."},transactionRequestState:{$ref:"#/definitions/TransactionRequestState",description:"State of the transaction request."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionRequestState"]},TransactionsIDPutResponse:{title:"TransactionsIDPutResponse",type:"object",description:"PUT /transactions/{ID} object",properties:{completedTimestamp:{$ref:"#/definitions/DateTime",description:"Time and date when the transaction was completed."},transactionState:{$ref:"#/definitions/TransactionState",description:"State of the transaction."},code:{$ref:"#/definitions/Code",description:"Optional redemption information provided to Payer after transaction has been completed."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionState"]},TransactionType:{title:"TransactionType",type:"object",description:"Data model for the complex type TransactionType.",properties:{scenario:{$ref:"#/definitions/TransactionScenario",description:"Deposit, withdrawal, refund, …"},subScenario:{$ref:"#/definitions/TransactionSubScenario",description:"Possible sub-scenario, defined locally within the scheme."},initiator:{$ref:"#/definitions/TransactionInitiator",description:"Who is initiating the transaction - Payer or Payee"},initiatorType:{$ref:"#/definitions/TransactionInitiatorType",description:"Consumer, agent, business, …"},refundInfo:{$ref:"#/definitions/Refund",description:"Extra information specific to a refund scenario. Should only be populated if scenario is REFUND"},balanceOfPayments:{$ref:"#/definitions/BalanceOfPayments",description:"Balance of Payments code."}},required:["scenario","initiator","initiatorType"]},TransfersPostRequest:{title:"TransfersPostRequest",type:"object",description:"POST /transfers Request object",properties:{transferId:{$ref:"#/definitions/CorrelationId",description:"The common ID between the FSPs and the optional Switch for the transfer object, decided by the Payer FSP. The ID should be reused for resends of the same transfer. A new ID should be generated for each new transfer."},payeeFsp:{$ref:"#/definitions/FspId",description:"Payee FSP in the proposed financial transaction."},payerFsp:{$ref:"#/definitions/FspId",description:"Payer FSP in the proposed financial transaction."},amount:{$ref:"#/definitions/Money",description:"The transfer amount to be sent."},ilpPacket:{$ref:"#/definitions/IlpPacket",description:"The ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data."},condition:{$ref:"#/definitions/IlpCondition",description:"The condition that must be fulfilled to commit the transfer."},expiration:{$ref:"#/definitions/DateTime",description:"Expiration can be set to get a quick failure expiration of the transfer. The transfer should be rolled back if no fulfilment is delivered before this time."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId","payeeFsp","payerFsp","amount","ilpPacket","condition","expiration"]},TransactionRequestsPostRequest:{title:"TransactionRequestsPostRequest",type:"object",description:"POST /transactionRequests object",properties:{transactionRequestId:{$ref:"#/definitions/CorrelationId",description:"Common ID between the FSPs for the transaction request object, decided by the Payee FSP. The ID should be reused for resends of the same transaction request. A new ID should be generated for each new transaction request."},payee:{$ref:"#/definitions/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{$ref:"#/definitions/PartyIdInfo",description:"Information about the Payer type, id, sub-type/id, FSP Id in the proposed financial transaction."},amount:{$ref:"#/definitions/Money",description:"Requested amount to be transferred from the Payer to Payee."},transactionType:{$ref:"#/definitions/TransactionType",description:"Type of transaction."},note:{$ref:"#/definitions/Note",description:"Reason for the transaction request, intended to the Payer."},geoCode:{$ref:"#/definitions/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},authenticationType:{$ref:"#/definitions/AuthenticationType",description:"OTP or QR Code or U2F, otherwise empty."},expiration:{$ref:"#/definitions/DateTime",description:"Can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, Merchant to know that their request has a time limit."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionRequestId","payee","payer","amount","transactionType"]},TransfersIDPutResponse:{title:"TransfersIDPutResponse",type:"object",description:"PUT /transfers/{ID} object",properties:{fulfilment:{$ref:"#/definitions/IlpFulfilment",description:"Fulfilment of the condition specified with the transaction. Mandatory if transfer has completed successfully."},completedTimestamp:{$ref:"#/definitions/DateTime",description:"Time and date when the transaction was completed."},transferState:{$ref:"#/definitions/TransferState",description:"State of the transfer."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferState"]}},responses:{Response200:{description:"OK"},Response202:{description:"Accepted"},ErrorResponse400:{description:"Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse401:{description:"Unauthorized - The request requires authentication in order to be processed.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse403:{description:"Forbidden - The request was denied and will be denied in the future.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse404:{description:"Not Found - The resource specified in the URI was not found.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse405:{description:"Method Not Allowed - An unsupported HTTP method for the request was used.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse406:{description:"Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse501:{description:"Not Implemented - The server does not support the requested service. The client should not retry.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse503:{description:"Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}}},parameters:{Accept:{name:"Accept",in:"header",required:!0,type:"string",description:"The Accept header field indicates the version of the API the client would like the server to use."},"Content-Length":{name:"Content-Length",in:"header",required:!1,type:"integer",description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)"},"Content-Type":{name:"Content-Type",in:"header",type:"string",required:!0,description:"The Content-Type header indicates the specific version of the API used to send the payload body."},Date:{name:"Date",in:"header",type:"string",required:!0,description:"The Date header field indicates the date when the request was sent."},"X-Forwarded-For":{name:"X-Forwarded-For",in:"header",type:"string",required:!1,description:"The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For."},"FSPIOP-Source":{name:"FSPIOP-Source",in:"header",type:"string",required:!0,description:"The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature)."},"FSPIOP-Destination":{name:"FSPIOP-Destination",in:"header",type:"string",required:!1,description:"The FSPIOP-Destination header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes."},"FSPIOP-Encryption":{name:"FSPIOP-Encryption",in:"header",type:"string",required:!1,description:"The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request."},"FSPIOP-Signature":{name:"FSPIOP-Signature",in:"header",type:"string",required:!1,description:"The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature."},"FSPIOP-URI":{name:"FSPIOP-URI",in:"header",type:"string",required:!1,description:"The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document."},"FSPIOP-HTTP-Method":{name:"FSPIOP-HTTP-Method",in:"header",type:"string",required:!1,description:"The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document."},ID:{name:"ID",in:"path",required:!0,type:"string"},Type:{name:"Type",in:"path",required:!0,type:"string"},SubId:{name:"SubId",in:"path",required:!0,type:"string"}}}];e.exports=r.length<=1?r[0]:r},396:function(e,t){const r=[{openapi:"3.0.2",info:{version:"1.1",title:"Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)",description:"Based on [API Definition version 1.0](https://github.com/mojaloop/mojaloop-specification/blob/develop/API%20Definition%20v1.0.pdf).\n\n**Note:** The API supports a maximum size of 65536 bytes (64 Kilobytes) in the HTTP header.",license:{name:"Open API for FSP Interoperability (FSPIOP) (Implementation Friendly Version)",url:"https://github.com/mojaloop/mojaloop-specification/blob/develop/LICENSE.md"}},servers:[{url:"{protocol}://hostname:<port>/switch/",variables:{protocol:{enum:["http","https"],default:"https"}}}],paths:{"/participants/{Type}/{ID}":{parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],post:{description:"The HTTP request `POST /participants/{Type}/{ID}` (or `POST /participants/{Type}/{ID}/{SubId}`) is used to create information in the server regarding the provided identity, defined by `{Type}`, `{ID}`, and optionally `{SubId}` (for example, `POST /participants/MSISDN/123456789` or `POST /participants/BUSINESS/shoecompany/employee1`).",summary:"Create participant information",tags:["participants"],operationId:"ParticipantsByIDAndType",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Participant information to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsTypeIDSubIDPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},get:{description:"The HTTP request `GET /participants/{Type}/{ID}` (or `GET /participants/{Type}/{ID}/{SubId}`) is used to find out in which FSP the requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}`, is located (for example, `GET /participants/MSISDN/123456789`, or `GET /participants/BUSINESS/shoecompany/employee1`). This HTTP request should support a query string for filtering of currency. To use filtering of currency, the HTTP request `GET /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.",summary:"Look up participant information",tags:["participants"],operationId:"ParticipantsByTypeAndID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /participants/{Type}/{ID}` (or `PUT /participants/{Type}/{ID}/{SubId}`) is used to inform the client of a successful result of the lookup, creation, or deletion of the FSP information related to the Party. If the FSP information is deleted, the fspId element should be empty; otherwise the element should include the FSP information for the Party.",summary:"Return participant information",tags:["participants"],operationId:"ParticipantsByTypeAndID3",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Participant information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsTypeIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},delete:{description:"The HTTP request `DELETE /participants/{Type}/{ID}` (or `DELETE /participants/{Type}/{ID}/{SubId}`) is used to delete information in the server regarding the provided identity, defined by `{Type}` and `{ID}`) (for example, `DELETE /participants/MSISDN/123456789`), and optionally `{SubId}`. This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request `DELETE /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.\n\n**Note:** The Account Lookup System should verify that it is the Party’s current FSP that is deleting the FSP information.",summary:"Delete participant information",tags:["participants"],operationId:"ParticipantsByTypeAndID2",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants/{Type}/{ID}/error":{put:{description:"If the server is unable to find, create or delete the associated FSP of the provided identity, or another processing error occurred, the error callback `PUT /participants/{Type}/{ID}/error` (or `PUT /participants/{Type}/{ID}/{SubId}/error`) is used.",summary:"Return participant information error",tags:["participants"],operationId:"ParticipantsErrorByTypeAndID",parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants/{Type}/{ID}/{SubId}":{parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/SubId"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],post:{description:"The HTTP request `POST /participants/{Type}/{ID}` (or `POST /participants/{Type}/{ID}/{SubId}`) is used to create information in the server regarding the provided identity, defined by `{Type}`, `{ID}`, and optionally `{SubId}` (for example, `POST /participants/MSISDN/123456789` or `POST /participants/BUSINESS/shoecompany/employee1`).",summary:"Create participant information",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndIDPost",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Participant information to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsTypeIDSubIDPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},get:{description:"The HTTP request `GET /participants/{Type}/{ID}` (or `GET /participants/{Type}/{ID}/{SubId}`) is used to find out in which FSP the requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}`, is located (for example, `GET /participants/MSISDN/123456789`, or `GET /participants/BUSINESS/shoecompany/employee1`). This HTTP request should support a query string for filtering of currency. To use filtering of currency, the HTTP request `GET /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.",summary:"Look up participant information",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /participants/{Type}/{ID}` (or `PUT /participants/{Type}/{ID}/{SubId}`) is used to inform the client of a successful result of the lookup, creation, or deletion of the FSP information related to the Party. If the FSP information is deleted, the fspId element should be empty; otherwise the element should include the FSP information for the Party.",summary:"Return participant information",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID3",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Participant information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsTypeIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},delete:{description:"The HTTP request `DELETE /participants/{Type}/{ID}` (or `DELETE /participants/{Type}/{ID}/{SubId}`) is used to delete information in the server regarding the provided identity, defined by `{Type}` and `{ID}`) (for example, `DELETE /participants/MSISDN/123456789`), and optionally `{SubId}`. This HTTP request should support a query string to delete FSP information regarding a specific currency only. To delete a specific currency only, the HTTP request `DELETE /participants/{Type}/{ID}?currency=XYZ` should be used, where `XYZ` is the requested currency.\n\n**Note:** The Account Lookup System should verify that it is the Party’s current FSP that is deleting the FSP information.",summary:"Delete participant information",tags:["participants"],operationId:"ParticipantsSubIdByTypeAndID2",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants/{Type}/{ID}/{SubId}/error":{put:{description:"If the server is unable to find, create or delete the associated FSP of the provided identity, or another processing error occurred, the error callback `PUT /participants/{Type}/{ID}/error` (or `PUT /participants/{Type}/{ID}/{SubId}/error`) is used.",summary:"Return participant information error",tags:["participants"],operationId:"ParticipantsSubIdErrorByTypeAndID",parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/SubId"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants":{post:{description:"The HTTP request `POST /participants` is used to create information in the server regarding the provided list of identities. This request should be used for bulk creation of FSP information for more than one Party. The optional currency parameter should indicate that each provided Party supports the currency.",summary:"Create bulk participant information",tags:["participants"],operationId:"Participants1",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Participant information to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants/{ID}":{put:{description:"The callback `PUT /participants/{ID}` is used to inform the client of the result of the creation of the provided list of identities.",summary:"Return bulk participant information",tags:["participants"],operationId:"putParticipantsByID",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Participant information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ParticipantsIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/participants/{ID}/error":{put:{description:"If there is an error during FSP information creation in the server, the error callback `PUT /participants/{ID}/error` is used. The `{ID}` in the URI should contain the requestId that was used for the creation of the participant information.",summary:"Return bulk participant information error",tags:["participants"],operationId:"ParticipantsByIDAndError",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/parties/{Type}/{ID}":{parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /parties/{Type}/{ID}` (or `GET /parties/{Type}/{ID}/{SubId}`) is used to look up information regarding the requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}` (for example, `GET /parties/MSISDN/123456789`, or `GET /parties/BUSINESS/shoecompany/employee1`).",summary:"Look up party information",tags:["parties"],operationId:"PartiesByTypeAndID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /parties/{Type}/{ID}` (or `PUT /parties/{Type}/{ID}/{SubId}`) is used to inform the client of a successful result of the Party information lookup.",summary:"Return party information",tags:["parties"],operationId:"PartiesByTypeAndID2",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Party information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/PartiesTypeIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/parties/{Type}/{ID}/error":{put:{description:"If the server is unable to find Party information of the provided identity, or another processing error occurred, the error callback `PUT /parties/{Type}/{ID}/error` (or `PUT /parties/{Type}/{ID}/{SubI}/error`) is used.",summary:"Return party information error",tags:["parties"],operationId:"PartiesErrorByTypeAndID",parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/parties/{Type}/{ID}/{SubId}":{parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/SubId"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /parties/{Type}/{ID}` (or `GET /parties/{Type}/{ID}/{SubId}`) is used to look up information regarding the requested Party, defined by `{Type}`, `{ID}` and optionally `{SubId}` (for example, `GET /parties/MSISDN/123456789`, or `GET /parties/BUSINESS/shoecompany/employee1`).",summary:"Look up party information",tags:["parties"],operationId:"PartiesSubIdByTypeAndID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /parties/{Type}/{ID}` (or `PUT /parties/{Type}/{ID}/{SubId}`) is used to inform the client of a successful result of the Party information lookup.",summary:"Return party information",tags:["parties"],operationId:"PartiesSubIdByTypeAndIDPut",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Party information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/PartiesTypeIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/parties/{Type}/{ID}/{SubId}/error":{put:{description:"If the server is unable to find Party information of the provided identity, or another processing error occurred, the error callback `PUT /parties/{Type}/{ID}/error` (or `PUT /parties/{Type}/{ID}/{SubId}/error`) is used.",summary:"Return party information error",tags:["parties"],operationId:"PartiesSubIdErrorByTypeAndID",parameters:[{$ref:"#/components/parameters/Type"},{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/SubId"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transactionRequests":{post:{description:"The HTTP request `POST /transactionRequests` is used to request the creation of a transaction request for the provided financial transaction in the server.",summary:"Perform transaction request",tags:["transactionRequests"],operationId:"TransactionRequests",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Transaction request to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/TransactionRequestsPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transactionRequests/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /transactionRequests/{ID}` is used to get information regarding a transaction request created or requested earlier. The `{ID}` in the URI should contain the `transactionRequestId` that was used for the creation of the transaction request.",summary:"Retrieve transaction request information",tags:["transactionRequests"],operationId:"TransactionRequestsByID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /transactionRequests/{ID}` is used to inform the client of a requested or created transaction request. The `{ID}` in the URI should contain the `transactionRequestId` that was used for the creation of the transaction request, or the `{ID}` that was used in the `GET /transactionRequests/{ID}`.",summary:"Return transaction request information",tags:["transactionRequests"],operationId:"TransactionRequestsByIDPut",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Transaction request information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/TransactionRequestsIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transactionRequests/{ID}/error":{put:{description:"If the server is unable to find or create a transaction request, or another processing error occurs, the error callback `PUT /transactionRequests/{ID}/error` is used. The `{ID}` in the URI should contain the `transactionRequestId` that was used for the creation of the transaction request, or the `{ID}` that was used in the `GET /transactionRequests/{ID}`.",summary:"Return transaction request information error",tags:["transactionRequests"],operationId:"TransactionRequestsErrorByID",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/quotes":{post:{description:"The HTTP request `POST /quotes` is used to request the creation of a quote for the provided financial transaction in the server.",summary:"Calculate quote",tags:["quotes"],operationId:"Quotes",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the quote to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/QuotesPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/quotes/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /quotes/{ID}` is used to get information regarding a quote created or requested earlier. The `{ID}` in the URI should contain the `quoteId` that was used for the creation of the quote.",summary:"Retrieve quote information",tags:["quotes"],operationId:"QuotesByID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /quotes/{ID}` is used to inform the client of a requested or created quote. The `{ID}` in the URI should contain the `quoteId` that was used for the creation of the quote, or the `{ID}` that was used in the `GET /quotes/{ID}` request.",summary:"Return quote information",tags:["quotes"],operationId:"QuotesByID1",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Quote information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/QuotesIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/quotes/{ID}/error":{put:{description:"If the server is unable to find or create a quote, or some other processing error occurs, the error callback `PUT /quotes/{ID}/error` is used. The `{ID}` in the URI should contain the `quoteId` that was used for the creation of the quote, or the `{ID}` that was used in the `GET /quotes/{ID}` request.",summary:"Return quote information error",tags:["quotes"],operationId:"QuotesByIDAndError",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/authorizations":{post:{description:"The HTTP request `POST /authorizations` is used to request the Payer to enter the applicable credentials in the PISP system.",summary:"Perform PISP authorization",tags:["authorizations"],operationId:"AuthorizationsByIDPost",parameters:[{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Perform authorization",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/AuthorizationsPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/authorizations/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /authorizations/{ID}` is used to request the Payer to enter the applicable credentials in the Payee FSP system. The `{ID}` in the URI should contain the `transactionRequestID`, received from the `POST /transactionRequests` service earlier in the process. This request requires a query string to be included in the URI, with the following key-value pairs*:*\n\n- `authenticationType={Type}`, where `{Type}` value is a valid authentication type from the enumeration `AuthenticationType`.\n\n- `retriesLeft=={NrOfRetries}`, where `{NrOfRetries}` is the number of retries left before the financial transaction is rejected. `{NrOfRetries}` must be expressed in the form of the data type `Integer`. `retriesLeft=1` means that this is the last retry before the financial transaction is rejected.\n\n- `amount={Amount}`, where `{Amount}` is the transaction amount that will be withdrawn from the Payer’s account. `{Amount}` must be expressed in the form of the data type `Amount`.\n\n- `currency={Currency}`, where `{Currency}` is the transaction currency for the amount that will be withdrawn from the Payer’s account. The `{Currency}` value must be expressed in the form of the enumeration `CurrencyCode`.\n\nThe following is an example URI containing all the required key-value pairs in the query string*:*\n\n`GET /authorization/3d492671-b7af-4f3f-88de-76169b1bdf88?authenticationType=OTP&retriesLeft=2&amount=102&currency=USD`",summary:"Perform authorization",tags:["authorizations"],operationId:"AuthorizationsByIDGet",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /authorizations/{ID}` is used to inform the client of the result of a previously-requested authorization. The `{ID}` in the URI should contain the `{ID}` that was used in the `GET /authorizations/{ID}` request.",summary:"Return authorization result",tags:["authorizations"],operationId:"AuthorizationsByIDPut",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Authorization result returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/AuthorizationsIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/authorizations/{ID}/error":{put:{description:"If the server is unable to find the transaction request, or another processing error occurs, the error callback `PUT /authorizations/{ID}/error` is used. The `{ID}` in the URI should contain the `{ID}` that was used in the `GET /authorizations/{ID}`.",summary:"Return authorization error",tags:["authorizations"],operationId:"AuthorizationsByIDAndError",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transfers":{post:{description:"The HTTP request `POST /transfers` is used to request the creation of a transfer for the next ledger, and a financial transaction for the Payee FSP.",summary:"Perform transfer",tags:["transfers"],operationId:"transfers",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the transfer to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/TransfersPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transfers/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /transfers/{ID}` is used to get information regarding a transfer created or requested earlier. The `{ID}` in the URI should contain the `transferId` that was used for the creation of the transfer.",summary:"Retrieve transfer information",tags:["transfers"],operationId:"TransfersByIDGet",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /transfers/{ID}` is used to inform the client of a requested or created transfer. The `{ID}` in the URI should contain the `transferId` that was used for the creation of the transfer, or the `{ID}` that was used in the `GET /transfers/{ID}` request.",summary:"Return transfer information",tags:["transfers"],operationId:"TransfersByIDPut",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Transfer information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/TransfersIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transfers/{ID}/error":{put:{description:"If the server is unable to find or create a transfer, or another processing error occurs, the error callback `PUT /transfers/{ID}/error` is used. The `{ID}` in the URI should contain the `transferId` that was used for the creation of the transfer, or the `{ID}` that was used in the `GET /transfers/{ID}`.",summary:"Return transfer information error",tags:["transfers"],operationId:"TransfersByIDAndError",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transactions/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /transactions/{ID}` is used to get transaction information regarding a financial transaction created earlier. The `{ID}` in the URI should contain the `transactionId` that was used for the creation of the quote, as the transaction is created as part of another process (the transfer process).",summary:"Retrieve transaction information",tags:["transactions"],operationId:"TransactionsByID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /transactions/{ID}` is used to inform the client of a requested transaction. The `{ID}` in the URI should contain the `{ID}` that was used in the `GET /transactions/{ID}` request.",summary:"Return transaction information",tags:["transactions"],operationId:"TransactionsByID1",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Transaction information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/TransactionsIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/transactions/{ID}/error":{put:{description:"If the server is unable to find or create a transaction, or another processing error occurs, the error callback `PUT /transactions/{ID}/error` is used. The `{ID}` in the URI should contain the `{ID}` that was used in the `GET /transactions/{ID}` request.",summary:"Return transaction information error",tags:["transactions"],operationId:"TransactionsErrorByID",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkQuotes":{post:{description:"The HTTP request `POST /bulkQuotes` is used to request the creation of a bulk quote for the provided financial transactions in the server.",summary:"Calculate bulk quote",tags:["bulkQuotes"],operationId:"BulkQuotes",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the bulk quote to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/BulkQuotesPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkQuotes/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /bulkQuotes/{ID}` is used to get information regarding a bulk quote created or requested earlier. The `{ID}` in the URI should contain the `bulkQuoteId` that was used for the creation of the bulk quote.",summary:"Retrieve bulk quote information",tags:["bulkQuotes"],operationId:"BulkQuotesByID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /bulkQuotes/{ID}` is used to inform the client of a requested or created bulk quote. The `{ID}` in the URI should contain the `bulkQuoteId` that was used for the creation of the bulk quote, or the `{ID}` that was used in the `GET /bulkQuotes/{ID}` request.",summary:"Return bulk quote information",tags:["bulkQuotes"],operationId:"BulkQuotesByID1",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Bulk quote information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/BulkQuotesIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkQuotes/{ID}/error":{put:{description:"If the server is unable to find or create a bulk quote, or another processing error occurs, the error callback `PUT /bulkQuotes/{ID}/error` is used. The `{ID}` in the URI should contain the `bulkQuoteId` that was used for the creation of the bulk quote, or the `{ID}` that was used in the `GET /bulkQuotes/{ID}` request.",summary:"Return bulk quote information error",tags:["bulkQuotes"],operationId:"BulkQuotesErrorByID",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkTransfers":{post:{description:"The HTTP request `POST /bulkTransfers` is used to request the creation of a bulk transfer in the server.",summary:"Perform bulk transfer",tags:["bulkTransfers"],operationId:"BulkTransfers",parameters:[{$ref:"#/components/parameters/Accept"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the bulk transfer to be created.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/BulkTransfersPostRequest"}}}},responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkTransfers/{ID}":{parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],get:{description:"The HTTP request `GET /bulkTransfers/{ID}` is used to get information regarding a bulk transfer created or requested earlier. The `{ID}` in the URI should contain the `bulkTransferId` that was used for the creation of the bulk transfer.",summary:"Retrieve bulk transfer information",tags:["bulkTransfers"],operationId:"BulkTransferByID",parameters:[{$ref:"#/components/parameters/Accept"}],responses:{202:{$ref:"#/components/responses/202"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}},put:{description:"The callback `PUT /bulkTransfers/{ID}` is used to inform the client of a requested or created bulk transfer. The `{ID}` in the URI should contain the `bulkTransferId` that was used for the creation of the bulk transfer (`POST /bulkTransfers`), or the `{ID}` that was used in the `GET /bulkTransfers/{ID}` request.",summary:"Return bulk transfer information",tags:["bulkTransfers"],operationId:"BulkTransfersByIDPut",parameters:[{$ref:"#/components/parameters/Content-Length"}],requestBody:{description:"Bulk transfer information returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/BulkTransfersIDPutResponse"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}},"/bulkTransfers/{ID}/error":{put:{description:"If the server is unable to find or create a bulk transfer, or another processing error occurs, the error callback `PUT /bulkTransfers/{ID}/error` is used. The `{ID}` in the URI should contain the `bulkTransferId` that was used for the creation of the bulk transfer (`POST /bulkTransfers`), or the `{ID}` that was used in the `GET /bulkTransfers/{ID}` request.",summary:"Return bulk transfer information error",tags:["bulkTransfers"],operationId:"BulkTransfersErrorByID",parameters:[{$ref:"#/components/parameters/ID"},{$ref:"#/components/parameters/Content-Length"},{$ref:"#/components/parameters/Content-Type"},{$ref:"#/components/parameters/Date"},{$ref:"#/components/parameters/X-Forwarded-For"},{$ref:"#/components/parameters/FSPIOP-Source"},{$ref:"#/components/parameters/FSPIOP-Destination"},{$ref:"#/components/parameters/FSPIOP-Encryption"},{$ref:"#/components/parameters/FSPIOP-Signature"},{$ref:"#/components/parameters/FSPIOP-URI"},{$ref:"#/components/parameters/FSPIOP-HTTP-Method"}],requestBody:{description:"Details of the error returned.",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationObject"}}}},responses:{200:{$ref:"#/components/responses/200"},400:{$ref:"#/components/responses/400"},401:{$ref:"#/components/responses/401"},403:{$ref:"#/components/responses/403"},404:{$ref:"#/components/responses/404"},405:{$ref:"#/components/responses/405"},406:{$ref:"#/components/responses/406"},501:{$ref:"#/components/responses/501"},503:{$ref:"#/components/responses/503"}}}}},components:{schemas:{Amount:{title:"Amount",type:"string",pattern:"^([0]|([1-9][0-9]{0,17}))([.][0-9]{0,3}[1-9])?$",description:"The API data type Amount is a JSON String in a canonical format that is restricted by a regular expression for interoperability reasons. This pattern does not allow any trailing zeroes at all, but allows an amount without a minor currency unit. It also only allows four digits in the minor currency unit; a negative value is not allowed. Using more than 18 digits in the major currency unit is not allowed."},AmountType:{title:"AmountType",type:"string",enum:["SEND","RECEIVE"],description:"Below are the allowed values for the enumeration AmountType.\n- SEND - Amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees.\n- RECEIVE - Amount the Payer would like the Payee to receive, that is, the amount that should be sent to the receiver exclusive of any fees."},AuthenticationType:{title:"AuthenticationType",type:"string",enum:["OTP","QRCODE","U2F"],description:"Below are the allowed values for the enumeration AuthenticationType. - OTP - One-time password generated by the Payer FSP. - QRCODE - QR code used as One Time Password. - U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key."},AuthenticationValue:{title:"AuthenticationValue",oneOf:[{$ref:"#/components/schemas/OtpValue"},{$ref:"#/components/schemas/QRCODE"},{$ref:"#/components/schemas/U2FPinValue"}],description:"Contains the authentication value. The format depends on the authentication type used in the AuthenticationInfo complex type."},AuthorizationResponse:{title:"AuthorizationResponse",type:"string",enum:["ENTERED","REJECTED","RESEND"],description:"Below are the allowed values for the enumeration.\n- ENTERED - Consumer entered the authentication value.\n- REJECTED - Consumer rejected the transaction.\n- RESEND - Consumer requested to resend the authentication value."},BalanceOfPayments:{title:"BalanceOfPayments",type:"string",pattern:"^[1-9]\\d{2}$",description:"(BopCode) The API data type [BopCode](https://www.imf.org/external/np/sta/bopcode/) is a JSON String of 3 characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed."},BinaryString:{type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",description:"The API data type BinaryString is a JSON String. The string is a base64url  encoding of a string of raw bytes, where padding (character ‘=’) is added at the end of the data if needed to ensure that the string is a multiple of 4 characters. The length restriction indicates the allowed number of characters."},BinaryString32:{type:"string",pattern:"^[A-Za-z0-9-_]{43}$",description:"The API data type BinaryString32 is a fixed size version of the API data type BinaryString, where the raw underlying data is always of 32 bytes. The data type BinaryString32 should not use a padding character as the size of the underlying data is fixed."},BulkTransferState:{title:"BulkTransactionState",type:"string",enum:["RECEIVED","PENDING","ACCEPTED","PROCESSING","COMPLETED","REJECTED"],description:"Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the bulk transfer from the Payer FSP.\n- PENDING - Payee FSP has validated the bulk transfer.\n- ACCEPTED - Payee FSP has accepted to process the bulk transfer.\n- PROCESSING - Payee FSP has started to transfer fund to the Payees.\n- COMPLETED - Payee FSP has completed transfer of funds to the Payees.\n- REJECTED - Payee FSP has rejected to process the bulk transfer."},Code:{title:"Code",type:"string",pattern:"^[0-9a-zA-Z]{4,32}$",description:"Any code/token returned by the Payee FSP (TokenCode Type)."},CorrelationId:{title:"CorrelationId",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to [RFC 4122](https://tools.ietf.org/html/rfc4122), that is restricted by a regular expression for interoperability reasons. A UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘)."},Currency:{title:"Currency",description:"The currency codes defined in [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) as three-letter alphabetic codes are used as the standard naming representation for currencies.",type:"string",minLength:3,maxLength:3,enum:["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYN","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD"]},Date:{title:"Date",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:'The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples are "1982-05-23", "1987-08-05”.'},DateOfBirth:{title:"DateofBirth (type Date)",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:"Date of Birth of the Party."},DateTime:{title:"DateTime",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",description:'The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html), expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples are "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).'},ErrorCode:{title:"ErrorCode",type:"string",pattern:"^[1-9]\\d{3}$",description:"The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represent the specific error."},ErrorDescription:{title:"ErrorDescription",type:"string",minLength:1,maxLength:128,description:"Error description string."},ExtensionKey:{title:"ExtensionKey",type:"string",minLength:1,maxLength:32,description:"Extension key."},ExtensionValue:{title:"ExtensionValue",type:"string",minLength:1,maxLength:128,description:"Extension value."},FirstName:{title:"FirstName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"First name of the Party (Name Type)."},FspId:{title:"FspId",type:"string",minLength:1,maxLength:32,description:"FSP identifier."},IlpCondition:{title:"IlpCondition",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Condition that must be attached to the transfer by the Payer."},IlpFulfilment:{title:"IlpFulfilment",type:"string",pattern:"^[A-Za-z0-9-_]{43}$",maxLength:48,description:"Fulfilment that must be attached to the transfer by the Payee."},IlpPacket:{title:"IlpPacket",type:"string",pattern:"^[A-Za-z0-9-_]+[=]{0,2}$",minLength:1,maxLength:32768,description:"Information for recipient (transport layer information)."},Integer:{title:"Integer",type:"string",pattern:"^[1-9]\\d*$",description:"The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."},LastName:{title:"LastName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Last name of the Party (Name Type)."},Latitude:{title:"Latitude",type:"string",pattern:"^(\\+|-)?(?:90(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Latitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons."},Longitude:{title:"Longitude",type:"string",pattern:"^(\\+|-)?(?:180(?:(?:\\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\\.[0-9]{1,6})?))$",description:"The API data type Longitude is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons."},MerchantClassificationCode:{title:"MerchantClassificationCode",type:"string",pattern:"^[\\d]{1,4}$",description:"A limited set of pre-defined numbers. This list would be a limited set of numbers identifying a set of popular merchant types like School Fees, Pubs and Restaurants, Groceries, etc."},MiddleName:{title:"MiddleName",type:"string",minLength:1,maxLength:128,pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:"Middle name of the Party (Name Type)."},Name:{title:"Name",type:"string",pattern:"^(?!\\s*$)[\\w .,'-]{1,128}$",description:'The API data type Name is a JSON String, restricted by a regular expression to avoid characters which are generally not used in a name.\nRegular Expression - The regular expression for restricting the Name type is "^(?!\\s*$)[\\w .,\'-]{1,128}$". The restriction does not allow a string consisting of whitespace only, all Unicode characters are allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,) and space characters ( ).\n**Note:** In some programming languages, Unicode support must be specifically enabled. For example, if Java is used, the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.'},Note:{title:"Note",type:"string",minLength:1,maxLength:128,description:"Memo assigned to transaction."},OtpValue:{title:"OtpValue",type:"string",pattern:"^\\d{3,10}$",description:"The API data type OtpValue is a JSON String of 3 to 10 characters, consisting of digits only. Negative numbers are not allowed. One or more leading zeros are allowed."},PartyIdentifier:{title:"PartyIdentifier",type:"string",minLength:1,maxLength:128,description:"Identifier of the Party."},PartyIdType:{title:"PartyIdType",type:"string",enum:["MSISDN","EMAIL","PERSONAL_ID","BUSINESS","DEVICE","ACCOUNT_ID","IBAN","ALIAS"],description:"Below are the allowed values for the enumeration.\n- MSISDN - An MSISDN (Mobile Station International Subscriber Directory Number, that is, the phone number) is used as reference to a participant. The MSISDN identifier should be in international format according to the [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en). Optionally, the MSISDN may be prefixed by a single plus sign, indicating the international prefix.\n- EMAIL - An email is used as reference to a participant. The format of the email should be according to the informational [RFC 3696](https://tools.ietf.org/html/rfc3696).\n- PERSONAL_ID - A personal identifier is used as reference to a participant. Examples of personal identification are passport number, birth certificate number, and national registration number. The identifier number is added in the PartyIdentifier element. The personal identifier type is added in the PartySubIdOrType element.\n- BUSINESS - A specific Business (for example, an organization or a company) is used as reference to a participant. The BUSINESS identifier can be in any format. To make a transaction connected to a specific username or bill number in a Business, the PartySubIdOrType element should be used.\n- DEVICE - A specific device (for example, a POS or ATM) ID connected to a specific business or organization is used as reference to a Party. For referencing a specific device under a specific business or organization, use the PartySubIdOrType element.\n- ACCOUNT_ID - A bank account number or FSP account ID should be used as reference to a participant. The ACCOUNT_ID identifier can be in any format, as formats can greatly differ depending on country and FSP.\n- IBAN - A bank account number or FSP account ID is used as reference to a participant. The IBAN identifier can consist of up to 34 alphanumeric characters and should be entered without whitespace.\n- ALIAS An alias is used as reference to a participant. The alias should be created in the FSP as an alternative reference to an account owner. Another example of an alias is a username in the FSP system. The ALIAS identifier can be in any format. It is also possible to use the PartySubIdOrType element for identifying an account under an Alias defined by the PartyIdentifier."},PartyName:{title:"PartyName",type:"string",minLength:1,maxLength:128,description:"Name of the Party. Could be a real name or a nickname."},PartySubIdOrType:{title:"PartySubIdOrType",type:"string",minLength:1,maxLength:128,description:"Either a sub-identifier of a PartyIdentifier, or a sub-type of the PartyIdType, normally a PersonalIdentifierType."},PersonalIdentifierType:{title:"PersonalIdentifierType",type:"string",enum:["PASSPORT","NATIONAL_REGISTRATION","DRIVING_LICENSE","ALIEN_REGISTRATION","NATIONAL_ID_CARD","EMPLOYER_ID","TAX_ID_NUMBER","SENIOR_CITIZENS_CARD","MARRIAGE_CERTIFICATE","HEALTH_CARD","VOTERS_ID","UNITED_NATIONS","OTHER_ID"],description:"Below are the allowed values for the enumeration.\n- PASSPORT - A passport number is used as reference to a Party.\n- NATIONAL_REGISTRATION - A national registration number is used as reference to a Party.\n- DRIVING_LICENSE - A driving license is used as reference to a Party.\n- ALIEN_REGISTRATION - An alien registration number is used as reference to a Party.\n- NATIONAL_ID_CARD - A national ID card number is used as reference to a Party.\n- EMPLOYER_ID - A tax identification number is used as reference to a Party.\n- TAX_ID_NUMBER - A tax identification number is used as reference to a Party.\n- SENIOR_CITIZENS_CARD - A senior citizens card number is used as reference to a Party.\n- MARRIAGE_CERTIFICATE - A marriage certificate number is used as reference to a Party.\n- HEALTH_CARD - A health card number is used as reference to a Party.\n- VOTERS_ID - A voter’s identification number is used as reference to a Party.\n- UNITED_NATIONS - An UN (United Nations) number is used as reference to a Party.\n- OTHER_ID - Any other type of identification type number is used as reference to a Party."},QRCODE:{title:"QRCODE",type:"string",pattern:"^\\S{1,64}$",minLength:1,maxLength:64,description:"QR code used as a One Time Password."},RefundReason:{title:"RefundReason",type:"string",minLength:1,maxLength:128,description:"Reason for the refund."},TokenCode:{title:"TokenCode",type:"string",pattern:"^[0-9a-zA-Z]{4,32}$",description:"The API data type TokenCode is a JSON String between 4 and 32 characters, consisting of digits or upper- or lowercase characters from a to z."},TransactionInitiator:{title:"TransactionInitiator",type:"string",enum:["PAYER","PAYEE"],description:"Below are the allowed values for the enumeration.\n- PAYER - Sender of funds is initiating the transaction. The account to send from is either owned by the Payer or is connected to the Payer in some way.\n- PAYEE - Recipient of the funds is initiating the transaction by sending a transaction request. The Payer must approve the transaction, either automatically by a pre-generated OTP or by pre-approval of the Payee, or by manually approving in his or her own Device."},TransactionInitiatorType:{title:"TransactionInitiatorType",type:"string",enum:["CONSUMER","AGENT","BUSINESS","DEVICE"],description:"Below are the allowed values for the enumeration.\n- CONSUMER - Consumer is the initiator of the transaction.\n- AGENT - Agent is the initiator of the transaction.\n- BUSINESS - Business is the initiator of the transaction.\n- DEVICE - Device is the initiator of the transaction."},TransactionRequestState:{title:"TransactionRequestState",type:"string",enum:["RECEIVED","PENDING","ACCEPTED","REJECTED"],description:"Below are the allowed values for the enumeration.\n- RECEIVED - Payer FSP has received the transaction from the Payee FSP.\n- PENDING - Payer FSP has sent the transaction request to the Payer.\n- ACCEPTED - Payer has approved the transaction.\n- REJECTED - Payer has rejected the transaction."},TransactionScenario:{title:"TransactionScenario",type:"string",enum:["DEPOSIT","WITHDRAWAL","TRANSFER","PAYMENT","REFUND"],description:"Below are the allowed values for the enumeration.\n- DEPOSIT - Used for performing a Cash-In (deposit) transaction. In a normal scenario, electronic funds are transferred from a Business account to a Consumer account, and physical cash is given from the Consumer to the Business User.\n- WITHDRAWAL - Used for performing a Cash-Out (withdrawal) transaction. In a normal scenario, electronic funds are transferred from a Consumer’s account to a Business account, and physical cash is given from the Business User to the Consumer.\n- TRANSFER - Used for performing a P2P (Peer to Peer, or Consumer to Consumer) transaction.\n- PAYMENT - Usually used for performing a transaction from a Consumer to a Merchant or Organization, but could also be for a B2B (Business to Business) payment. The transaction could be online for a purchase in an Internet store, in a physical store where both the Consumer and Business User are present, a bill payment, a donation, and so on.\n- REFUND - Used for performing a refund of transaction."},TransactionState:{title:"TransactionState",type:"string",enum:["RECEIVED","PENDING","COMPLETED","REJECTED"],description:"Below are the allowed values for the enumeration.\n- RECEIVED - Payee FSP has received the transaction from the Payer FSP.\n- PENDING - Payee FSP has validated the transaction.\n- COMPLETED - Payee FSP has successfully performed the transaction.\n- REJECTED - Payee FSP has failed to perform the transaction."},TransactionSubScenario:{title:"TransactionSubScenario",type:"string",pattern:"^[A-Z_]{1,32}$",description:"Possible sub-scenario, defined locally within the scheme (UndefinedEnum Type)."},TransferState:{title:"TransferState",type:"string",enum:["RECEIVED","RESERVED","COMMITTED","ABORTED"],description:"Below are the allowed values for the enumeration.\n- RECEIVED - Next ledger has received the transfer.\n- RESERVED - Next ledger has reserved the transfer.\n- COMMITTED - Next ledger has successfully performed the transfer.\n- ABORTED - Next ledger has aborted the transfer due to a rejection or failure to perform the transfer."},UndefinedEnum:{title:"UndefinedEnum",type:"string",pattern:"^[A-Z_]{1,32}$",description:"The API data type UndefinedEnum is a JSON String consisting of 1 to 32 uppercase characters including an underscore character (_)."},U2FPinValue:{title:"U2FPinValue",type:"object",description:"U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key.",properties:{pinValue:{$ref:"#/components/schemas/U2FPIN",description:"U2F challenge-response."},counter:{$ref:"#/components/schemas/Counter",description:"Sequential counter used for cloning detection. Present only for U2F authentication."}},required:["pinValue","counter"]},U2FPIN:{title:"U2FPIN",type:"string",pattern:"^\\S{1,64}$",minLength:1,maxLength:64,description:"U2F challenge-response, where payer FSP verifies if the response provided by end-user device matches the previously registered key."},Counter:{title:"Counter",$ref:"#/components/schemas/Integer",description:"Sequential counter used for cloning detection. Present only for U2F authentication."},RetriesLeft:{title:"RetriesLeft",$ref:"#/components/schemas/Integer",description:"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},AuthenticationInfo:{title:"AuthenticationInfo",type:"object",description:"Data model for the complex type AuthenticationInfo.",properties:{authentication:{$ref:"#/components/schemas/AuthenticationType",description:"Type of authentication."},authenticationValue:{$ref:"#/components/schemas/AuthenticationValue",description:"Authentication value."}},required:["authentication","authenticationValue"]},AuthorizationsPostRequest:{title:"AuthorizationsPostRequest",type:"object",description:"POST /authorizations Request object",properties:{authenticationType:{$ref:"#/components/schemas/AuthenticationType",description:"This value is a valid authentication type from the enumeration AuthenticationType(OTP or QR Code or U2F)."},retriesLeft:{$ref:"#/components/schemas/RetriesLeft",description:"RetriesLeft is the number of retries left before the financial transaction is rejected. It must be expressed in the form of the data type Integer. retriesLeft=1 means that this is the last retry before the financial transaction is rejected."},amount:{$ref:"#/components/schemas/Money",description:"This is the transaction amount that will be withdrawn from the Payer’s account."},transactionId:{$ref:"#/components/schemas/CorrelationId",description:"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process."},transactionRequestId:{$ref:"#/components/schemas/CorrelationId",description:"The transactionRequestID, received from the POST /transactionRequests service earlier in the process."},quote:{$ref:"#/components/schemas/QuotesIDPutResponse",description:"Quotes object"}},required:["authenticationType","retriesLeft","amount","transactionId","transactionRequestId","quote"]},AuthorizationsIDPutResponse:{title:"AuthorizationsIDPutResponse",type:"object",description:"The object sent in the PUT /authorizations/{ID} callback.",properties:{authenticationInfo:{$ref:"#/components/schemas/AuthenticationInfo",description:"OTP or QR Code or U2F if entered, otherwise empty."},responseType:{type:"string",description:"Enum containing response information; if the customer entered the authentication value, rejected the transaction, or requested a resend of the authentication value.",example:"ENTERED"}},required:["responseType"]},BulkQuotesIDPutResponse:{title:"BulkQuotesIDPutResponse",type:"object",description:"The object sent in the PUT /bulkQuotes/{ID} callback.",properties:{individualQuoteResults:{type:"array",maxItems:1e3,items:{$ref:"#/components/schemas/IndividualQuoteResult"},description:"Fees for each individual transaction, if any of them are charged per transaction."},expiration:{type:"string",description:"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction request.",example:"2016-05-24T08:38:08.699-04:00"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["expiration"]},BulkQuotesPostRequest:{title:"BulkQuotesPostRequest",type:"object",description:"The object sent in the POST /bulkQuotes request.",properties:{bulkQuoteId:{type:"string",description:"Common ID between the FSPs for the bulk quote object, decided by the Payer FSP. The ID should be reused for resends of the same bulk quote. A new ID should be generated for each new bulk quote.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payer:{properties:{partyIdInfo:{$ref:"#/components/schemas/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},merchantClassificationCode:{type:"string",description:"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.",example:1234},name:{type:"string",description:"Display name of the Party, could be a real name or a nick name.",example:"Henrik Karlsson"},personalInfo:{$ref:"#/components/schemas/PartyPersonalInfo",description:"Personal information used to verify identity of Party such as first, middle, last name and date of birth."}}},geoCode:{$ref:"#/components/schemas/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},expiration:{type:"string",description:"Expiration is optional to let the Payee FSP know when a quote no longer needs to be returned.",example:"2016-05-24T08:38:08.699-04:00"},individualQuotes:{properties:{quoteId:{type:"string",description:"Identifies quote message.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},transactionId:{type:"string",description:"Identifies transaction message.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payee:{properties:{partyIdInfo:{$ref:"#/components/schemas/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},merchantClassificationCode:{type:"string",description:"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.",example:1234},name:{type:"string",description:"Display name of the Party, could be a real name or a nick name.",example:"Henrik Karlsson"},personalInfo:{$ref:"#/components/schemas/PartyPersonalInfo",description:"Personal information used to verify identity of Party such as first, middle, last name and date of birth."}}},amountType:{type:"string",description:"SEND for sendAmount, RECEIVE for receiveAmount.",example:"RECEIVE"},amount:{description:"Depending on amountType. If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive of any fees. The amount is not updated by any of the participating entities.",type:"object",$ref:"#/components/schemas/Money"},fees:{description:"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed.",type:"object",$ref:"#/components/schemas/Money"},transactionType:{$ref:"#/components/schemas/TransactionType",description:"Type of transaction that the quote is requested for."},note:{type:"string",description:"Memo that will be attached to the transaction.",example:"Note sent to Payee."},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}}}},required:["bulkQuoteId","payer","individualQuotes"]},BulkTransfersIDPutResponse:{title:"BulkTransfersIDPutResponse",type:"object",description:"The object sent in the PUT /bulkTransfers/{ID} callback.",properties:{completedTimestamp:{type:"string",description:"Time and date when the bulk transaction was completed.",example:"2016-05-24T08:38:08.699-04:00"},individualTransferResults:{type:"array",maxItems:1e3,items:{$ref:"#/components/schemas/IndividualTransferResult"},description:"List of IndividualTransferResult elements."},bulkTransferState:{type:"string",description:"The state of the bulk transfer.",example:"RECEIVED"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["bulkTransferState"]},BulkTransfersPostRequest:{title:"BulkTransfersPostRequest",type:"object",description:"The object sent in the POST /bulkTransfers request.",properties:{bulkTransferId:{type:"string",description:"Common ID between the FSPs and the optional Switch for the bulk transfer object, decided by the Payer FSP. The ID should be reused for resends of the same bulk transfer. A new ID should be generated for each new bulk transfer.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},bulkQuoteId:{type:"string",description:"ID of the related bulk quote.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payerFsp:{type:"string",description:"Payer FSP identifier.",example:5678},payeeFsp:{type:"string",description:"Payee FSP identifier.",example:1234},individualTransfers:{type:"array",minItems:1,maxItems:1e3,items:{$ref:"#/components/schemas/IndividualTransfer"},description:"List of IndividualTransfer elements."},expiration:{type:"string",description:"Expiration time of the transfers.",example:"2016-05-24T08:38:08.699-04:00"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["bulkTransferId","bulkQuoteId","payerFsp","payeeFsp","individualTransfers","expiration"]},ErrorInformation:{title:"ErrorInformation",type:"object",description:"Data model for the complex type ErrorInformation.",properties:{errorCode:{type:"string",description:"Specific error number.",example:5100},errorDescription:{type:"string",description:"Error description string.",example:"This is an error description."},extensionList:{$ref:"#/components/schemas/ExtensionList"}},required:["errorCode","errorDescription"]},ErrorInformationObject:{title:"ErrorInformationObject",type:"object",description:"Data model for the complex type object that contains ErrorInformation.",properties:{errorInformation:{$ref:"#/components/schemas/ErrorInformation"}},required:["errorInformation"]},ErrorInformationResponse:{title:"ErrorInformationResponse",type:"object",description:"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",properties:{errorInformation:{$ref:"#/components/schemas/ErrorInformation"}}},Extension:{title:"Extension",type:"object",description:"Data model for the complex type Extension.",properties:{key:{type:"string",description:"Extension key."},value:{type:"string",description:"Extension value."}},required:["key","value"]},ExtensionList:{title:"ExtensionList",type:"object",description:"Data model for the complex type ExtensionList. An optional list of extensions, specific to deployment.",properties:{extension:{type:"array",items:{$ref:"#/components/schemas/Extension"},minItems:1,maxItems:16,description:"Number of Extension elements."}},required:["extension"]},GeoCode:{title:"GeoCode",type:"object",description:"Data model for the complex type GeoCode. Indicates the geographic location from where the transaction was initiated.",properties:{latitude:{type:"string",description:"Latitude of the Party.",example:"+45.4215"},longitude:{type:"string",description:"Longitude of the Party.",example:"+75.6972"}},required:["latitude","longitude"]},IndividualQuote:{title:"IndividualQuote",type:"object",description:"Data model for the complex type IndividualQuote.",properties:{quoteId:{type:"string",description:"Identifies the quote message.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},transactionId:{type:"string",description:"Identifies the transaction message.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payee:{$ref:"#/components/schemas/Party",description:"Information about the Payee in the proposed financial transaction."},amountType:{type:"string",description:"SEND for sendAmount, RECEIVE for receiveAmount.",example:"RECEIVE"},amount:{type:"object",$ref:"#/components/schemas/Money",description:"Depending on amountType If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive of any fees. The amount is not updated by any of the participating entities."},fees:{type:"object",$ref:"#/components/schemas/Money",description:"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},transactionType:{$ref:"#/components/schemas/TransactionType",description:"Type of transaction that the quote is requested for."},note:{type:"string",description:"Memo that will be attached to the transaction.",example:"Note sent to Payee."},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId","transactionId","payee","amountType","amount","transactionType"]},IndividualQuoteResult:{title:"IndividualQuoteResult",type:"object",description:"Data model for the complex type IndividualQuoteResult.",properties:{quoteId:{type:"string",description:"Identifies the quote message.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payee:{$ref:"#/components/schemas/Party",description:"Information about the Payee in the proposed financial transaction."},transferAmount:{type:"object",$ref:"#/components/schemas/Money",description:"The amount of money that the Payee FSP should receive."},payeeReceiveAmount:{type:"object",$ref:"#/components/schemas/Money",description:"The amount of Money that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees."},payeeFspFee:{type:"object",$ref:"#/components/schemas/Money",description:"Payee FSP’s part of the transaction fee."},payeeFspCommission:{type:"object",$ref:"#/components/schemas/Money",description:"Transaction commission from the Payee FSP."},ilpPacket:{type:"string",description:"The ILP Packet that must be attached to the transfer by the Payer.",example:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"},condition:{type:"string",description:"The condition that must be attached to the transfer by the Payer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},errorInformation:{$ref:"#/components/schemas/ErrorInformation",description:"Error code, category description. **Note:** receiveAmount, payeeFspFee, payeeFspCommission, expiration, ilpPacket, condition should not be set if errorInformation is set."},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId"]},IndividualTransfer:{title:"IndividualTransfer",type:"object",description:"Data model for the complex type IndividualTransfer.",properties:{transferId:{type:"string",description:"Identifies messages related to the same /transfers sequence.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},transferAmount:{$ref:"#/components/schemas/Money",description:"Transaction amount to be sent."},ilpPacket:{type:"string",description:"ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data.",example:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"},condition:{type:"string",description:"Condition that must be fulfilled to commit the transfer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId","transferAmount","ilpPacket","condition"]},IndividualTransferResult:{title:"IndividualTransferResult",type:"object",description:"Data model for the complex type IndividualTransferResult.",properties:{transferId:{type:"string",description:"Identifies messages related to the same /transfers sequence.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},fulfilment:{type:"string",description:"Fulfilment of the condition specified with the transaction. **Note:** Either fulfilment or errorInformation should be set, not both.",example:"WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"},errorInformation:{$ref:"#/components/schemas/ErrorInformation",description:"If transfer is REJECTED, error information may be provided. **Note:** Either fulfilment or errorInformation should be set, not both."},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId"]},Money:{title:"Money",type:"object",description:"Data model for the complex type Money.",properties:{currency:{type:"string",description:"Currency of the amount.",example:"USD"},amount:{type:"string",description:"Amount of Money.",example:123.45}},required:["currency","amount"]},ParticipantsIDPutResponse:{title:"ParticipantsIDPutResponse",type:"object",description:"The object sent in the PUT /participants/{ID} callback.",properties:{partyList:{type:"array",items:{$ref:"#/components/schemas/PartyResult"},minItems:1,maxItems:1e4,description:"List of PartyResult elements that were either created or failed to be created."},currency:{type:"string",description:"Indicate that the provided Currency was set to be supported by each successfully added PartyIdInfo.",example:"USD"}},required:["partyList"]},ParticipantsPostRequest:{title:"ParticipantsPostRequest",type:"object",description:"The object sent in the POST /participants request.",properties:{requestId:{type:"string",description:"The ID of the request, decided by the client. Used for identification of the callback from the server.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},partyList:{type:"array",items:{$ref:"#/components/schemas/PartyIdInfo"},minItems:1,maxItems:1e4,description:"List of PartyIdInfo elements that the client would like to update or create FSP information about."},currency:{type:"string",description:"Indicate that the provided Currency is supported by each PartyIdInfo in the list.",example:"USD"}},required:["requestId","partyList"]},ParticipantsTypeIDPutResponse:{title:"ParticipantsTypeIDPutResponse",type:"object",description:"The object sent in the PUT /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} callbacks.",properties:{fspId:{type:"string",description:"FSP Identifier that the Party belongs to.",example:1234}}},ParticipantsTypeIDSubIDPostRequest:{title:"ParticipantsTypeIDSubIDPostRequest",type:"object",description:"The object sent in the POST /participants/{Type}/{ID}/{SubId} and /participants/{Type}/{ID} requests.",properties:{fspId:{type:"string",description:"FSP Identifier that the Party belongs to.",example:1234},currency:{type:"string",description:"Indicate that the provided Currency is supported by the Party.",example:"USD"}},required:["fspId"]},PartiesTypeIDPutResponse:{title:"PartiesTypeIDPutResponse",type:"object",description:"The object sent in the PUT /parties/{Type}/{ID} callback.",properties:{party:{$ref:"#/components/schemas/Party",description:"Information regarding the requested Party."}},required:["party"]},Party:{title:"Party",type:"object",description:"Data model for the complex type Party.",properties:{partyIdInfo:{$ref:"#/components/schemas/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},merchantClassificationCode:{type:"string",description:"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.",example:4321},name:{type:"string",description:"Display name of the Party, could be a real name or a nick name.",example:"Henrik Karlsson"},personalInfo:{$ref:"#/components/schemas/PartyPersonalInfo",description:"Personal information used to verify identity of Party such as first, middle, last name and date of birth."}},required:["partyIdInfo"]},PartyComplexName:{title:"PartyComplexName",type:"object",description:"Data model for the complex type PartyComplexName.",properties:{firstName:{type:"string",description:"Party’s first name.",example:"Henrik"},middleName:{type:"string",description:"Party’s middle name.",example:"Johannes"},lastName:{type:"string",description:"Party’s last name.",example:"Karlsson"}}},PartyIdInfo:{title:"PartyIdInfo",type:"object",description:"Data model for the complex type PartyIdInfo.",properties:{partyIdType:{type:"string",description:"Type of the identifier.",example:"PERSONAL_ID"},partyIdentifier:{type:"string",description:"An identifier for the Party.",example:16135551212},partySubIdOrType:{type:"string",description:"A sub-identifier or sub-type for the Party.",example:"DRIVING_LICENSE"},fspId:{type:"string",description:"FSP ID (if known).",example:1234}},required:["partyIdType","partyIdentifier"]},PartyPersonalInfo:{title:"PartyPersonalInfo",type:"object",description:"Data model for the complex type PartyPersonalInfo.",properties:{complexName:{$ref:"#/components/schemas/PartyComplexName",description:"First, middle and last name for the Party."},dateOfBirth:{type:"string",description:"Date of birth for the Party.",example:"1966-06-16"}}},PartyResult:{title:"PartyResult",type:"object",description:"Data model for the complex type PartyResult.",properties:{partyId:{$ref:"#/components/schemas/PartyIdInfo",description:"Party Id type, id, sub ID or type, and FSP Id."},errorInformation:{$ref:"#/components/schemas/ErrorInformation",description:"If the Party failed to be added, error information should be provided. Otherwise, this parameter should be empty to indicate success."}},required:["partyId"]},QuotesIDPutResponse:{title:"QuotesIDPutResponse",type:"object",description:"The object sent in the PUT /quotes/{ID} callback.",properties:{transferAmount:{description:"The amount of money that the Payee FSP should receive.",type:"object",$ref:"#/components/schemas/Money"},payeeReceiveAmount:{description:"The amount of Money that the Payee should receive in the end-to-end transaction. Optional as the Payee FSP might not want to disclose any optional Payee fees.",type:"object",$ref:"#/components/schemas/Money"},payeeFspFee:{description:"Payee FSP’s part of the transaction fee.",type:"object",$ref:"#/components/schemas/Money"},payeeFspCommission:{description:"Transaction commission from the Payee FSP.",type:"object",$ref:"#/components/schemas/Money"},expiration:{type:"string",description:"Date and time until when the quotation is valid and can be honored when used in the subsequent transaction.",example:"2016-05-24T08:38:08.699-04:00"},geoCode:{$ref:"#/components/schemas/GeoCode",description:"Longitude and Latitude of the Payee. Can be used to detect fraud."},ilpPacket:{type:"string",description:"The ILP Packet that must be attached to the transfer by the Payer.",example:"“AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA”"},condition:{type:"string",description:"The condition that must be attached to the transfer by the Payer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferAmount","expiration","ilpPacket","condition"]},QuotesPostRequest:{title:"QuotesPostRequest",type:"object",description:"The object sent in the POST /quotes request.",properties:{quoteId:{type:"string",description:"Common ID between the FSPs for the quote object, decided by the Payer FSP. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},transactionId:{type:"string",description:"Common ID (decided by the Payer FSP) between the FSPs for the future transaction object. The actual transaction will be created as part of a successful transfer process. The ID should be reused for resends of the same quote for a transaction. A new ID should be generated for each new quote for a transaction.",example:"a8323bc6-c228-4df2-ae82-e5a997baf899"},transactionRequestId:{type:"string",description:"Identifies an optional previously-sent transaction request.",example:"a8323bc6-c228-4df2-ae82-e5a997baf890"},payee:{$ref:"#/components/schemas/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{properties:{partyIdInfo:{properties:{partyIdType:{type:"string",description:"Information about the Payer in the proposed financial transaction. Type of the identifier.",example:"PERSONAL_ID"},partyIdentifier:{type:"string",description:"Information about the Payer in the proposed financial transaction. An indentifier for the Party.",example:16135551212},partySubIdOrType:{type:"string",description:"Information about the Payer in the proposed financial transaction. A sub-identifier or sub-type for the Party.",example:"PASSPORT"},fspId:{type:"string",description:"FSP ID (if known).",example:1234}}},merchantClassificationCode:{type:"string",description:"Used in the context of Payee Information, where the Payee happens to be a merchant accepting merchant payments.",example:1234},name:{type:"string",description:"Display name of the Party, could be a real name or a nick name.",example:"Lars Bergqvist"},personalInfo:{properties:{complexName:{properties:{firstName:{type:"string",description:"Party’s first name.",example:"Lars"},middleName:{type:"string",description:"Party’s middle name.",example:"Per"},lastName:{type:"string",description:"Party’s last name.",example:"Bergqvist"}}},dateOfBirth:{type:"string",description:"Date of birth for the Party.",example:"1977-07-17"}}}}},amountType:{type:"string",description:"SEND for send amount, RECEIVE for receive amount.",example:"SEND"},amount:{type:"object",$ref:"#/components/schemas/Money",description:"Depending on amountType If SEND - The amount the Payer would like to send, that is, the amount that should be withdrawn from the Payer account including any fees. The amount is updated by each participating entity in the transaction. If RECEIVE - The amount the Payee should receive, that is, the amount that should be sent to the receiver exclusive any fees. The amount is not updated by any of the participating entities."},fees:{type:"object",$ref:"#/components/schemas/Money",description:"The fees in the transaction. The fees element should be empty if fees should be non-disclosed. The fees element should be non-empty if fees should be disclosed."},transactionType:{$ref:"#/components/schemas/TransactionType",description:"Type of transaction for which the quote is requested."},geoCode:{$ref:"#/components/schemas/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},note:{type:"string",description:"A memo that will be attached to the transaction.",example:"Free-text memo."},expiration:{type:"string",description:"Expiration is optional. It can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, and Merchant to know that their request has a time limit.",example:"2016-05-24T08:38:08.699-04:00"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["quoteId","transactionId","payee","payer","amountType","amount","transactionType"]},Refund:{title:"Refund",type:"object",description:"Data model for the complex type Refund.",properties:{originalTransactionId:{type:"string",description:"Reference to the original transaction ID that is requested to be refunded.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},refundReason:{type:"string",description:"Free text indicating the reason for the refund.",example:"Free text indicating reason for the refund."}},required:["originalTransactionId"]},Transaction:{title:"Transaction",type:"object",description:"Data model for the complex type Transaction. The Transaction type is used to carry end-to-end data between the Payer FSP and the Payee FSP in the ILP Packet. Both the transactionId and the quoteId in the data model are decided by the Payer FSP in the POST /quotes request.",properties:{transactionId:{type:"string",description:"ID of the transaction, the ID is decided by the Payer FSP during the creation of the quote."},quoteId:{type:"string",description:"ID of the quote, the ID is decided by the Payer FSP during the creation of the quote."},payee:{$ref:"#/components/schemas/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{$ref:"#/components/schemas/Party",description:"Information about the Payer in the proposed financial transaction."},amount:{$ref:"#/components/schemas/Money",description:"Transaction amount to be sent."},transactionType:{$ref:"#/components/schemas/TransactionType",description:"Type of the transaction."},note:{type:"string",description:"Memo associated to the transaction, intended to the Payee."},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionId","quoteId","payee","payer","amount","transactionType"]},TransactionRequestsIDPutResponse:{title:"TransactionRequestsIDPutResponse",type:"object",description:"The object sent in the PUT /transactionRequests/{ID} callback.",properties:{transactionId:{type:"string",description:"Identifies a related transaction (if a transaction has been created).",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},transactionRequestState:{type:"string",description:"State of the transaction request.",example:"RECEIVED"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionRequestState"]},TransactionRequestsPostRequest:{title:"TransactionRequestsPostRequest",type:"object",description:"The object sent in the POST /transactionRequests request.",properties:{transactionRequestId:{type:"string",description:"Common ID between the FSPs for the transaction request object, decided by the Payee FSP. The ID should be reused for resends of the same transaction request. A new ID should be generated for each new transaction request.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payee:{$ref:"#/components/schemas/Party",description:"Information about the Payee in the proposed financial transaction."},payer:{$ref:"#/components/schemas/PartyIdInfo",description:"Information about the Payer type, id, sub-type/id, FSP Id in the proposed financial transaction."},amount:{$ref:"#/components/schemas/Money",description:"Requested amount to be transferred from the Payer to Payee."},transactionType:{$ref:"#/components/schemas/TransactionType",description:"Type of transaction."},note:{type:"string",description:"Reason for the transaction request, intended to the Payer.",example:"Free-text memo."},geoCode:{$ref:"#/components/schemas/GeoCode",description:"Longitude and Latitude of the initiating Party. Can be used to detect fraud."},authenticationType:{type:"string",description:"OTP or QR Code or U2F, otherwise empty.",example:"OTP"},expiration:{type:"string",description:"Can be set to get a quick failure in case the peer FSP takes too long to respond. Also, it may be beneficial for Consumer, Agent, Merchant to know that their request has a time limit.",example:"2016-05-24T08:38:08.699-04:00"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionRequestId","payee","payer","amount","transactionType"]},TransactionsIDPutResponse:{title:"TransactionsIDPutResponse",type:"object",description:"The object sent in the PUT /transactions/{ID} callback.",properties:{completedTimestamp:{type:"string",description:"Time and date when the transaction was completed.",example:"2016-05-24T08:38:08.699-04:00"},transactionState:{type:"string",description:"State of the transaction.",example:"RECEIVED"},code:{type:"string",description:"Optional redemption information provided to Payer after transaction has been completed.",example:"Test-Code"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transactionState"]},TransactionType:{title:"TransactionType",type:"object",description:"Data model for the complex type TransactionType.",properties:{scenario:{type:"string",description:"Deposit, withdrawal, refund, …",example:"DEPOSIT"},subScenario:{type:"string",description:"Possible sub-scenario, defined locally within the scheme.",example:"Locally defined sub-scenario."},initiator:{type:"string",description:"Who is initiating the transaction - Payer or Payee.",example:"PAYEE"},initiatorType:{type:"string",description:"Consumer, agent, business, …",example:"CONSUMER"},refundInfo:{$ref:"#/components/schemas/Refund",description:"Extra information specific to a refund scenario. Should only be populated if scenario is REFUND."},balanceOfPayments:{type:"string",description:"Balance of Payments code.",example:123}},required:["scenario","initiator","initiatorType"]},TransfersIDPutResponse:{title:"TransfersIDPutResponse",type:"object",description:"The object sent in the PUT /transfers/{ID} callback.",properties:{fulfilment:{type:"string",description:"Fulfilment of the condition specified with the transaction. Mandatory if transfer has completed successfully.",example:"WLctttbu2HvTsa1XWvUoGRcQozHsqeu9Ahl2JW9Bsu8"},completedTimestamp:{type:"string",description:"Time and date when the transaction was completed.",example:"2016-05-24T08:38:08.699-04:00"},transferState:{type:"string",description:"State of the transfer.",example:"RESERVED"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferState"]},TransfersPostRequest:{title:"TransfersPostRequest",type:"object",description:"The object sent in the POST /transfers request.",properties:{transferId:{type:"string",description:"The common ID between the FSPs and the optional Switch for the transfer object, decided by the Payer FSP. The ID should be reused for resends of the same transfer. A new ID should be generated for each new transfer.",example:"b51ec534-ee48-4575-b6a9-ead2955b8069"},payeeFsp:{type:"string",description:"Payee FSP in the proposed financial transaction.",example:1234},payerFsp:{type:"string",description:"Payer FSP in the proposed financial transaction.",example:5678},amount:{$ref:"#/components/schemas/Money",description:"The transfer amount to be sent."},ilpPacket:{type:"string",description:"The ILP Packet containing the amount delivered to the Payee and the ILP Address of the Payee and any other end-to-end data.",example:"AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA"},condition:{type:"string",description:"The condition that must be fulfilled to commit the transfer.",example:"f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA"},expiration:{type:"string",description:"Expiration can be set to get a quick failure expiration of the transfer. The transfer should be rolled back if no fulfilment is delivered before this time.",example:"2016-05-24T08:38:08.699-04:00"},extensionList:{$ref:"#/components/schemas/ExtensionList",description:"Optional extension, specific to deployment."}},required:["transferId","payeeFsp","payerFsp","amount","ilpPacket","condition","expiration"]}},responses:{200:{description:"OK"},202:{description:"Accepted"},400:{description:"Bad Request",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},401:{description:"Unauthorized",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},403:{description:"Forbidden",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},404:{description:"Not Found",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},405:{description:"Method Not Allowed",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},406:{description:"Not Acceptable",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},501:{description:"Not Implemented",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}},503:{description:"Service Unavailable",content:{"application/json":{schema:{$ref:"#/components/schemas/ErrorInformationResponse"}}},headers:{"Content-Length":{$ref:"#/components/parameters/Content-Length"},"Content-Type":{$ref:"#/components/parameters/Content-Type"}}}},parameters:{Accept:{name:"Accept",in:"header",required:!0,schema:{type:"string"},description:"The `Accept` header field indicates the version of the API the client would like the server to use."},"Content-Length":{name:"Content-Length",in:"header",required:!1,schema:{type:"integer"},description:"The `Content-Length` header field indicates the anticipated size of the payload body. Only sent if there is a body.\n\n**Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes)."},"Content-Type":{name:"Content-Type",in:"header",schema:{type:"string"},required:!0,description:"The `Content-Type` header indicates the specific version of the API used to send the payload body."},Date:{name:"Date",in:"header",schema:{type:"string"},required:!0,description:"The `Date` header field indicates the date when the request was sent."},"X-Forwarded-For":{name:"X-Forwarded-For",in:"header",schema:{type:"string"},required:!1,description:"The `X-Forwarded-For` header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple `X-Forwarded-For` values should be expected and supported by implementers of the API.\n\n**Note:** An alternative to `X-Forwarded-For` is defined in [RFC 7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC 7239 is less-used and supported than `X-Forwarded-For`."},"FSPIOP-Source":{name:"FSPIOP-Source",in:"header",schema:{type:"string"},required:!0,description:"The `FSPIOP-Source` header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field `FSPIOP-Signature`)."},"FSPIOP-Destination":{name:"FSPIOP-Destination",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Destination` header field is a non-HTTP standard field used by the API for HTTP header based routing of requests and responses to the destination. The field should be set by the original sender of the request (if known), so that any entities between the client and the server do not need to parse the payload for routing purposes."},"FSPIOP-Encryption":{name:"FSPIOP-Encryption",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Encryption` header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request."},"FSPIOP-Signature":{name:"FSPIOP-Signature",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-Signature` header field is a non-HTTP standard field used by the API for applying an end-to-end request signature."},"FSPIOP-URI":{name:"FSPIOP-URI",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-URI` header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set)."},"FSPIOP-HTTP-Method":{name:"FSPIOP-HTTP-Method",in:"header",schema:{type:"string"},required:!1,description:"The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information, see [the API Signature document](https://github.com/mojaloop/docs/tree/master/Specification%20Document%20Set)."},ID:{name:"ID",in:"path",required:!0,schema:{type:"string"},description:"The identifier value."},Type:{name:"Type",in:"path",required:!0,schema:{type:"string"},description:"The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`."},SubId:{name:"SubId",in:"path",required:!0,schema:{type:"string"},description:"A sub-identifier of the party identifier, or a sub-type of the party identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`."}}}}];e.exports=r.length<=1?r[0]:r},397:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Pre-linking")},398:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Discovery")},399:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Request consent (OTP)")},400:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Request consent (Web)")},401:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Authentication (OTP)")},402:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Authentication (Third-party FIDO registration)")},403:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISP Linking: Authentication (Web)")},404:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| !pragma teoz true")},405:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| !pragma teoz true")},406:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| !pragma teoz true")},407:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| !pragma teoz true")},408:function(e,t,r){e.exports=r.p+"assets/img/1_subscription.ac999048.svg"},409:function(e,t,r){e.exports=r.p+"assets/img/2_context_auth.611ef77c.svg"},410:function(e,t,r){e.exports=r.p+"assets/img/3_context_transfer.7d14d3b0.svg"},411:function(e,t,r){e.exports=r.p+"assets/img/4_transaction_callback.a0cb61cd.svg"},412:function(e,t,r){e.exports=r.p+"assets/img/listener_states_errors.aef5b78c.svg"},413:function(e,t,r){e.exports=r.p+"assets/img/listener_states_simple.eee228fa.svg"},414:function(e,t,r){e.exports=r.p+"assets/img/PISPTransferDetailedAPI-page1.e8dad49e.svg"},415:function(e,t,r){e.exports=r.p+"assets/img/PISPTransferDetailedAPI-page2.ca9a6daf.svg"},416:function(e,t,r){e.exports=r.p+"assets/img/PISPTransferDetailedAPI-page3.acf978ea.svg"},417:function(e,t,r){e.exports=r.p+"assets/img/PISPTransferSimpleAPI.13a75d71.svg"},418:function(e,t,r){e.exports=r.p+"assets/img/participants.0dd26d7a.svg"},419:function(e,t,r){e.exports=r.p+"assets/img/participants_api.266cd544.svg"},420:function(e,t){throw new Error('Module parse failed: Unexpected character \'#\' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> #!/usr/bin/env bash\n| \n| DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"')},421:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml InboundThirdpartyTransactionModel\n| \n| title InboundThirdpartyTransactionModel")},422:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml OutboundThirdpartyTransactionModel\n| \n| title OutboundThirdpartyTransactionModel")},423:function(e,t){const r=[{swagger:"2.0",info:{version:"1.0",title:"Mojaloop ThirdParty API",description:"A Mojaloop API for thirdparty interactions between PISPs (Payment Initiation Service Providers) and DFSPs (Digital Financial Service Providers)",license:{name:"TBD"}},basePath:"/",schemes:["http","https"],paths:{"/consents":{post:{description:"Create a consent object. Called by DFSP after the succesful creation  and validation of a consentRequest\n",summary:"CreateConsent",operationId:"CreateConsent",tags:["consent"],produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/Consent"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{id:"123",requestId:"456",initiatorId:"PISP A",participantId:"DFSP A",scopes:[{scope:"account.balanceInquiry",accountId:"12345-67890"},{scope:"account.sendTransfer",accountId:"12345-67890"},{scope:"account.sendTransfer",accountId:"77777-38937"}],credential:null}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/consents/{ID}":{put:{description:"Updates a consent object.\n",summary:"UpdateConsent",operationId:"UpdateConsent",tags:["consent"],produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/Consent"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{requestId:"456",initiatorId:"PISP A",participantId:"DFSP A",scopes:[{scope:"account.balanceInquiry",accountId:"12345-67890"},{scope:"account.sendTransfer",accountId:"12345-67890"},{scope:"account.sendTransfer",accountId:"77777-38937"}],credential:{id:"5678",credentialType:"FIDO",credentialStatus:"ACTIVE",challenge:{payload:"base64(...)",signature:"base64(...)"},payload:"base64(...)"}}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/consents/{ID}/createCredential":{post:{summary:"CreateCredentialRequest",operationId:"CreateCredentialRequest",description:"Creates a credential for the given Consent object\n",tags:["consent"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/CreateCredential"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{type:"FIDO"}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/consentRequests":{post:{description:"Create a consent request. Called by a PISP.",summary:"CreateConsentRequest",tags:["consentRequest"],operationId:"CreateConsentRequest",produces:["application/json"],parameters:[{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ConsentRequest"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{id:"456",initiatorId:"PISP A",accountIds:["dfspa.lewis.1234","dfspa.lewis.5678"],authChannels:["Web","OTP"],scopes:["accounts.getBalance","accounts.transfer"],callbackUri:"pisp-app://callback..."}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}},"/consentRequests/{ID}":{put:{description:"Update a consent request\n- Called by a PISP to add the authToken parameter\n- Called by a DFSP to include the authorizationUri\n",summary:"UpdateConsentRequest",tags:["consentRequest"],operationId:"UpdateConsentRequest",produces:["application/json"],parameters:[{$ref:"#/parameters/ID"},{name:"body",in:"body",required:!0,schema:{$ref:"#/definitions/ConsentRequest"}},{$ref:"#/parameters/Content-Length"},{$ref:"#/parameters/Content-Type"},{$ref:"#/parameters/Date"},{$ref:"#/parameters/X-Forwarded-For"},{$ref:"#/parameters/FSPIOP-Source"},{$ref:"#/parameters/FSPIOP-Destination"},{$ref:"#/parameters/FSPIOP-Encryption"},{$ref:"#/parameters/FSPIOP-Signature"},{$ref:"#/parameters/FSPIOP-URI"},{$ref:"#/parameters/FSPIOP-HTTP-Method"}],"x-examples":{"application/json":{initiatorId:"PISP A",accountIds:["dfspa.lewis.1234","dfspa.lewis.5678"],authChannels:["OTP"],scopes:["accounts.getBalance","accounts.transfer"],callbackUri:"pisp-app://callback...",authorizationUri:"pisp-app://callback",authToken:"000111"}},responses:{202:{$ref:"#/responses/Response202"},400:{$ref:"#/responses/ErrorResponse400"},401:{$ref:"#/responses/ErrorResponse401"},403:{$ref:"#/responses/ErrorResponse403"},404:{$ref:"#/responses/ErrorResponse404"},405:{$ref:"#/responses/ErrorResponse405"},406:{$ref:"#/responses/ErrorResponse406"},501:{$ref:"#/responses/ErrorResponse501"},503:{$ref:"#/responses/ErrorResponse503"}}}}},definitions:{CorrelationId:{title:"CorrelationId",type:"string",pattern:"^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",description:"Identifier that correlates all messages of the same sequence. The API data type UUID (Universally Unique Identifier) is a JSON String in canonical format, conforming to RFC 4122, that is restricted by a regular expression for interoperability reasons. An UUID is always 36 characters long, 32 hexadecimal symbols and 4 dashes (‘-‘)."},Date:{title:"Date",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$",description:'The API data type Date is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. This format, as specified in ISO 8601, contains a date only. A more readable version of the format is yyyy-MM-dd. Examples - "1982-05-23", "1987-08-05"'},DateTime:{title:"DateTime",type:"string",pattern:"^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:(\\.\\d{3}))(?:Z|[+-][01]\\d:[0-5]\\d)$",description:'The API data type DateTime is a JSON String in a lexical format that is restricted by a regular expression for interoperability reasons. The format is according to ISO 8601, expressed in a combined date, time and time zone format. A more readable version of the format is yyyy-MM-ddTHH:mm:ss.SSS[-HH:MM]. Examples -  "2016-05-24T08:38:08.699-04:00", "2016-05-24T08:38:08.699Z" (where Z indicates Zulu time zone, same as UTC).'},ErrorCode:{title:"ErrorCode",type:"string",pattern:"^[1-9]\\d{3}$",description:"The API data type ErrorCode is a JSON String of four characters, consisting of digits only. Negative numbers are not allowed. A leading zero is not allowed. Each error code in the API is a four-digit number, for example, 1234, where the first number (1 in the example) represents the high-level error category, the second number (2 in the example) represents the low-level error category, and the last two numbers (34 in the example) represents the specific error."},ErrorDescription:{title:"ErrorDescription",type:"string",minLength:1,maxLength:128,description:"Error description string."},ExtensionKey:{title:"ExtensionKey",type:"string",minLength:1,maxLength:32,description:"Extension key."},ExtensionValue:{title:"ExtensionValue",type:"string",minLength:1,maxLength:128,description:"Extension value."},FspId:{title:"FspId",type:"string",minLength:1,maxLength:32,description:"FSP identifier."},Integer:{title:"Integer",type:"string",pattern:"^[1-9]\\d*$",description:"The API data type Integer is a JSON String consisting of digits only. Negative numbers and leading zeroes are not allowed. The data type is always limited to a specific number of digits."},Note:{title:"Note",type:"string",minLength:1,maxLength:128,description:"Memo assigned to transaction"},AuthChannelsEnum:{title:"AuthChannelsEnum",type:"string",enum:["WEB","OTP"],description:'The channels requested for a ConsentRequest\n- "WEB" The PISP is requesting the WEB Consent flow \n- "OTP" The PISP is requesting the OTP Consent flow\n'},AuthScopesEnum:{title:"AuthScopesEnum",type:"string",enum:["accounts.getBalance","accounts.transfer"],description:'The scopes requested for a ConsentRequest\n- "accounts.getBalance" - Get the balance of a given account\n- "accounts.transfer" - initiate a transfer from an account\n'},CredentialTypeEnum:{title:"CredentialTypeEnum",type:"string",enum:["FIDO"],description:'The type of the Credential\n- "FIDO" - A FIDO public/private keypair\n'},CredentialStatusEnum:{title:"CredentialStatus",type:"string",enum:["PENDING","ACTIVE"],description:'The status of the Credential\'s creation\n- "PENDING" - The PISP has requested a challenge, or the challenge has initialized but not yet answered by the PISP\n- "ACTIVE" - The Credential is valid, and ready to be used by the PISP\n'},Consent:{title:"Consent",type:"object",description:"Data model for the complex type Consent",properties:{id:{allOf:[{$ref:"#/definitions/CorrelationId"}],description:"Common ID between the PISP and FSP for the Consent object decided by the DFSP who creates the Consent\nThis field is REQUIRED for POST /consent\n"},requestId:{allOf:[{$ref:"#/definitions/CorrelationId"}],description:"The id of the ConsentRequest that was used to initiate the creation of this Consent\n"},participantId:{$ref:"#/definitions/FspId",description:"FSP identifier who issued this Consent"},initiatorId:{allOf:[{$ref:"#/definitions/FspId"}],description:"PISP identifier who uses this Consent"},scopes:{type:"array",items:{$ref:"#/definitions/Scope"}},credential:{$ref:"#/definitions/Credential"}}},Scope:{title:"Scope",type:"object",description:"Scope + Account Identifier mapping for a Consent",properties:{scope:{$ref:"#/definitions/AuthScopesEnum"},accountId:{type:"string",description:"A long-lived account identifier provided by the DFSP this MUST NOT be Bank Account Number or anything that may expose a User's private bank account information\n"}},required:["scope","accountId"]},Credential:{title:"Credential",type:"object",description:"A credential used to allow a user to prove their identity and access\nto an account with a DFSP\n",properties:{id:{type:"string",description:"The id of a Credential"},type:{$ref:"#/definitions/CredentialTypeEnum"},status:{$ref:"#/definitions/CredentialStatusEnum"},challenge:{$ref:"#/definitions/CredentialChallenge"},payload:{type:"string",description:"Base64 encoded bytes - The public key of the Public/Private keypair"}},required:["id","credentialType","credentialStatus"]},CreateCredential:{title:"CreateCredential",type:"object",description:"A credential used to allow a user to prove their identity and access\nto an account with a DFSP\n",properties:{type:{$ref:"#/definitions/CredentialTypeEnum"}},required:["credentialType"]},CredentialChallenge:{title:"CredentialChallenge",type:"object",description:"The challenge issued by a DFSP that must be answered by the PISP\n",properties:{payload:{type:"string",description:"Base64 encoded binary of the challenge that must be answered by the PISP"},signature:{type:"string",description:"Base64 enoded binary string or result of the payload signed by the PISP using the private key"}},required:["payload"]},ConsentRequest:{title:"ConsentRequest",type:"object",description:"Data model for the complex type ConsentRequest",properties:{id:{allOf:[{$ref:"#/definitions/CorrelationId"}],description:"Common ID between the PISP and FSP for the ConsentRequest object decided by the PISP. The ID should be reused for resends of the same ConsentRequest. A new ID should be generated for each new ConsentRequest.\nThis field is REQUIRED for POST /consentRequest\n"},initiatorId:{allOf:[{$ref:"#/definitions/FspId"}],description:"PISP identifier who initiated this ConsentRequest"},accountIds:{type:"array",minItems:1,description:"Array of DFSP specific account identifiers",items:{type:"string",description:"DFSP specific account identifier, e.g. `dfspa.alice.1234`"}},authChannels:{type:"array",minItems:1,items:{$ref:"#/definitions/AuthChannelsEnum"},description:"A list of requested authorization channels."},scopes:{type:"array",minItems:1,items:{$ref:"#/definitions/AuthScopesEnum"},description:"A list of the requested scopes a PISP would like for the given Consent"},callbackUri:{type:"string",description:"When using the WEB auth channel, callbackUri determines where the webpage should  redirect at the end of the WEB login flow. This field is REQUIRED when authChannels contains at least 'WEB'\n"},authorizationUri:{type:"string",description:"`authorizationUri` tells the PISP where to direct their user to perform the WEB login flow. For OTP based authorization, this will be set to the same value as the `callbackUri`, to inform the PISP to prompt their user for an OTP.\n"},authToken:{type:"string",description:"The token issued to the PISP at the end of the auth flow. The PISP must fill out this value.  - For the WEB auth flow this token will be passed in along as  a URL parameter in the `callbackUri`.  - For the OTP auth flow, this will be the otp value delivered to the user directly from the DFSP\n"}},required:["id","initiatorId","participantId","authChannels","scopes"]},ErrorInformation:{title:"ErrorInformation",type:"object",description:"Data model for the complex type ErrorInformation.",properties:{errorCode:{$ref:"#/definitions/ErrorCode",description:"Specific error number."},errorDescription:{$ref:"#/definitions/ErrorDescription",description:"Error description string."},extensionList:{$ref:"#/definitions/ExtensionList",description:"Optional list of extensions, specific to deployment."}},required:["errorCode","errorDescription"]},ErrorInformationObject:{title:"ErrorInformationObject",type:"object",description:"Data model for the complex type object that contains ErrorInformation.",properties:{errorInformation:{$ref:"#/definitions/ErrorInformation"}},required:["errorInformation"]},ErrorInformationResponse:{title:"ErrorInformationResponse",type:"object",description:"Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.",properties:{errorInformation:{$ref:"#/definitions/ErrorInformation"}}},Extension:{title:"Extension",type:"object",description:"Data model for the complex type Extension",properties:{key:{$ref:"#/definitions/ExtensionKey",description:"Extension key."},value:{$ref:"#/definitions/ExtensionValue",description:"Extension value."}},required:["key","value"]},ExtensionList:{title:"ExtensionList",type:"object",description:"Data model for the complex type ExtensionList",properties:{extension:{type:"array",items:{$ref:"#/definitions/Extension"},minItems:1,maxItems:16,description:"Number of Extension elements"}},required:["extension"]}},responses:{Response200:{description:"OK"},Response202:{description:"Accepted"},ErrorResponse400:{description:"Bad Request - The application cannot process the request; for example, due to malformed syntax or the payload exceeded size restrictions.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse401:{description:"Unauthorized - The request requires authentication in order to be processed.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse403:{description:"Forbidden - The request was denied and will be denied in the future.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse404:{description:"Not Found - The resource specified in the URI was not found.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse405:{description:"Method Not Allowed - An unsupported HTTP method for the request was used.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse406:{description:"Not acceptable - The server is not capable of generating content according to the Accept headers sent in the request. Used in the API to indicate that the server does not support the version that the client is requesting.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse501:{description:"Not Implemented - The server does not support the requested service. The client should not retry.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}},ErrorResponse503:{description:"Service Unavailable - The server is currently unavailable to accept any new service requests. This should be a temporary state, and the client should retry within a reasonable time frame.",schema:{$ref:"#/definitions/ErrorInformationResponse"},headers:{"Content-Length":{description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body.",type:"integer"},"Content-Type":{description:"The Content-Type header indicates the specific version of the API used to send the payload body.",type:"string"}}}},parameters:{Accept:{name:"Accept",in:"header",required:!0,type:"string",description:"The Accept header field indicates the version of the API the client would like the server to use."},"Content-Length":{name:"Content-Length",in:"header",required:!1,type:"integer",description:"The Content-Length header field indicates the anticipated size of the payload body. Only sent if there is a body. Note - The API supports a maximum size of 5242880 bytes (5 Megabytes)"},"Content-Type":{name:"Content-Type",in:"header",type:"string",required:!0,description:"The Content-Type header indicates the specific version of the API used to send the payload body."},Date:{name:"Date",in:"header",type:"string",required:!0,description:"The Date header field indicates the date when the request was sent."},"X-Forwarded-For":{name:"X-Forwarded-For",in:"header",type:"string",required:!1,description:"The X-Forwarded-For header field is an unofficially accepted standard used for informational purposes of the originating client IP address, as a request might pass multiple proxies, firewalls, and so on. Multiple X-Forwarded-For values as in the example shown here should be expected and supported by implementers of the API. Note - An alternative to X-Forwarded-For is defined in RFC 7239. However, to this point RFC 7239 is less-used and supported than X-Forwarded-For."},"FSPIOP-Source":{name:"FSPIOP-Source",in:"header",type:"string",required:!0,description:"The FSPIOP-Source header field is a non-HTTP standard field used by the API for identifying the sender of the HTTP request. The field should be set by the original sender of the request. Required for routing and signature verification (see header field FSPIOP-Signature)."},"FSPIOP-Destination":{name:"FSPIOP-Destination",in:"header",type:"string",required:!1,description:"The `FSPIOP-Destination` header field is a non-HTTP standard field used by the API for HTTP header-based routing of requests and responses to the destination. The field must be set by the original sender of the request if the destination is known (valid for all services except GET /parties) so that any entities between the client and the server do not need to parse the payload for routing purposes. If the destination is not known (valid for service GET /parties), the field should be left empty."},"FSPIOP-Encryption":{name:"FSPIOP-Encryption",in:"header",type:"string",required:!1,description:"The FSPIOP-Encryption header field is a non-HTTP standard field used by the API for applying end-to-end encryption of the request."},"FSPIOP-Signature":{name:"FSPIOP-Signature",in:"header",type:"string",required:!1,description:"The FSPIOP-Signature header field is a non-HTTP standard field used by the API for applying an end-to-end request signature."},"FSPIOP-URI":{name:"FSPIOP-URI",in:"header",type:"string",required:!1,description:"The FSPIOP-URI header field is a non-HTTP standard field used by the API for signature verification, should contain the service URI. Required if signature verification is used, for more information see API Signature document."},"FSPIOP-HTTP-Method":{name:"FSPIOP-HTTP-Method",in:"header",type:"string",required:!1,description:"The FSPIOP-HTTP-Method header field is a non-HTTP standard field used by the API for signature verification, should contain the service HTTP method. Required if signature verification is used, for more information see API Signature document."},ID:{name:"ID",in:"path",required:!0,type:"string"},Type:{name:"Type",in:"path",required:!0,type:"string"},SubId:{name:"SubId",in:"path",required:!0,type:"string"}}}];e.exports=r.length<=1?r[0]:r},424:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| box \"PISP\"")},425:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| box \"PISP\"")},426:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| box \"Mojaloop\"")},427:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| ")},428:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| hide empty description")},429:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| hide empty description")},430:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISPTransferDetailedAPI")},431:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISPTransferSimpleAPI")},432:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISPTransferSimpleAPI")},433:function(e,t){throw new Error("Module parse failed: Unexpected character '@' (1:0)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> @startuml\n| \n| title PISPGetTransactionRequest")},434:function(e,t){throw new Error('Module parse failed: Unexpected token (1:4)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> box "Mobile device"\n|     actor "Ayesha\\n(+44 8765 4321)" as CA\n|     participant "PISP App" as App')},435:function(e,t){throw new Error('Module parse failed: Unexpected token (1:4)\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\n> box "PISP"\n| participant "PISP Server" as D1\n| end box')},443:function(e,t,r){"use strict";r.r(t);r(44),r(308);var s=r(389),n=r.n(s),o=(r(391),{props:["src"],name:"ApiDocWrapper",data:function(){return{}},mounted:function(){this.$nextTick((function(){var e=document.getElementById("api-doc-wrapper"),t=r(392)("./"+e.dataset.src);window.location.href.split("/").pop(),n()({spec:t,domNode:e,oauth2RedirectUrl:"/oauth2-redirect.html",withCredentials:!0,docExpansion:"list",deepLinking:!0,requestInterceptor:function(e){return e.credentials="omit",e}}).initOAuth({usePkceWithAuthorizationCodeGrant:!0})}))}}),a=r(43),i=Object(a.a)(o,(function(){var e=this.$createElement;return(this._self._c||e)("div",{attrs:{id:"api-doc-wrapper","data-src":this.src}})}),[],!1,null,null,null);t.default=i.exports}}]);